[{"content":"MySQL Command-Line Client mysql is a simple SQL shell with input line editing capabilities. It supports interactive and noninteractive use. When used interactively, query results are presented in an ASCII-table format. When used noninteractively (for example, as a filter), the result is presented in tab-separated format. The output format can be changed using command options.\nIf you have problems due to insufficient memory for large result sets, use the --quick option. This forces mysql to retrieve results from the server a row at a time rather than retrieving the entire result set and buffering it in memory before displaying it. This is done by returning the result set using the mysql_use_result() C API function in the client/server library rather than mysql_store_result().\nNote: Alternatively, MySQL Shell offers access to the X DevAPI. For details, see MySQL Shell 8.0.\nUsing mysql is very easy. Invoke it from the prompt of your command interpreter as follows:\n1 mysql db_name Or:\n1 mysql --user=user_name --password db_name In this case, you\u0026rsquo;ll need to enter your password in response to the prompt that mysql displays:\n1 Enter password: your_password Then type an SQL statement, end it with ;, \\g, or \\G and press Enter.\nTyping Control+C interrupts the current statement if there is one, or cancels any partial input line otherwise.\nYou can execute SQL statements in a script file (batch file) like this:\n1 mysql db_name \u0026lt; script.sql \u0026gt; output.tab On Unix, the mysql client logs statements executed interactively to a history file. See mysql Client Logging.\nmysql Client Options mysql supports the following options, which can be specified on the command line or in the [mysql] and [client] groups of an option file. For information about option files used by MySQL programs, see Using Option Files.\nOption Name Description Introduced Deprecated --auto-rehash Enable automatic rehashing --auto-vertical-output Enable automatic vertical result set display --batch Do not use history file --binary-as-hex Display binary values in hexadecimal notation --binary-mode Disable \\r\\n - to - \\n translation and treatment of \\0 as end-of-query --bind-address Use specified network interface to connect to MySQL Server --character-sets-dir Directory where character sets are installed --column-names Write column names in results --column-type-info Display result set metadata --comments Whether to retain or strip comments in statements sent to the server --compress Compress all information sent between client and server 8.0.18 --compression-algorithms Permitted compression algorithms for connections to server 8.0.18 --connect-expired-password Indicate to server that client can handle expired-password sandbox mode --connect-timeout Number of seconds before connection timeout --database The database to use --debug Write debugging log; supported only if MySQL was built with debugging support --debug-check Print debugging information when program exits --debug-info Print debugging information, memory, and CPU statistics when program exits --default-auth Authentication plugin to use --default-character-set Specify default character set --defaults-extra-file Read named option file in addition to usual option files --defaults-file Read only named option file --defaults-group-suffix Option group suffix value --delimiter Set the statement delimiter --dns-srv-name Use DNS SRV lookup for host information 8.0.22 --enable-cleartext-plugin Enable cleartext authentication plugin --execute Execute the statement and quit --fido-register-factor Multifactor authentication factors for which registration must be done 8.0.27 8.0.35 --force Continue even if an SQL error occurs --get-server-public-key Request RSA public key from server --help Display help message and exit --histignore Patterns specifying which statements to ignore for logging --host Host on which MySQL server is located --html Produce HTML output --ignore-spaces Ignore spaces after function names --init-command SQL statement to execute after connecting --line-numbers Write line numbers for errors --load-data-local-dir Directory for files named in LOAD DATA LOCAL statements 8.0.21 --local-infile Enable or disable for LOCAL capability for LOAD DATA --login-path Read login path options from .mylogin.cnf --max-allowed-packet Maximum packet length to send to or receive from server --max-join-size The automatic limit for rows in a join when using --safe-updates --named-commands Enable named mysql commands --net-buffer-length Buffer size for TCP/IP and socket communication --network-namespace Specify network namespace 8.0.22 --no-auto-rehash Disable automatic rehashing --no-beep Do not beep when errors occur --no-defaults Read no option files --oci-config-file Defines an alternate location for the Oracle Cloud Infrastructure CLI configuration file. 8.0.27 --one-database Ignore statements except those for the default database named on the command line --pager Use the given command for paging query output --password Password to use when connecting to server --password1 First multifactor authentication password to use when connecting to server 8.0.27 --password2 Second multifactor authentication password to use when connecting to server 8.0.27 --password3 Third multifactor authentication password to use when connecting to server 8.0.27 --pipe Connect to server using named pipe (Windows only) --plugin-authentication-kerberos-client-mode Permit GSSAPI pluggable authentication through the MIT Kerberos library on Windows 8.0.32 --plugin-dir Directory where plugins are installed --port TCP/IP port number for connection --print-defaults Print default options --prompt Set the prompt to the specified format --protocol Transport protocol to use --quick Do not cache each query result --raw Write column values without escape conversion --reconnect If the connection to the server is lost, automatically try to reconnect --safe-updates, --i-am-a-dummy Allow only UPDATE and DELETE statements that specify key values --select-limit The automatic limit for SELECT statements when using --safe-updates --server-public-key-path Path name to file containing RSA public key --shared-memory-base-name Shared-memory name for shared-memory connections (Windows only) --show-warnings Show warnings after each statement if there are any --sigint-ignore Ignore SIGINT signals (typically the result of typing Control+C) --silent Silent mode --skip-auto-rehash Disable automatic rehashing --skip-column-names Do not write column names in results --skip-line-numbers Skip line numbers for errors --skip-named-commands Disable named mysql commands --skip-pager Disable paging --skip-reconnect Disable reconnecting --socket Unix socket file or Windows named pipe to use --ssl-ca File that contains list of trusted SSL Certificate Authorities --ssl-capath Directory that contains trusted SSL Certificate Authority certificate files --ssl-cert File that contains X.509 certificate --ssl-cipher Permissible ciphers for connection encryption --ssl-crl File that contains certificate revocation lists --ssl-crlpath Directory that contains certificate revocation-list files --ssl-fips-mode Whether to enable FIPS mode on client side 8.0.34 --ssl-key File that contains X.509 key --ssl-mode Desired security state of connection to server --ssl-session-data File that contains SSL session data 8.0.29 --ssl-session-data-continue-on-failed-reuse Whether to establish connections if session reuse fails 8.0.29 --syslog Log interactive statements to syslog --table Display output in tabular format --tee Append a copy of output to named file --tls-ciphersuites Permissible TLSv1.3 ciphersuites for encrypted connections 8.0.16 --tls-version Permissible TLS protocols for encrypted connections --unbuffered Flush the buffer after each query --user MySQL user name to use when connecting to server --verbose Verbose mode --version Display version information and exit --vertical Print query output rows vertically (one line per column value) --wait If the connection cannot be established, wait and retry instead of aborting --xml Produce XML output --zstd-compression-level Compression level for connections to server that use zstd compression 8.0.18 --help, -? Command-Line Format --help Display a help message and exit.\n--auto-rehash Command-Line Format --auto-rehash Disabled by skip-auto-rehash Enable automatic rehashing. This option is on by default, which enables database, table, and column name completion. Use --disable-auto-rehash to disable rehashing. That causes mysql to start faster, but you must issue the rehash command or its \\# shortcut if you want to use name completion.\nTo complete a name, enter the first part and press Tab. If the name is unambiguous, mysql completes it. Otherwise, you can press Tab again to see the possible names that begin with what you have typed so far. Completion does not occur if there is no default database.\nNote: This feature requires a MySQL client that is compiled with the readline library. Typically, the readline library is not available on Windows.\n--auto-vertical-output Command-Line Format --auto-vertical-output Cause result sets to be displayed vertically if they are too wide for the current window, and using normal tabular format otherwise. (This applies to statements terminated by ; or \\G.)\n--batch, -B Command-Line Format --batch Print results using tab as the column separator, with each row on a new line. With this option, mysql does not use the history file.\nBatch mode results in nontabular output format and escaping of special characters. Escaping may be disabled by using raw mode; see the description for the --raw option.\n--binary-as-hex Command-Line Format --binary-as-hex Type Boolean Default Value(≥ 8.0.19) FALSE in noninteractive mode Default Value(≤ 8.0.18) FALSE When this option is given, mysql displays binary data using hexadecimal notation (0xvalue). This occurs whether the overall output display format is tabular, vertical, HTML, or XML.\n--binary-as-hex when enabled affects display of all binary strings, including those returned by functions such as CHAR() and UNHEX(). The following example demonstrates this using the ASCII code for A (65 decimal, 41 hexadecimal):\n--binary-as-hex disabled: 1 2 3 4 5 6 mysql\u0026gt; SELECT CHAR(0x41), UNHEX(\u0026#39;41\u0026#39;); +------------+-------------+ | CHAR(0x41) | UNHEX(\u0026#39;41\u0026#39;) | +------------+-------------+ | A | A | +------------+-------------+ --binary-as-hex enabled: 1 2 3 4 5 6 mysql\u0026gt; SELECT CHAR(0x41), UNHEX(\u0026#39;41\u0026#39;); +------------------------+--------------------------+ | CHAR(0x41) | UNHEX(\u0026#39;41\u0026#39;) | +------------------------+--------------------------+ | 0x41 | 0x41 | +------------------------+--------------------------+ To write a binary string expression so that it displays as a character string regardless of whether --binary-as-hex is enabled, use these techniques:\nThe CHAR() function has a USING charset clause: 1 2 3 4 5 6 mysql\u0026gt; SELECT CHAR(0x41 USING utf8mb4); +--------------------------+ | CHAR(0x41 USING utf8mb4) | +--------------------------+ | A | +--------------------------+ More generally, use CONVERT() to convert an expression to a given character set: 1 2 3 4 5 6 mysql\u0026gt; SELECT CONVERT(UNHEX(\u0026#39;41\u0026#39;) USING utf8mb4); +------------------------------------+ | CONVERT(UNHEX(\u0026#39;41\u0026#39;) USING utf8mb4) | +------------------------------------+ | A | +------------------------------------+ As of MySQL 8.0.19, when mysql operates in interactive mode, this option is enabled by default. In addition, output from the status (or \\s) command includes this line when the option is enabled implicitly or explicitly:\n1 Binary data as: Hexadecimal To disable hexadecimal notation, use --skip-binary-as-hex\n--binary-model Command-Line Format --binary-mode This option helps when processing mysqlbinlog output that may contain BLOB values. By default, mysql translates \\r\\n in statement strings to \\n and interprets \\0 as the statement terminator. --binary-mode disables both features. It also disables all mysql commands except charset and delimiter in noninteractive mode (for input piped to mysql or loaded using the source command).\n--bind-address=ip_address Command-Line Format --bind-address=ip_address On a computer having multiple network interfaces, use this option to select which interface to use for connecting to the MySQL server.\n--character-sets-dir=dir_name Command-Line Format --character-sets-dir=dir_name Type Directory name The directory where character sets are installed. See \u0026ldquo;Character Set Configuration\u0026rdquo;.\n--column-names Command-Line Format --column-names Write column names in results.\n--column-type-info Command-Line Format --column-type-info Display result set metadata. This information corresponds to the contents of C API MYSQL_FIELD data structures. See C API Basic Data Structures.\n--comments, -c Command-Line Format --comments Type Boolean Default Value FALSE Whether to strip or preserve comments in statements sent to the server. The default is --skip-comments (strip comments), enable with --comments (preserve comments).\nNote: The mysql client always passes optimizer hints to the server, regardless of whether this option is given. Comment stripping is deprecated. Expect this feature and the options to control it to be removed in a future MySQL release.\n--compress, -C Command-Line Format --compress[={OFF|ON}] Deprecated 8.0.18 Type Boolean Default Value OFF Compress all information sent between the client and the server if possible. See \u0026ldquo;Connection Compression Control\u0026rdquo;.\nAs of MySQL 8.0.18, this option is deprecated. Expect it to be removed in a future version of MySQL. See Configuring Legacy Connection Compression.\n--compression-algorithms=value Command-Line Format --compression-algorithms=value Deprecated 8.0.18 Type Set Default Value uncompressed Valid Values zlib / zstd / uncompressed The permitted compression algorithms for connections to the server. The available algorithms are the same as for the protocol_compression_algorithms system variable. The default value is uncompressed.\nFor more information, see \u0026ldquo;Connection Compression Control\u0026rdquo;.\nThis option was added in MySQL 8.0.18.\n--connect-expired-password Command-Line Format --connect-expired-password Indicate to the server that the client can handle sandbox mode if the account used to connect has an expired password. This can be useful for noninteractive invocations of mysql because normally the server disconnects noninteractive clients that attempt to connect using an account with an expired password. (See \u0026ldquo;Server Handling of Expired Passwords\u0026rdquo;.)\n--connect-timeout=value Command-Line Format --connect-timeout=value Type Numeric Default Value 0 The number of seconds before connection timeout. (Default value is 0.)\n--database=db_name, -D db_name Command-Line Format --database=dbname Type String The database to use. This is useful primarily in an option file.\n--debug [=debug_options], -# [debug_options] Command-Line Format --debug[=debug_options] Type String Default Value d:t:o,/tmp/mysql.trace Write a debugging log. A typical debug_options string is d:t:o,file_name. The default is d:t:o,/tmp/mysql.trace.\nThis option is available only if MySQL was built using WITH_DEBUG. MySQL release binaries provided by Oracle are not built using this option.\n--debug-check Command-Line Format --debug-check Type Boolean Default Value FALSE Print some debugging information when the program exits.\nThis option is available only if MySQL was built using WITH_DEBUG. MySQL release binaries provided by Oracle are not built using this option.\n--debug-info, -T Command-Line Format --debug-info Type Boolean Default Value FALSE Print debugging information and memory and CPU usage statistics when the program exits.\nThis option is available only if MySQL was built using WITH_DEBUG. MySQL release binaries provided by Oracle are not built using this option.\n--default-auth=plugin Command-Line Format --default-auth=plugin Type String A hint about which client-side authentication plugin to use. See \u0026ldquo;Pluggable Authentication\u0026rdquo;.\n--default-character-set=charset_name Command-Line Format --default-character-set=charset_name Type String Use charset_name as the default character set for the client and connection.\nThis option can be useful if the operating system uses one character set and the mysql client by default uses another. In this case, output may be formatted incorrectly. You can usually fix such issues by using this option to force the client to use the system character set instead.\nFor more information, see \u0026ldquo;Connection Character Sets and Collations\u0026rdquo;, and \u0026ldquo;Character Set Configuration\u0026rdquo;.\n--defaults-extra-file=file-name Command-Line Format --defaults-extra-file=file_name Type File name Read this option file after the global option file but (on Unix) before the user option file. If the file does not exist or is otherwise inaccessible, an error occurs. If file_name is not an absolute path name, it is interpreted relative to the current directory.\nFor additional information about this and other option-file options, see \u0026ldquo;Command-Line Options that Affect Option-File Handling\u0026rdquo;.\n--defaults-file=file_name Command-Line Format --defaults-file=file_name Type File name Use only the given option file. If the file does not exist or is otherwise inaccessible, an error occurs. If file_name is not an absolute path name, it is interpreted relative to the current directory.\nException: Even with --defaults-file, client programs read .mylogin.cnf.\nFor additional information about this and other option-file options, see \u0026ldquo;Command-Line Options that Affect Option-File Handling\u0026rdquo;.\n--defaults-group-suffix=str Command-Line Format --defaults-group-suffix=str Type String Read not only the usual option groups, but also groups with the usual names and a suffix of str. For example, mysql normally reads the [client] and [mysql] groups. If this option is given as --defaults-group-suffix=_other, mysql also reads the [client_other] and [mysql_other] groups.\nFor additional information about this and other option-file options, see \u0026ldquo;Command-Line Options that Affect Option-File Handling\u0026rdquo;.\n--delimiter=str Command-Line Format --delimiter=str Type String Default Value ; Set the statement delimiter. The default is the semicolon character (;).\n--disable-named-commands Disable named commands. Use the \\* form only, or use named commands only at the beginning of a line ending with a semicolon (;). mysql starts with this option enabled by default. However, even with this option, long-format commands still work from the first line. See \u0026ldquo;mysql Client Commands\u0026rdquo;.\n--dns-srv-name=name Command-Line Format --dns-srv-name=name Introduced 8.0.22 Type String Specifies the name of a DNS SRV record that determines the candidate hosts to use for establishing a connection to a MySQL server. For information about DNS SRV support in MySQL, see \u0026ldquo;Connecting to the Server Using DNS SRV Records\u0026rdquo;.\nSuppose that DNS is configured with this SRV information for the example.com domain:\n1 2 3 4 5 Name TTL Class Priority Weight Port Target _mysql._tcp.example.com. 86400 IN SRV 0 5 3306 host1.example.com _mysql._tcp.example.com. 86400 IN SRV 0 10 3306 host2.example.com _mysql._tcp.example.com. 86400 IN SRV 10 5 3306 host3.example.com _mysql._tcp.example.com. 86400 IN SRV 20 5 3306 host4.example.com To use that DNS SRV record, invoke mysql like this:\n1 mysql --dns-srv-name=_mysql._tcp.example.com mysql then attempts a connection to each server in the group until a successful connection is established. A failure to connect occurs only if a connection cannot be established to any of the servers. The priority and weight values in the DNS SRV record determine the order in which servers should be tried.\nWhen invoked with --dns-srv-name, mysql attempts to establish TCP connections only.\nThe --dns-srv-name option takes precedence over the --host option if both are given. --dns-srv-name causes connection establishment to use the mysql_real_connect_dns_srv() C API function rather than mysql_real_connect(). However, if the connect command is subsequently used at runtime and specifies a host name argument, that host name takes precedence over any --dns-srv-name option given at mysql startup to specify a DNS SRV record.\nThis option was added in MySQL 8.0.22.\n--enable-cleartext-plugin Command-Line Format --enable-cleartext-plugin Type Boolean Default Value FALSE Enable the mysql_clear_password cleartext authentication plugin. (See \u0026ldquo;Client-Side Cleartext Pluggable Authentication\u0026rdquo;.)\n--execute=statement, -e statement Command-Line Format --execute=statement Type String Execute the statement and quit. The default output format is like that produced with --batch. See \u0026ldquo;Using Options on the Command Line\u0026rdquo;, for some examples. With this option, mysql does not use the history file.\n--fido-register-factor=value Command-Line Format --fido-register-factor=value Introduced 8.0.27 Deprecated 8.0.35 Type String Note: As of MySQL 8.0.35, this option is deprecated and subject to removal in a future MySQL release.\nThe factor or factors for which FIDO device registration must be performed. This option value must be a single value, or two values separated by commas. Each value must be 2 or 3, so the permitted option values are \u0026lsquo;2\u0026rsquo;, \u0026lsquo;3\u0026rsquo;, \u0026lsquo;2,3\u0026rsquo; and \u0026lsquo;3,2\u0026rsquo;.\nFor example, an account that requires registration for a 3rd authentication factor invokes the mysql client as follows:\n1 mysql --user=user_name --fido-register-factor=3 An account that requires registration for a 2nd and 3rd authentication factor invokes the mysql client as follows:\n1 mysql --user=user_name --fido-register-factor=2,3 If registration is successful, a connection is established. If there is an authentication factor with a pending registration, a connection is placed into pending registration mode when attempting to connect to the server. In this case, disconnect and reconnect with the correct --fido-register-factor value to complete the registration.\nRegistration is a two step process comprising initiate registration and finish registration steps. The initiate registration step executes this statement:\n1 ALTER USER user factor INITIATE REGISTRATION The statement returns a result set containing a 32 byte challenge, the user name, and the relying party ID (see \u0026ldquo;\u0026ldquo;authentication_fido_rp_id\u0026rdquo;\u0026rdquo;).\nThe finish registration step executes this statement:\n1 ALTER USER user factor FINISH REGISTRATION SET CHALLENGE_RESPONSE AS \u0026#39;auth_string\u0026#39; The statement completes the registration and sends the following information to the server as part of the auth_string: authenticator data, an optional attestation certificate in X.509 format, and a signature.\nThe initiate and registration steps must be performed in a single connection, as the challenge received by the client during the initiate step is saved to the client connection handler. Registration would fail if the registration step was performed by a different connection. The --fido-register-factor option executes both the initiate and registration steps, which avoids the failure scenario described above and prevents having to execute the ALTER USER initiate and registration statements manually.\nThe --fido-register-factor option is only available for the mysql client and MySQL Shell. Other MySQL client programs do not support it.\nFor related information, see \u0026ldquo;Using FIDO Authentication\u0026rdquo;.\n--force, -f Command-Line Format --force Continue even if an SQL error occurs.\n--get-server-public-key Command-Line Format --get-server-public-key Type Boolean Request from the server the public key required for RSA key pair-based password exchange. This option applies to clients that authenticate with the caching_sha2_password authentication plugin. For that plugin, the server does not send the public key unless requested. This option is ignored for accounts that do not authenticate with that plugin. It is also ignored if RSA-based password exchange is not used, as is the case when the client connects to the server using a secure connection.\nIf --server-public-key-path=file_name is given and specifies a valid public key file, it takes precedence over --get-server-public-key.\nFor information about the caching_sha2_password plugin, see \u0026ldquo;Caching SHA-2 Pluggable Authentication\u0026rdquo;.\n--histignore Command-Line Format --histignore=pattern_list Type String A list of one or more colon-separated patterns specifying statements to ignore for logging purposes. These patterns are added to the default pattern list (\u0026quot;*IDENTIFIED*:*PASSWORD*\u0026quot;). The value specified for this option affects logging of statements written to the history file, and to syslog if the --syslog option is given. For more information, see \u0026ldquo;mysql Client Logging\u0026rdquo;.\n--host=host_name, -h host_name Command-Line Format --host=host_name Type String Default Value localhost Connect to the MySQL server on the given host.\nThe --dns-srv-name option takes precedence over the --host option if both are given. --dns-srv-name causes connection establishment to use the mysql_real_connect_dns_srv() C API function rather than mysql_real_connect(). However, if the connect command is subsequently used at runtime and specifies a host name argument, that host name takes precedence over any --dns-srv-name option given at mysql startup to specify a DNS SRV record.\n--html, -H Command-Line Format --html Produce HTML output.\n--ignore-spaces, -i Command-Line Format --ignore-spaces Ignore spaces after function names. The effect of this is described in the discussion for the IGNORE_SPACE SQL mode (see \u0026ldquo;Server SQL Modes\u0026rdquo;).\n--init-command=str Command-Line Format --init-command=str SQL statement to execute after connecting to the server. If auto-reconnect is enabled, the statement is executed again after reconnection occurs.\n--line-numbers Command-Line Format --line-numbers Disabled by skip-line-numbers Write line numbers for errors. Disable this with --skip-line-numbers.\n--load-data-local-dir=dir_name Command-Line Format --load-data-local-dir=dir_name Introduced 8.0.21 Type Directory name Default Value empty string This option affects the client-side LOCAL capability for LOAD DATA operations. It specifies the directory in which files named in LOAD DATA LOCAL statements must be located. The effect of --load-data-local-dir depends on whether LOCAL data loading is enabled or disabled:\nIf LOCAL data loading is enabled, either by default in the MySQL client library or by specifying --local-infile[=1], the --load-data-local-dir option is ignored.\nIf LOCAL data loading is disabled, either by default in the MySQL client library or by specifying --local-infile=0, the --load-data-local-dir option applies.\nWhen --load-data-local-dir applies, the option value designates the directory in which local data files must be located. Comparison of the directory path name and the path name of files to be loaded is case-sensitive regardless of the case sensitivity of the underlying file system. If the option value is the empty string, it names no directory, with the result that no files are permitted for local data loading.\nFor example, to explicitly disable local data loading except for files located in the /my/local/data directory, invoke mysql like this:\n1 mysql --local-infile=0 --load-data-local-dir=/my/local/data When both --local-infile and --load-data-local-dir are given, the order in which they are given does not matter.\nSuccessful use of LOCAL load operations within mysql also requires that the server permits local loading; see \u0026ldquo;Security Considerations for LOAD DATA LOCAL\u0026rdquo;\nThe --load-data-local-dir option was added in MySQL 8.0.21.\n--local-infile[={0|1}] Command-Line Format --local-infile[={0|1}] Type Boolean Default Value FALSE By default, LOCAL capability for LOAD DATA is determined by the default compiled into the MySQL client library. To enable or disable LOCAL data loading explicitly, use the --local-infile option. When given with no value, the option enables LOCAL data loading. When given as --local-infile=0 or --local-infile=1, the option disables or enables LOCAL data loading.\nIf LOCAL capability is disabled, the --load-data-local-dir option can be used to permit restricted local loading of files located in a designated directory.\nSuccessful use of LOCAL load operations within mysql also requires that the server permits local loading; see \u0026ldquo;Security Considerations for LOAD DATA LOCAL\u0026rdquo;\n--login-path=name Command-Line Format --login-path=name Type String Read options from the named login path in the .mylogin.cnf login path file. A \u0026ldquo;login path\u0026rdquo; is an option group containing options that specify which MySQL server to connect to and which account to authenticate as. To create or modify a login path file, use the mysql_config_editor utility. See \u0026ldquo;mysql_config_editor — MySQL Configuration Utility\u0026rdquo;.\nFor additional information about this and other option-file options, see \u0026ldquo;Command-Line Options that Affect Option-File Handling\u0026rdquo;.\n--max-allowed-packet=value Command-Line Format --max-allowed-packet=value Type Numeric Default Value 16777216 The maximum size of the buffer for client/server communication. The default is 16MB, the maximum is 1GB.\n--max-join-size=value Command-Line Format --max-join-size=value Type Numeric Default Value 1000000 The automatic limit for rows in a join when using --safe-updates. (Default value is 1,000,000.)\n--named-commands, -G Command-Line Format --named-commands Disabled by skip-named-commands Enable named mysql commands. Long-format commands are permitted, not just short-format commands. For example, quit and \\q both are recognized. Use --skip-named-commands to disable named commands. See \u0026ldquo;mysql Client Commands\u0026rdquo;.\n--net-buffer-length=value Command-Line Format --net-buffer-length=value Type Numeric Default Value 16384 The buffer size for TCP/IP and socket communication. (Default value is 16KB.)\n--network-namespace=name Command-Line Format --network-namespace=name Introduced 8.0.22 Type String The network namespace to use for TCP/IP connections. If omitted, the connection uses the default (global) namespace. For information about network namespaces, see \u0026ldquo;Network Namespace Support\u0026rdquo;.\nThis option was added in MySQL 8.0.22. It is available only on platforms that implement network namespace support.\n--no-auto-rehash, -A Command-Line Format --no-auto-rehash Deprecated Yes This has the same effect as --skip-auto-rehash. See the description for --auto-rehash.\n--no-beep, -b Command-Line Format --no-beep Do not beep when errors occur.\n--no-defaults Command-Line Format --no-defaults Do not read any option files. If program startup fails due to reading unknown options from an option file, --no-defaults can be used to prevent them from being read.\nThe exception is that the .mylogin.cnf file is read in all cases, if it exists. This permits passwords to be specified in a safer way than on the command line even when --no-defaults is used. To create .mylogin.cnf, use the mysql_config_editor utility. See \u0026ldquo;mysql_config_editor — MySQL Configuration Utility\u0026rdquo;.\nFor additional information about this and other option-file options, see \u0026ldquo;Command-Line Options that Affect Option-File Handling\u0026rdquo;.\n--one-database, -o Command-Line Format --one-database Ignore statements except those that occur while the default database is the one named on the command line. This option is rudimentary and should be used with care. Statement filtering is based only on USE statements.\nInitially, mysql executes statements in the input because specifying a database db_name on the command line is equivalent to inserting USE db_name at the beginning of the input. Then, for each USE statement encountered, mysql accepts or rejects following statements depending on whether the database named is the one on the command line. The content of the statements is immaterial.\nSuppose that mysql is invoked to process this set of statements:\n1 2 3 4 5 6 7 DELETE FROM db2.t2; USE db2; DROP TABLE db1.t1; CREATE TABLE db1.t1 (i INT); USE db1; INSERT INTO t1 (i) VALUES(1); CREATE TABLE db2.t1 (j INT); If the command line is mysql --force --one-database db1, mysql handles the input as follows:\nThe DELETE statement is executed because the default database is db1, even though the statement names a table in a different database.\nThe DROP TABLE and CREATE TABLE statements are not executed because the default database is not db1, even though the statements name a table in db1.\nThe INSERT and CREATE TABLE statements are executed because the default database is db1, even though the CREATE TABLE statement names a table in a different database.\n--pager[=command] Command-Line Format --pager[=command] Disabled by skip-pager Type String Use the given command for paging query output. If the command is omitted, the default pager is the value of your PAGER environment variable. Valid pagers are less, more, cat [\u0026gt; filename], and so forth. This option works only on Unix and only in interactive mode. To disable paging, use --skip-pager. Section \u0026ldquo;mysql Client Commands\u0026rdquo;, discusses output paging further.\n--password[=password], -p [password] Command-Line Format --password[=password] Type String The password of the MySQL account used for connecting to the server. The password value is optional. If not given, mysql prompts for one. If given, there must be no space between --password= or -p and the password following it. If no password option is specified, the default is to send no password.\nSpecifying a password on the command line should be considered insecure. To avoid giving the password on the command line, use an option file. See \u0026ldquo;End-User Guidelines for Password Security\u0026rdquo;.\nTo explicitly specify that there is no password and that mysql should not prompt for one, use the --skip-password option.\n--password1[=pass_val] The password for multifactor authentication factor 1 of the MySQL account used for connecting to the server. The password value is optional. If not given, mysql prompts for one. If given, there must be no space between --password1= and the password following it. If no password option is specified, the default is to send no password.\nSpecifying a password on the command line should be considered insecure. To avoid giving the password on the command line, use an option file. See \u0026ldquo;End-User Guidelines for Password Security\u0026rdquo;.\nTo explicitly specify that there is no password and that mysql should not prompt for one, use the --skip-password1 option.\n--password1 and --password are synonymous, as are --skip-password1 and --skip-password.\n--password2[=pass_val] The password for multifactor authentication factor 2 of the MySQL account used for connecting to the server. The semantics of this option are similar to the semantics for --password1; see the description of that option for details.\n--password3[=pass_val] The password for multifactor authentication factor 3 of the MySQL account used for connecting to the server. The semantics of this option are similar to the semantics for --password1; see the description of that option for details.\n--pipe, -W Command-Line Format --pipe Type String On Windows, connect to the server using a named pipe. This option applies only if the server was started with the named_pipe system variable enabled to support named-pipe connections. In addition, the user making the connection must be a member of the Windows group specified by the named_pipe_full_access_group system variable.\n--plugin-authentication-kerberos-client-mode=value Command-Line Format --plugin-authentication-kerberos-client-mode Introduced 8.0.32 Type String Default Value SSPI Valid Values GSSAPI / SSPI On Windows, the authentication_kerberos_client authentication plugin supports this plugin option. It provides two possible values that the client user can set at runtime: SSPI and GSSAPI.\nThe default value for the client-side plugin option uses Security Support Provider Interface (SSPI), which is capable of acquiring credentials from the Windows in-memory cache. Alternatively, the client user can select a mode that supports Generic Security Service Application Program Interface (GSSAPI) through the MIT Kerberos library on Windows. GSSAPI is capable of acquiring cached credentials previously generated by using the kinit command.\nFor more information, see Commands for Windows Clients in GSSAPI Mode.\n--plugin-dir=dir_name Command-Line Format --plugin-dir=dir_name Type Directory name The directory in which to look for plugins. Specify this option if the --default-auth option is used to specify an authentication plugin but mysql does not find it. See \u0026ldquo;Pluggable Authentication\u0026rdquo;.\n--port=port_num, -P port_num Command-Line Format --port=port_num Type Numeric Default Value 3306 For TCP/IP connections, the port number to use.\n--print-defaults Command-Line Format --print-defaults Print the program name and all options that it gets from option files.\nFor additional information about this and other option-file options, see \u0026ldquo;Command-Line Options that Affect Option-File Handling\u0026rdquo;.\n--protocol={TCP|SOCKET|PIPE|MEMORY} Command-Line Format --protocol=type Type String Default Value [see text] Valid Values TCP / SOCKET / PIPE / MEMORY The transport protocol to use for connecting to the server. It is useful when the other connection parameters normally result in use of a protocol other than the one you want. For details on the permissible values, see Section \u0026ldquo;Connection Transport Protocols\u0026rdquo;.\n--quick, -q Command-Line Format --quick Do not cache each query result, print each row as it is received. This may slow down the server if the output is suspended. With this option, mysql does not use the history file.\n--raw, -r Command-Line Format --raw For tabular output, the \u0026ldquo;boxing\u0026rdquo; around columns enables one column value to be distinguished from another. For nontabular output (such as is produced in batch mode or when the --batch or --silent option is given), special characters are escaped in the output so they can be identified easily. Newline, tab, NUL, and backslash are written as \\n, \\t, \\0, and \\\\. The --raw option disables this character escaping.\nThe following example demonstrates tabular versus nontabular output and the use of raw mode to disable escaping:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 % mysql mysql\u0026gt; SELECT CHAR(92); +----------+ | CHAR(92) | +----------+ | \\ | +----------+ % mysql -s mysql\u0026gt; SELECT CHAR(92); CHAR(92) \\\\ % mysql -s -r mysql\u0026gt; SELECT CHAR(92); CHAR(92) \\ --reconnect Command-Line Format --reconnect Disabled by skip-reconnect If the connection to the server is lost, automatically try to reconnect. A single reconnect attempt is made each time the connection is lost. To suppress reconnection behavior, use --skip-reconnect.\n--asfe-updates, --i-am-a-dummy, -U Command-Line Format --safe-updates / --i-am-a-dummy Type Boolean Default Value FALSE If this option is enabled, UPDATE and DELETE statements that do not use a key in the WHERE clause or a LIMIT clause produce an error. In addition, restrictions are placed on SELECT statements that produce (or are estimated to produce) very large result sets. If you have set this option in an option file, you can use --skip-safe-updates on the command line to override it. For more information about this option, see Using Safe-Updates Mode (\u0026ndash;safe-updates).\n--select-limit=value Command-Line Format --select-limit=value Type Numeric Default Value 1000 The automatic limit for SELECT statements when using --safe-updates. (Default value is 1,000.)\n--server-public-key-path=file_name Command-Line Format --server-public-key-path=file_name Type File name The path name to a file in PEM format containing a client-side copy of the public key required by the server for RSA key pair-based password exchange. This option applies to clients that authenticate with the sha256_password or caching_sha2_password authentication plugin. This option is ignored for accounts that do not authenticate with one of those plugins. It is also ignored if RSA-based password exchange is not used, as is the case when the client connects to the server using a secure connection.\nIf --server-public-key-path=file_name is given and specifies a valid public key file, it takes precedence over --get-server-public-key.\nFor sha256_password, this option applies only if MySQL was built using OpenSSL.\nFor information about the sha256_password and caching_sha2_password plugins, see Section \u0026ldquo;SHA-256 Pluggable Authentication\u0026rdquo;, and \u0026ldquo;Caching SHA-2 Pluggable Authentication\u0026rdquo;.\n--shared-memory-base-name=name Command-Line Format --shared-memory-base-name=name Platform Specific Windows On Windows, the shared-memory name to use for connections made using shared memory to a local server. The default value is MYSQL. The shared-memory name is case-sensitive.\nThis option applies only if the server was started with the shared_memory system variable enabled to support shared-memory connections.\n--show-warnings Command-Line Format --show-warnings Cause warnings to be shown after each statement if there are any. This option applies to interactive and batch mode.\n--sigint-ignore Command-Line Format --sigint-ignore Ignore SIGINT signals (typically the result of typing Control+C).\nWithout this option, typing Control+C interrupts the current statement if there is one, or cancels any partial input line otherwise.\n--silent, -s Command-Line Format --silent Silent mode. Produce less output. This option can be given multiple times to produce less and less output.\nThis option results in nontabular output format and escaping of special characters. Escaping may be disabled by using raw mode; see the description for the --raw option.\n--skip-column-names, -N Command-Line Format --skip-column-names Do not write column names in results.\n--skpi-line-numbers, -L Command-Line Format --skpi-line-numbers Do not write line numbers for errors. Useful when you want to compare result files that include error messages.\n--socket=path, -S path Command-Line Format --socket={file_name|pipe_name} Type String For connections to localhost, the Unix socket file to use, or, on Windows, the name of the named pipe to use.\nOn Windows, this option applies only if the server was started with the named_pipe system variable enabled to support named-pipe connections. In addition, the user making the connection must be a member of the Windows group specified by the named_pipe_full_access_group system variable.\n--ssl* Options that begin with --ssl specify whether to connect to the server using encryption and indicate where to find SSL keys and certificates. See Command Options for Encrypted Connections.\n--ssl-fips-mode={OFF|ON|STRICT} Command-Line Format --ssl-fips-mode={OFF|ON|STRICT} Deprecated 8.0.34 Type Enumeration Default Value OFF Valid Values OFF / ON / STRICT Controls whether to enable FIPS mode on the client side. The --ssl-fips-mode option differs from other --ssl-xxx options in that it is not used to establish encrypted connections, but rather to affect which cryptographic operations to permit. See \u0026ldquo;FIPS Support\u0026rdquo;.\nThese --ssl-fips-mode values are permitted:\nOFF: Disable FIPS mode.\nON: Enable FIPS mode.\nSTRICT: Enable \u0026ldquo;strict\u0026rdquo; FIPS mode.\nNote: If the OpenSSL FIPS Object Module is not available, the only permitted value for --ssl-fips-mode is OFF. In this case, setting --ssl-fips-mode to ON or STRICT causes the client to produce a warning at startup and to operate in non-FIPS mode.\nAs of MySQL 8.0.34, this option is deprecated. Expect it to be removed in a future version of MySQL.\n--syslog, -j Command-Line Format --syslog This option causes mysql to send interactive statements to the system logging facility. On Unix, this is syslog; on Windows, it is the Windows Event Log. The destination where logged messages appear is system dependent. On Linux, the destination is often the /var/log/messages file.\nHere is a sample of output generated on Linux by using --syslog. This output is formatted for readability; each logged message actually takes a single line.\n1 2 3 4 5 6 Mar 7 12:39:25 myhost MysqlClient[20824]: SYSTEM_USER:\u0026#39;oscar\u0026#39;, MYSQL_USER:\u0026#39;my_oscar\u0026#39;, CONNECTION_ID:23, DB_SERVER:\u0026#39;127.0.0.1\u0026#39;, DB:\u0026#39;--\u0026#39;, QUERY:\u0026#39;USE test;\u0026#39; Mar 7 12:39:28 myhost MysqlClient[20824]: SYSTEM_USER:\u0026#39;oscar\u0026#39;, MYSQL_USER:\u0026#39;my_oscar\u0026#39;, CONNECTION_ID:23, DB_SERVER:\u0026#39;127.0.0.1\u0026#39;, DB:\u0026#39;test\u0026#39;, QUERY:\u0026#39;SHOW TABLES;\u0026#39; For more information, see \u0026ldquo;mysql Client Logging\u0026rdquo;.\n--table, -t Command-Line Format --table Display output in table format. This is the default for interactive use, but can be used to produce table output in batch mode.\n--tee-file_name Command-Line Format --tee=file_name Type File name Append a copy of output to the given file. This option works only in interactive mode. Section \u0026ldquo;mysql Client Commands\u0026rdquo;, discusses tee files further.\n--tls-ciphersuites=ciphersuite_list Command-Line Format --tls-ciphersuites=ciphersuite_list Introduced 8.0.16 Type String The permissible ciphersuites for encrypted connections that use TLSv1.3. The value is a list of one or more colon-separated ciphersuite names. The ciphersuites that can be named for this option depend on the SSL library used to compile MySQL. For details, see \u0026ldquo;Encrypted Connection TLS Protocols and Ciphers\u0026rdquo;.\nThis option was added in MySQL 8.0.16.\n--tls-version=protocol_list Command-Line Format --tls-version=protocol_list Type String Default Value(≥ 8.0.19) TLSv1,TLSv1.1,TLSv1.2,TLSv1.3 (OpenSSL 1.1.1 or higher) / TLSv1,TLSv1.1,TLSv1.2 (otherwise) Default Value(≤ 8.0.18) TLSv1,TLSv1.1,TLSv1.2 The permissible TLS protocols for encrypted connections. The value is a list of one or more comma-separated protocol names. The protocols that can be named for this option depend on the SSL library used to compile MySQL. For details, see \u0026ldquo;Encrypted Connection TLS Protocols and Ciphers\u0026rdquo;.\n--unbuffered, -n Command-Line Format --unbuffered Flush the buffer after each query.\n--user=user_name, -u user_name Command-Line Format --user=user_name Type String The user name of the MySQL account to use for connecting to the server.\n--verbose, -v Command-Line Format --verbose Verbose mode. Produce more output about what the program does. This option can be given multiple times to produce more and more output. (For example, -v -v -v produces table output format even in batch mode.)\n--version, -V Command-Line Format --version Display version information and exit.\n--vertical, -E Command-Line Format --vertical Print query output rows vertically (one line per column value). Without this option, you can specify vertical output for individual statements by terminating them with \\G.\n--wait, -w Command-Line Format --wait If the connection cannot be established, wait and retry instead of aborting.\n--xml, -X Command-Line Format --xml Produce XML output.\n1 \u0026lt;field name=\u0026#34;column_name\u0026#34;\u0026gt;NULL\u0026lt;/field\u0026gt; The output when --xml is used with mysql matches that of mysqldump --xml. See \u0026ldquo;mysqldump — A Database Backup Program\u0026rdquo;, for details.\nThe XML output also uses an XML namespace, as shown here:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 $\u0026gt; mysql --xml -uroot -e \u0026#34;SHOW VARIABLES LIKE \u0026#39;version%\u0026#39;\u0026#34; \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;resultset statement=\u0026#34;SHOW VARIABLES LIKE \u0026#39;version%\u0026#39;\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34;\u0026gt; \u0026lt;row\u0026gt; \u0026lt;field name=\u0026#34;Variable_name\u0026#34;\u0026gt;version\u0026lt;/field\u0026gt; \u0026lt;field name=\u0026#34;Value\u0026#34;\u0026gt;5.0.40-debug\u0026lt;/field\u0026gt; \u0026lt;/row\u0026gt; \u0026lt;row\u0026gt; \u0026lt;field name=\u0026#34;Variable_name\u0026#34;\u0026gt;version_comment\u0026lt;/field\u0026gt; \u0026lt;field name=\u0026#34;Value\u0026#34;\u0026gt;Source distribution\u0026lt;/field\u0026gt; \u0026lt;/row\u0026gt; \u0026lt;row\u0026gt; \u0026lt;field name=\u0026#34;Variable_name\u0026#34;\u0026gt;version_compile_machine\u0026lt;/field\u0026gt; \u0026lt;field name=\u0026#34;Value\u0026#34;\u0026gt;i686\u0026lt;/field\u0026gt; \u0026lt;/row\u0026gt; \u0026lt;row\u0026gt; \u0026lt;field name=\u0026#34;Variable_name\u0026#34;\u0026gt;version_compile_os\u0026lt;/field\u0026gt; \u0026lt;field name=\u0026#34;Value\u0026#34;\u0026gt;suse-linux-gnu\u0026lt;/field\u0026gt; \u0026lt;/row\u0026gt; \u0026lt;/resultset\u0026gt; --zstd-compression-level=level Command-Line Format --zstd-compression-level=# Introduced 8.0.18 Type Integer The compression level to use for connections to the server that use the zstd compression algorithm. The permitted levels are from 1 to 22, with larger values indicating increasing levels of compression. The default zstd compression level is 3. The compression level setting has no effect on connections that do not use zstd compression.\nFor more information, see \u0026ldquo;Connection Compression Control\u0026rdquo;.\nThis option was added in MySQL 8.0.18.\nmysql Client Commands mysql sends each SQL statement that you issue to the server to be executed. There is also a set of commands that mysql itself interprets. For a list of these commands, type help or \\h at the mysql\u0026gt; prompt:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 mysql\u0026gt; help List of all MySQL commands: Note that all text commands must be first on line and end with \u0026#39;;\u0026#39; ? (\\?) Synonym for `help\u0026#39;. clear (\\c) Clear the current input statement. connect (\\r) Reconnect to the server. Optional arguments are db and host. delimiter (\\d) Set statement delimiter. edit (\\e) Edit command with $EDITOR. ego (\\G) Send command to mysql server, display result vertically. exit (\\q) Exit mysql. Same as quit. go (\\g) Send command to mysql server. help (\\h) Display this help. nopager (\\n) Disable pager, print to stdout. notee (\\t) Don\u0026#39;t write into outfile. pager (\\P) Set PAGER [to_pager]. Print the query results via PAGER. print (\\p) Print current command. prompt (\\R) Change your mysql prompt. quit (\\q) Quit mysql. rehash (\\#) Rebuild completion hash. source (\\.) Execute an SQL script file. Takes a file name as an argument. status (\\s) Get status information from the server. system (\\!) Execute a system shell command. tee (\\T) Set outfile [to_outfile]. Append everything into given outfile. use (\\u) Use another database. Takes database name as argument. charset (\\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets. warnings (\\W) Show warnings after every statement. nowarning (\\w) Don\u0026#39;t show warnings after every statement. resetconnection(\\x) Clean session context. query_attributes Sets string parameters (name1 value1 name2 value2 ...) for the next query to pick up. ssl_session_data_print Serializes the current SSL session data to stdout or file. For server side help, type \u0026#39;help contents\u0026#39; If mysql is invoked with the --binary-mode option, all mysql commands are disabled except charset and delimiter in noninteractive mode (for input piped to mysql or loaded using the source command).\nEach command has both a long and short form. The long form is not case-sensitive; the short form is. The long form can be followed by an optional semicolon terminator, but the short form should not.\nThe use of short-form commands within multiple-line /* \u0026hellip; */ comments is not supported. Short-form commands do work within single-line /*! \u0026hellip; */ version comments, as do /*+ \u0026hellip; */ optimizer-hint comments, which are stored in object definitions. If there is a concern that optimizer-hint comments may be stored in object definitions so that dump files when reloaded with mysql would result in execution of such commands, either invoke mysql with the --binary-mode option or use a reload client other than mysql.\nhelp [arg], \\h [arg], \\? [arg], ? [arg]\nDisplay a help message listing the available mysql commands.\nIf you provide an argument to the help command, mysql uses it as a search string to access server-side help from the contents of the MySQL Reference Manual. For more information, see \u0026ldquo;mysql Client Server-Side Help\u0026rdquo;.\ncharset charset_name, \\C charset_name\nChange the default character set and issue a SET NAMES statement. This enables the character set to remain synchronized on the client and server if mysql is run with auto-reconnect enabled (which is not recommended), because the specified character set is used for reconnects.\nclear, \\c\nClear the current input. Use this if you change your mind about executing the statement that you are entering.\nconnect [db_name [host_name]], \\r [db_name [host_name]]\nReconnect to the server. The optional database name and host name arguments may be given to specify the default database or the host where the server is running. If omitted, the current values are used.\nIf the connect command specifies a host name argument, that host takes precedence over any --dns-srv-name option given at mysql startup to specify a DNS SRV record.\ndelimiter str, \\d str\nChange the string that mysql interprets as the separator between SQL statements. The default is the semicolon character (;).\nThe delimiter string can be specified as an unquoted or quoted argument on the delimiter command line. Quoting can be done with either single quote (\u0026rsquo;), double quote (\u0026quot;), or backtick (`) characters. To include a quote within a quoted string, either quote the string with a different quote character or escape the quote with a backslash (\\) character. Backslash should be avoided outside of quoted strings because it is the escape character for MySQL. For an unquoted argument, the delimiter is read up to the first space or end of line. For a quoted argument, the delimiter is read up to the matching quote on the line.\nmysql interprets instances of the delimiter string as a statement delimiter anywhere it occurs, except within quoted strings. Be careful about defining a delimiter that might occur within other words. For example, if you define the delimiter as X, it is not possible to use the word INDEX in statements. mysql interprets this as INDE followed by the delimiter X.\nWhen the delimiter recognized by mysql is set to something other than the default of ;, instances of that character are sent to the server without interpretation. However, the server itself still interprets ; as a statement delimiter and processes statements accordingly. This behavior on the server side comes into play for multiple-statement execution (see Multiple Statement Execution Support), and for parsing the body of stored procedures and functions, triggers, and events (see \u0026ldquo;Defining Stored Programs\u0026rdquo;).\nedit, \\e\nEdit the current input statement. mysql checks the values of the EDITOR and VISUAL environment variables to determine which editor to use. The default editor is vi if neither variable is set.\nThe edit command works only in Unix.\nego, \\G\nSend the current statement to the server to be executed and display the result using vertical format.\nexit, \\q\nExit mysql.\ngo, \\g\nSend the current statement to the server to be executed.\nnopaper, \\n\nDisable output paging. See the description for pager.\nThe nopaper command works only in Unix.\nnotee, \\t\nDisable output copying to the tee file. See the description for tee.\nnowarning, \\w\nDisable display of warnings after each statement.\npager [command], \\P [command]\nEnable output paging. By using the --pager option when you invoke mysql, it is possible to browse or search query results in interactive mode with Unix programs such as less, more, or any other similar program. If you specify no value for the option, mysql checks the value of the PAGER environment variable and sets the pager to that. Pager functionality works only in interactive mode.\nOutput paging can be enabled interactively with the pager command and disabled with nopager. The command takes an optional argument; if given, the paging program is set to that. With no argument, the pager is set to the pager that was set on the command line, or stdout if no pager was specified.\nOutput paging works only in Unix because it uses the popen() function, which does not exist on Windows. For Windows, the tee option can be used instead to save query output, although it is not as convenient as pager for browsing output in some situations.\nprint, \\p\nPrint the current input statement without executing it.\nprompt [str], \\R [str]\nReconfigure the mysql prompt to the given string. The special character sequences that can be used in the prompt are described later in this section.\nIf you specify the prompt command with no argument, mysql resets the prompt to the default of mysql\u0026gt;.\nquery_attributes name value [name value \u0026hellip;]\nDefine query attributes that apply to the next query sent to the server. For discussion of the purpose and use of query attributes, see \u0026ldquo;Query Attributes\u0026rdquo;.\nThe query_attributes command follows these rules:\nThe format and quoting rules for attribute names and values are the same as for the delimiter command.\nThe command permits up to 32 attribute name/value pairs. Names and values may be up to 1024 characters long. If a name is given without a value, an error occurs.\nIf multiple query_attributes commands are issued prior to query execution, only the last command applies. After sending the query, mysql clears the attribute set.\nIf multiple attributes are defined with the same name, attempts to retrieve the attribute value have an undefined result.\nAn attribute defined with an empty name cannot be retrieved by name.\nIf a reconnect occurs while mysql executes the query, mysql restores the attributes after reconnecting so the query can be executed again with the same attributes.\nquit, \\q\nExit mysql.\nrehash, \\#\nRebuild the completion hash that enables database, table, and column name completion while you are entering statements. (See the description for the --auto-rehash option.)\nresetconnection, \\x\nReset the connection to clear the session state. This includes clearing any current query attributes defined using the query_attributes command.\nResetting a connection has effects similar to mysql_change_user() or an auto-reconnect except that the connection is not closed and reopened, and re-authentication is not done. See mysql_change_user(), and Automatic Reconnection Control.\nThis example shows how resetconnection clears a value maintained in the session state:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 mysql\u0026gt; SELECT LAST_INSERT_ID(3); +-------------------+ | LAST_INSERT_ID(3) | +-------------------+ | 3 | +-------------------+ mysql\u0026gt; SELECT LAST_INSERT_ID(); +------------------+ | LAST_INSERT_ID() | +------------------+ | 3 | +------------------+ mysql\u0026gt; resetconnection; mysql\u0026gt; SELECT LAST_INSERT_ID(); +------------------+ | LAST_INSERT_ID() | +------------------+ | 0 | +------------------+ source file_name, \\. file_name\nRead the named file and executes the statements contained therein. On Windows, specify path name separators as / or \\\\.\nQuote characters are taken as part of the file name itself. For best results, the name should not include space characters.\nssl_session_data_print [file_name]\nFetches, serializes, and optionally stores the session data of a successful connection. The optional file name and arguments may be given to specify the file to store serialized session data. If omitted, the session data is printed to stdout.\nIf the MySQL session is configured for reuse, session data from the file is deserialized and supplied to the connect command to reconnect. When the session is reused successfully, the status command contains a row showing SSL session reused: true while the client remains reconnected to the server.\nstatus, \\s\nProvide status information about the connection and the server you are using. If you are running with --safe-updates enabled, status also prints the values for the mysql variables that affect your queries.\nsystem command, \\! command\nExecute the given command using your default command interpreter.\nPrior to MySQL 8.0.19, the system command works only in Unix. As of 8.0.19, it also works on Windows.\ntee [file_name], \\T [file_name]\nBy using the --tee option when you invoke mysql, you can log statements and their output. All the data displayed on the screen is appended into a given file. This can be very useful for debugging purposes also. mysql flushes results to the file after each statement, just before it prints its next prompt. Tee functionality works only in interactive mode.\nYou can enable this feature interactively with the tee command. Without a parameter, the previous file is used. The tee file can be disabled with the notee command. Executing tee again re-enables logging.\nuse db_name, \\u db_name\nUse db_name as the default database.\nwarnings, \\W\nEnable display of warnings after each statement (if there are any).\nHere are a few tips about the pager command:\nYou can use it to write to a file and the results go only to the file:\n1 mysql\u0026gt; pager cat \u0026gt; /tmp/log.txt You can also pass any options for the program that you want to use as your pager:\n1 mysql\u0026gt; pager less -n -i -S In the preceding example, note the -S option. You may find it very useful for browsing wide query results. Sometimes a very wide result set is difficult to read on the screen. The -S option to less can make the result set much more readable because you can scroll it horizontally using the left-arrow and right-arrow keys. You can also use -S interactively within less to switch the horizontal-browse mode on and off. For more information, read the less manual page:\n1 man less The -F and -X options may be used with less to cause it to exit if output fits on one screen, which is convenient when no scrolling is necessary:\n1 mysql\u0026gt; pager less -n -i -S -F -X You can specity very complex pager commands for handling query output:\n1 2 mysql\u0026gt; pager cat | tee /dr1/tmp/res.txt \\ | tee /dr2/tmp/res2.txt | less -n -i -S In this example, the command would send query results to two files in two different directories on two different file systems mounted on /dr1 and /dr2, yet still display the results onscreen using less.\nYou can also combine the tee and pager functions. Have a tee file enabled and pager set to less, and you are able to browse the results using the less program and still have everything appended into a file the same time. The difference between the Unix tee used with the pager command and the mysql built-in tee command is that the built-in tee works even if you do not have the Unix tee available. The built-in tee also logs everything that is printed on the screen, whereas the Unix tee used with pager does not log quite that much. Additionally, tee file logging can be turned on and off interactively from within mysql. This is useful when you want to log some queries to a file, but not others.\nThe prompt command reconfigures the default mysql\u0026gt; prompt. The string for defining the prompt can contain the following special sequences.\nOption Description \\C The current connection identifier \\c A counter that increments for each statement you issue \\D The full current date \\d The default database \\h The server host \\l The current delimiter \\m Minutes of the current time \\n A newline character \\O The current month in three-letter format (Jan, Feb, …) \\o The current month in numeric format \\P am/pm \\p The current TCP/IP port or socket file \\R The current time, in 24-hour military time (0–23) \\r The current time, standard 12-hour time (1–12) \\S Semicolon \\s Seconds of the current time \\T Print an asterisk (*) if the current session is inside a transaction block (from MySQL 8.0.28) \\t A tab character \\U Your full user_name@host_name account name \\u Your user name \\v The server version \\w The current day of the week in three-letter format (Mon, Tue, …) \\Y The current year, four digits \\y The current year, two digits \\_ A space \\ A space (a space follows the backslash) \\\u0026rsquo; Single quote \\\u0026quot; Double quote \\\\ A literal \\ backslash character \\x x, for any \u0026ldquo;x\u0026rdquo; not listed above You can set the prompt in several ways:\nUse an environment variable. You can set the MYSQL_PS1 environment variable to a prompt string. For example:\n1 export MYSQL_PS1=\u0026#34;(\\u@\\h) [\\d]\u0026gt; \u0026#34; Use a command-line option. You can set the --prompt option on the command line to mysql. For example:\n1 2 $\u0026gt; mysql --prompt=\u0026#34;(\\u@\\h) [\\d]\u0026gt; \u0026#34; (user@host) [database]\u0026gt; Use an option file. You can set the prompt option in the [mysql] group of any MySQL option file, such as /etc/my.cnf or the .my.cnf file in your home directory. For example:\n1 2 [mysql] prompt=(\\\\u@\\\\h) [\\\\d]\u0026gt;\\\\_ In this example, note that the backslashes are doubled. If you set the prompt using the prompt option in an option file, it is advisable to double the backslashes when using the special prompt options. There is some overlap in the set of permissible prompt options and the set of special escape sequences that are recognized in option files. (The rules for escape sequences in option files are listed in \u0026ldquo;Using Option Files\u0026rdquo;.) The overlap may cause you problems if you use single backslashes. For example, \\s is interpreted as a space rather than as the current seconds value. The following example shows how to define a prompt within an option file to include the current time in hh:mm:ss\u0026gt; format:\n1 2 [mysql] prompt=\u0026#34;\\\\r:\\\\m:\\\\s\u0026gt; \u0026#34; Set the prompt interactively. You can change your prompt interactively by using the prompt (or \\R) command. For example:\n1 2 3 4 5 6 mysql\u0026gt; prompt (\\u@\\h) [\\d]\u0026gt;\\_ PROMPT set to \u0026#39;(\\u@\\h) [\\d]\u0026gt;\\_\u0026#39; (user@host) [database]\u0026gt; (user@host) [database]\u0026gt; prompt Returning to default PROMPT of mysql\u0026gt; mysql\u0026gt; mysql Client Logging The mysql client can do these types of logging for statements executed interactively:\nOn Unix, mysql writes the statements to a history file. By default, this file is named .mysql_history in your home directory. To specify a different file, set the value of the MYSQL_HISTFILE environment variable.\nOn all platforms, if the --syslog option is given, mysql writes the statements to the system logging facility. On Unix, this is syslog; on Windows, it is the Windows Event Log. The destination where logged messages appear is system dependent. On Linux, the destination is often the /var/log/messages file.\nThe following discussion describes characteristics that apply to all logging types and provides information specific to each logging type.\nHow Logging Occurs\nControlling the History File\nsyslog Logging Characteristics\nHow Logging Occurs For each enabled logging destination, statement logging occurs as follows:\nStatements are logged only when executed interactively. Statements are noninteractive, for example, when read from a file or a pipe. It is also possible to suppress statement logging by using the --batch or --execute option.\nStatements are ignored and not logged if they match any pattern in the \u0026ldquo;ignore\u0026rdquo; list. This list is described later.\nmysql logs each nonignored, nonempty statement line individually.\nIf a nonignored statement spans multiple lines (not including the terminating delimiter), mysql concatenates the lines to form the complete statement, maps newlines to spaces, and logs the result, plus a delimiter.\nConsequently, an input statement that spans multiple lines can be logged twice. Consider this input:\n1 2 3 4 5 mysql\u0026gt; SELECT -\u0026gt; \u0026#39;Today is\u0026#39; -\u0026gt; , -\u0026gt; CURDATE() -\u0026gt; ; In this case, mysql logs the \u0026ldquo;SELECT\u0026rdquo;, \u0026ldquo;\u0026lsquo;Today is\u0026rsquo;\u0026rdquo;, \u0026ldquo;,\u0026rdquo;, \u0026ldquo;CURDATE()\u0026rdquo;, and \u0026ldquo;;\u0026rdquo; lines as it reads them. It also logs the complete statement, after mapping SELECT\\n'Today is'\\n,\\nCURDATE() to SELECT 'Today is' , CURDATE(), plus a delimiter. Thus, these lines appear in logged output:\n1 2 3 4 5 6 SELECT \u0026#39;Today is\u0026#39; , CURDATE() ; SELECT \u0026#39;Today is\u0026#39; , CURDATE(); mysql ignores for logging purposes statements that match any pattern in the \u0026ldquo;ignore\u0026rdquo; list. By default, the pattern list is \u0026quot;*IDENTIFIED*:*PASSWORD*\u0026quot;, to ignore statements that refer to passwords. Pattern matching is not case-sensitive. Within patterns, two characters are special:\n? matches any single character.\n* matches any sequence of zero or more characters.\nTo specify additional patterns, use the --histignore option or set the MYSQL_HISTIGNORE environment variable. (If both are specified, the option value takes precedence.) The value should be a list of one or more colon-separated patterns, which are appended to the default pattern list.\nPatterns specified on the command line might need to be quoted or escaped to prevent your command interpreter from treating them specially. For example, to suppress logging for UPDATE and DELETE statements in addition to statements that refer to passwords, invoke mysql like this:\n1 mysql --histignore=\u0026#34;*UPDATE*:*DELETE*\u0026#34; Controlling the History File The .mysql_history file should be protected with a restrictive access mode because sensitive information might be written to it, such as the text of SQL statements that contain passwords. See \u0026ldquo;End-User Guidelines for Password Security\u0026rdquo;. Statements in the file are accessible from the mysql client when the up-arrow key is used to recall the history. See Disabling Interactive History.\nIf you do not want to maintain a history file, first remove .mysql_history if it exists. Then use either of the following techniques to prevent it from being created again:\nSet the MYSQL_HISTFILE environment variable to /dev/null. To cause this setting to take effect each time you log in, put it in one of your shell\u0026rsquo;s startup files.\nCreate .mysql_history as a symbolic link to /dev/null; this need be done only once:\n1 ln -s /dev/null $HOME/.mysql_history syslog Logging Characteristics If the --syslog option is given, mysql writes interactive statements to the system logging facility. Message logging has the following characteristics.\nLogging occurs at the \u0026ldquo;information\u0026rdquo; level. This corresponds to the LOG_INFO priority for syslog on Unix/Linux syslog capability and to EVENTLOG_INFORMATION_TYPE for the Windows Event Log. Consult your system documentation for configuration of your logging capability.\nMessage size is limited to 1024 bytes.\nMessages consist of the identifier MysqlClient followed by these values:\nSYSTEM_USER\nThe operating system user name (login name) or -- if the user is unknown.\nMYSQL_USER\nThe MySQL user name (specified with the --user option) or -- if the user is unknown.\nCONNECTION_ID:\nThe client connection identifier. This is the same as the CONNECTION_ID() function value within the session.\nDB_SERVER\nThe server host or -- if the host is unknown.\nDB\nThe default database or -- if no database has been selected.\nQUERY\nThe text of the logged statement.\nHere is a sample of output generated on Linux by using --syslog. This output is formatted for readability; each logged message actually takes a single line.\n1 2 3 4 5 6 Mar 7 12:39:25 myhost MysqlClient[20824]: SYSTEM_USER:\u0026#39;oscar\u0026#39;, MYSQL_USER:\u0026#39;my_oscar\u0026#39;, CONNECTION_ID:23, DB_SERVER:\u0026#39;127.0.0.1\u0026#39;, DB:\u0026#39;--\u0026#39;, QUERY:\u0026#39;USE test;\u0026#39; Mar 7 12:39:28 myhost MysqlClient[20824]: SYSTEM_USER:\u0026#39;oscar\u0026#39;, MYSQL_USER:\u0026#39;my_oscar\u0026#39;, CONNECTION_ID:23, DB_SERVER:\u0026#39;127.0.0.1\u0026#39;, DB:\u0026#39;test\u0026#39;, QUERY:\u0026#39;SHOW TABLES;\u0026#39; mysql Client Server-Side Help 1 mysql\u0026gt; help search_string If you provide an argument to the help command, mysql uses it as a search string to access server-side help from the contents of the MySQL Reference Manual. The proper operation of this command requires that the help tables in the mysql database be initialized with help topic information (see \u0026ldquo;Server-Side Help Support\u0026rdquo;).\nIf there is no match for the search string, the search fails:\n1 2 3 4 mysql\u0026gt; help me Nothing found Please try to run \u0026#39;help contents\u0026#39; for a list of all accessible topics Use help contents to see a list of the help categories:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 mysql\u0026gt; help contents You asked for help about help category: \u0026#34;Contents\u0026#34; For more information, type \u0026#39;help \u0026lt;item\u0026gt;\u0026#39;, where \u0026lt;item\u0026gt; is one of the following categories: Account Management Administration Data Definition Data Manipulation Data Types Functions Functions and Modifiers for Use with GROUP BY Geographic Features Language Structure Plugins Storage Engines Stored Routines Table Maintenance Transactions Triggers If the search string matches multiple items, mysql shows a list of matching topics:\n1 2 3 4 5 6 7 8 mysql\u0026gt; help logs Many help items for your request exist. To make a more specific request, please type \u0026#39;help \u0026lt;item\u0026gt;\u0026#39;, where \u0026lt;item\u0026gt; is one of the following topics: SHOW SHOW BINARY LOGS SHOW ENGINE SHOW LOGS Use a topic as the search string to see the help entry for that topic:\n1 2 3 4 5 6 7 8 9 10 mysql\u0026gt; help show binary logs Name: \u0026#39;SHOW BINARY LOGS\u0026#39; Description: Syntax: SHOW BINARY LOGS SHOW MASTER LOGS Lists the binary log files on the server. This statement is used as part of the procedure described in [purge-binary-logs], that shows how to determine which logs can be purged. 1 2 3 4 5 6 7 mysql\u0026gt; SHOW BINARY LOGS; +---------------+-----------+-----------+ | Log_name | File_size | Encrypted | +---------------+-----------+-----------+ | binlog.000015 | 724935 | Yes | | binlog.000016 | 733481 | Yes | +---------------+-----------+-----------+ The search string can contain the wildcard characters % and _. These have the same meaning as for pattern-matching operations performed with the LIKE operator. For example, HELP rep% returns a list of topics that begin with rep:\n1 2 3 4 5 6 7 8 9 10 mysql\u0026gt; HELP rep% Many help items for your request exist. To make a more specific request, please type \u0026#39;help \u0026lt;item\u0026gt;\u0026#39;, where \u0026lt;item\u0026gt; is one of the following topics: REPAIR TABLE REPEAT FUNCTION REPEAT LOOP REPLACE REPLACE FUNCTION Executing SQL Statements from a Text File The mysql client typically is used interactively, like this:\n1 mysql db_name However, it is also possible to put your SQL statements in a file and then tell mysql to read its input from that file. To do so, create a text file text_file that contains the statements you wish to execute. Then invoke mysql as shown here:\n1 mysql db_name \u0026lt; text_file If you place a USE db_name statement as the first statement in the file, it is unnecessary to specify the database name on the command line:\n1 mysql \u0026lt; text_file If you are already running mysql, you can execute an SQL script file using the source command or \\. command:\n1 2 mysql\u0026gt; source file_name mysql\u0026gt; \\. file_name Sometimes you may want your script to display progress information to the user. For this you can insert statements like this:\n1 SELECT \u0026#39;\u0026lt;info_to_display\u0026gt;\u0026#39; AS \u0026#39; \u0026#39;; The statement shown outputs \u0026lt;info_to_display\u0026gt;.\nYou can also invoke mysql with the --verbose option, which causes each statement to be displayed before the result that it produces.\nmysql ignores Unicode byte order mark (BOM) characters at the beginning of input files. Previously, it read them and sent them to the server, resulting in a syntax error. Presence of a BOM does not cause mysql to change its default character set. To do that, invoke mysql with an option such as --default-character-set=utf8mb4.\nFor more information about batch mode, see Section \u0026ldquo;Using mysql in Batch Mode\u0026rdquo;.\nmysql Client Tips This section provides information about techniques for more effective use of mysql and about mysql operational behavior.\nInput-Line Editing\nDisabling Interactive History\nUnicode Support on Windows\nDisplaying Query Results Vertically\nUsing Safe-Updates Mode (\u0026ndash;safe-updates)\nDisabling mysql Auto-Reconnect\nmysql Client Parser Versus Server Parser\nInput-Line Editing mysql supports input-line editing, which enables you to modify the current input line in place or recall previous input lines. For example, the left-arrow and right-arrow keys move horizontally within the current input line, and the up-arrow and down-arrow keys move up and down through the set of previously entered lines. Backspace deletes the character before the cursor and typing new characters enters them at the cursor position. To enter the line, press Enter.\nOn Windows, the editing key sequences are the same as supported for command editing in console windows. On Unix, the key sequences depend on the input library used to build mysql (for example, the libedit or readline library).\nDocumentation for the libedit and readline libraries is available online. To change the set of key sequences permitted by a given input library, define key bindings in the library startup file. This is a file in your home directory: .editrc for libedit and .inputrc for readline.\nFor example, in libedit, Control+W deletes everything before the current cursor position and Control+U deletes the entire line. In readline, Control+W deletes the word before the cursor and Control+U deletes everything before the current cursor position. If mysql was built using libedit, a user who prefers the readline behavior for these two keys can put the following lines in the .editrc file (creating the file if necessary):\n1 2 bind \u0026#34;^W\u0026#34; ed-delete-prev-word bind \u0026#34;^U\u0026#34; vi-kill-line-prev To see the current set of key bindings, temporarily put a line that says only bind at the end of .editrc. mysql shows the bindings when it starts.\nDisabling Interactive History The up-arrow key enables you to recall input lines from current and previous sessions. In cases where a console is shared, this behavior may be unsuitable. mysql supports disabling the interactive history partially or fully, depending on the host platform.\nOn Windows, the history is stored in memory. Alt+F7 deletes all input lines stored in memory for the current history buffer. It also deletes the list of sequential numbers in front of the input lines displayed with F7 and recalled (by number) with F9. New input lines entered after you press Alt+F7 repopulate the current history buffer. Clearing the buffer does not prevent logging to the Windows Event Viewer, if the --syslog option was used to start mysql. Closing the console window also clears the current history buffer.\nTo disable interactive history on Unix, first delete the .mysql_history file, if it exists (previous entries are recalled otherwise). Then start mysql with the --histignore=\u0026quot;*\u0026quot; option to ignore all new input lines. To re-enable the recall (and logging) behavior, restart mysql without the option.\nIf you prevent the .mysql_history file from being created (see Controlling the History File) and use --histignore=\u0026quot;*\u0026quot; to start the mysql client, the interactive history recall facility is disabled fully. Alternatively, if you omit the --histignore option, you can recall the input lines entered during the current session.\nUnicode Support on Windows Windows provides APIs based on UTF-16LE for reading from and writing to the console; the mysql client for Windows is able to use these APIs. The Windows installer creates an item in the MySQL menu named MySQL command line client - Unicode. This item invokes the mysql client with properties set to communicate through the console to the MySQL server using Unicode.\nTo take advantage of this support manually, run mysql within a console that uses a compatible Unicode font and set the default character set to a Unicode character set that is supported for communication with the server:\nOpen a console window.\nGo to the console window properties, select the font tab, and choose Lucida Console or some other compatible Unicode font. This is necessary because console windows start by default using a DOS raster font that is inadequate for Unicode.\nExecute mysql.exe with the --default-character-set=utf8mb4 (or utf8mb3) option. This option is necessary because utf16le is one of the character sets that cannot be used as the client character set. See Impermissible Client Character Sets.\nWith those changes, mysql uses the Windows APIs to communicate with the console using UTF-16LE, and communicate with the server using UTF-8. (The menu item mentioned previously sets the font and character set as just described.)\nTo avoid those steps each time you run mysql, you can create a shortcut that invokes mysql.exe. The shortcut should set the console font to Lucida Console or some other compatible Unicode font, and pass the --default-character-set=utf8mb4 (or utf8mb3) option to mysql.exe.\nAlternatively, create a shortcut that only sets the console font, and set the character set in the [mysql] group of your my.ini file:\n1 2 [mysql] default-character-set=utf8mb4 # or utf8mb3 Displaying Query Results Vertically Some query results are much more readable when displayed vertically, instead of in the usual horizontal table format. Queries can be displayed vertically by terminating the query with \\G instead of a semicolon. For example, longer text values that include newlines often are much easier to read with vertical output:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 mysql\u0026gt; SELECT * FROM mails WHERE LENGTH(txt) \u0026lt; 300 LIMIT 300,1\\G *************************** 1. row *************************** msg_nro: 3068 date: 2000-03-01 23:29:50 time_zone: +0200 mail_from: Jones reply: jones@example.com mail_to: \u0026#34;John Smith\u0026#34; \u0026lt;smith@example.com\u0026gt; sbj: UTF-8 txt: \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; \u0026#34;John\u0026#34; == John Smith writes: John\u0026gt; Hi. I think this is a good idea. Is anyone familiar John\u0026gt; with UTF-8 or Unicode? Otherwise, I\u0026#39;ll put this on my John\u0026gt; TODO list and see what happens. Yes, please do that. Regards, Jones file: inbox-jani-1 hash: 190402944 1 row in set (0.09 sec) Using Safe-Updates Mode (\u0026ndash;safe-updates) For beginners, a useful startup option is --safe-updates (or --i-am-a-dummy, which has the same effect). Safe-updates mode is helpful for cases when you might have issued an UPDATE or DELETE statement but forgotten the WHERE clause indicating which rows to modify. Normally, such statements update or delete all rows in the table. With --safe-updates, you can modify rows only by specifying the key values that identify them, or a LIMIT clause, or both. This helps prevent accidents. Safe-updates mode also restricts SELECT statements that produce (or are estimated to produce) very large result sets.\nThe --safe-updates option causes mysql to execute the following statement when it connects to the MySQL server, to set the session values of the sql_safe_updates, sql_select_limit, and max_join_size system variables:\n1 SET sql_safe_updates=1, sql_select_limit=1000, max_join_size=1000000; The SET statement affects statement processing as follows:\nEnabling sql_safe_updates causes UPDATE and DELETE statements to produce an error if they do not specify a key constraint in the WHERE clause, or provide a LIMIT clause, or both. For example:\n1 2 3 UPDATE tbl_name SET not_key_column=val WHERE key_column=val; UPDATE tbl_name SET not_key_column=val LIMIT 1; Setting sql_select_limit to 1,000 causes the server to limit all SELECT result sets to 1,000 rows unless the statement includes a LIMIT clause.\nSetting max_join_size to 1,000,000 causes multiple-table SELECT statements to produce an error if the server estimates it must examine more than 1,000,000 row combinations.\nTo specify result set limits different from 1,000 and 1,000,000, you can override the defaults by using the --select-limit and --max-join-size options when you invoke mysql:\n1 mysql --safe-updates --select-limit=500 --max-join-size=10000 It is possible for UPDATE and DELETE statements to produce an error in safe-updates mode even with a key specified in the WHERE clause, if the optimizer decides not to use the index on the key column:\nRange access on the index cannot be used if memory usage exceeds that permitted by the range_optimizer_max_mem_size system variable. The optimizer then falls back to a table scan. See Limiting Memory Use for Range Optimization.\nIf key comparisons require type conversion, the index may not be used (see \u0026ldquo;How MySQL Uses Indexes\u0026rdquo;). Suppose that an indexed string column c1 is compared to a numeric value using WHERE c1 = 2222. For such comparisons, the string value is converted to a number and the operands are compared numerically (see \u0026ldquo;Type Conversion in Expression Evaluation\u0026rdquo;), preventing use of the index. If safe-updates mode is enabled, an error occurs.\nAs of MySQL 8.0.13, safe-updates mode also includes these behaviors:\nEXPLAIN with UPDATE and DELETE statements does not produce safe-updates errors. This enables use of EXPLAIN plus SHOW WARNINGS to see why an index is not used, which can be helpful in cases such as when a range_optimizer_max_mem_size violation or type conversion occurs and the optimizer does not use an index even though a key column was specified in the WHERE clause.\nWhen a safe-updates error occurs, the error message includes the first diagnostic that was produced, to provide information about the reason for failure. For example, the message may indicate that the range_optimizer_max_mem_size value was exceeded or type conversion occurred, either of which can preclude use of an index.\nFor multiple-table deletes and updates, an error is produced with safe updates enabled only if any target table uses a table scan.\nDisabling mysql Auto-Reconnect If the mysql client loses its connection to the server while sending a statement, it immediately and automatically tries to reconnect once to the server and send the statement again. However, even if mysql succeeds in reconnecting, your first connection has ended and all your previous session objects and settings are lost: temporary tables, the autocommit mode, and user-defined and session variables. Also, any current transaction rolls back. This behavior may be dangerous for you, as in the following example where the server was shut down and restarted between the first and second statements without you knowing it:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 mysql\u0026gt; SET @a=1; Query OK, 0 rows affected (0.05 sec) mysql\u0026gt; INSERT INTO t VALUES(@a); ERROR 2006: MySQL server has gone away No connection. Trying to reconnect... Connection id: 1 Current database: test Query OK, 1 row affected (1.30 sec) mysql\u0026gt; SELECT * FROM t; +------+ | a | +------+ | NULL | +------+ 1 row in set (0.05 sec) The @a user variable has been lost with the connection, and after the reconnection it is undefined. If it is important to have mysql terminate with an error if the connection has been lost, you can start the mysql client with the --skip-reconnect option.\nFor more information about auto-reconnect and its effect on state information when a reconnection occurs, see Automatic Reconnection Control.\nmysql Client Parser Versus Server Parser The mysql client uses a parser on the client side that is not a duplicate of the complete parser used by the mysqld server on the server side. This can lead to differences in treatment of certain constructs. Examples:\nThe server parser treats strings delimited by \u0026quot; characters as identifiers rather than as plain strings if the ANSI_QUOTES SQL mode is enabled.\nThe mysql client parser does not take the ANSI_QUOTES SQL mode into account. It treats strings delimited by \u0026ldquo;, \u0026lsquo;, and ` characters the same, regardless of whether ANSI_QUOTES is enabled.\nWithin /*! \u0026hellip; */ and /*+ \u0026hellip; */ comments, the mysql client parser interprets short-form mysql commands. The server parser does not interpret them because these commands have no meaning on the server side.\nIf it is desirable for mysql not to interpret short-form commands within comments, a partial workaround is to use the --binary-mode option, which causes all mysql commands to be disabled except \\C and \\d in noninteractive mode (for input piped to mysql or loaded using the source command).\n","date":"2023-11-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/mysql-command-line-client/","title":"MySQL Command-Line Client"},{"content":"Get current operating system information (c#) System.Runtime.InteropServices.OSPlatform 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 // Licensed to the .NET Foundation under one or more agreements. // The .NET Foundation licenses this file to you under the MIT license. using System.Diagnostics.CodeAnalysis; namespace System.Runtime.InteropServices { public readonly struct OSPlatform : IEquatable\u0026lt;OSPlatform\u0026gt; { public static OSPlatform FreeBSD { get; } = new OSPlatform(\u0026#34;FREEBSD\u0026#34;); public static OSPlatform Linux { get; } = new OSPlatform(\u0026#34;LINUX\u0026#34;); public static OSPlatform OSX { get; } = new OSPlatform(\u0026#34;OSX\u0026#34;); public static OSPlatform Windows { get; } = new OSPlatform(\u0026#34;WINDOWS\u0026#34;); internal string Name { get; } private OSPlatform(string osPlatform) { if (osPlatform == null) throw new ArgumentNullException(nameof(osPlatform)); if (osPlatform.Length == 0) throw new ArgumentException(SR.Argument_EmptyValue, nameof(osPlatform)); Name = osPlatform; } /// \u0026lt;summary\u0026gt; /// Creates a new OSPlatform instance. /// \u0026lt;/summary\u0026gt; /// \u0026lt;remarks\u0026gt;If you plan to call this method frequently, please consider caching its result.\u0026lt;/remarks\u0026gt; public static OSPlatform Create(string osPlatform) { return new OSPlatform(osPlatform); } public bool Equals(OSPlatform other) { return Equals(other.Name); } internal bool Equals(string? other) { return string.Equals(Name, other, StringComparison.OrdinalIgnoreCase); } public override bool Equals([NotNullWhen(true)] object? obj) { return obj is OSPlatform osPlatform \u0026amp;\u0026amp; Equals(osPlatform); } public override int GetHashCode() { return Name == null ? 0 : StringComparer.OrdinalIgnoreCase.GetHashCode(Name); } public override string ToString() { return Name ?? string.Empty; } public static bool operator ==(OSPlatform left, OSPlatform right) { return left.Equals(right); } public static bool operator !=(OSPlatform left, OSPlatform right) { return !(left == right); } } } System.Runtime.InteropServices.Architecture 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #region Assembly System.Runtime.InteropServices.RuntimeInformation, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a // C:\\Program Files\\dotnet\\packs\\Microsoft.NETCore.App.Ref\\6.0.25\\ref\\net6.0\\System.Runtime.InteropServices.RuntimeInformation.dll #endregion namespace System.Runtime.InteropServices { // // Summary: // Indicates the processor architecture. public enum Architecture { // // Summary: // An Intel-based 32-bit processor architecture. X86 = 0, // // Summary: // An Intel-based 64-bit processor architecture. X64 = 1, // // Summary: // A 32-bit ARM processor architecture. Arm = 2, // // Summary: // A 64-bit ARM processor architecture. Arm64 = 3, // // Summary: // The WebAssembly platform. Wasm = 4, // // Summary: // The S390x platform architecture. S390x = 5 } } System.Runtime.InteropServices.RuntimeInformation 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 // Licensed to the .NET Foundation under one or more agreements. // The .NET Foundation licenses this file to you under the MIT license. using System.Reflection; namespace System.Runtime.InteropServices { public static partial class RuntimeInformation { private const string FrameworkName = \u0026#34;.NET\u0026#34;; private static string? s_frameworkDescription; private static string? s_runtimeIdentifier; public static string FrameworkDescription { get { if (s_frameworkDescription == null) { ReadOnlySpan\u0026lt;char\u0026gt; versionString = typeof(object).Assembly.GetCustomAttribute\u0026lt;AssemblyInformationalVersionAttribute\u0026gt;()?.InformationalVersion; // Strip the git hash if there is one int plusIndex = versionString.IndexOf(\u0026#39;+\u0026#39;); if (plusIndex != -1) { versionString = versionString.Slice(0, plusIndex); } s_frameworkDescription = !versionString.Trim().IsEmpty ? $\u0026#34;{FrameworkName} {versionString}\u0026#34; : FrameworkName; } return s_frameworkDescription; } } /// \u0026lt;summary\u0026gt; /// Returns an opaque string that identifies the platform on which an app is running. /// \u0026lt;/summary\u0026gt; /// \u0026lt;remarks\u0026gt; /// The property returns a string that identifies the operating system, typically including version, /// and processor architecture of the currently executing process. /// Since this string is opaque, it is not recommended to parse the string into its constituent parts. /// /// For more information, see https://docs.microsoft.com/dotnet/core/rid-catalog. /// \u0026lt;/remarks\u0026gt; public static string RuntimeIdentifier =\u0026gt; s_runtimeIdentifier ??= AppContext.GetData(\u0026#34;RUNTIME_IDENTIFIER\u0026#34;) as string ?? \u0026#34;unknown\u0026#34;; /// \u0026lt;summary\u0026gt; /// Indicates whether the current application is running on the specified platform. /// \u0026lt;/summary\u0026gt; public static bool IsOSPlatform(OSPlatform osPlatform) =\u0026gt; OperatingSystem.IsOSPlatform(osPlatform.Name); } } Demo 1 2 3 4 5 6 7 8 if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows)) { // Windows } else if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux) \u0026amp;\u0026amp; RuntimeInformation.ProcessArchitecture == Architecture.X64) { // linux64 } ","date":"2023-11-20T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/get-current-operating-system-information-c/","title":"Get current operating system information (c#)"},{"content":"MySQL 8 Remote Access Go to the bin directory in the MySQL installation directory (if you have configured environment variables go directly to step 2) Type cmd in the address bar to open a command line window (if you have configured environment variables directly Win + R type cmd enter can be) Type the command and enter 1 mysql -uroot -p Type the command and enter, where password is the password for your msyql database 1 GRANT ALL PRIVILEGES ON *.* TO \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39;; Type the command and enter 1 FLUSH PRIVILEGES; Close the window and finish ","date":"2023-11-16T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/mysql-8-remote-access/","title":"MySQL 8 Remote Access"},{"content":"Install PostgreSQL 16.1 on Windows Go to the official website to download the PostgreSQL installation package Download the PostgreSQL installation package.\nhttps://www.enterprisedb.com/downloads/postgres-postgresql-downloads.\nOpen the installation package Click Next Modify the installation directory and click Next Keep the default options and click Next Set the data directory and click Next Set a password and click Next Set the database port number (default 5432), click Next Set the language and click Next Just keep clicking Next Waiting for the installation to finish Uncheck Stack Builder and click Finish At this point, the PostgreSQL installation is complete! The PostgresSQL installation carries the pgAdmin software, which can be used to manage PostgreSQL databases, open the pgAdmin Click on Server in the upper left corner Enter the set password and click OK The following screen indicates successful installation It is also possible to test the connection using a third-party database connector, PostgreSQL with the username postgres ","date":"2023-11-15T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/install-postgresql-16.1-on-windows/","title":"Install PostgreSQL 16.1 on Windows"},{"content":"Install Ubuntu on Windows subsystem using WSL2 technology Install WSL2 Reference: Manual installation steps for older versions of WSL\nEnabling the Windows subsystem for Linux Open PowerShell as administrator (Start menu \u0026gt; PowerShell \u0026gt; right-click \u0026gt; Run as administrator) and enter the following command:\n1 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart Start the virtual machine function Open PowerShell as administrator and run:\n1 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart Restart the computer Download the Linux kernel update package and install it Download address 1 (Microsoft official website download): Linux kernel update packages\nDownload address 2 (csdn download): Linux kernel update packages\nRun the downloaded update package. (Double click to run - you will be prompted to elevate privileges, select \u0026ldquo;Yes\u0026rdquo; to approve this installation.)\nSet WSL2 as the default version Open PowerShell and run the following command to set WSL 2 as the default version when installing a new Linux distribution:\n1 wsl --set-default-version 2 Install Ubuntu and install docker and docker-compose Install Ubuntu Reference: https://docs.microsoft.com/en-us/windows/wsl/install-manual\nInstall Docker Reference: https://www.runoob.com/docker/ubuntu-docker-install.html\nInstall Docker-Compose Reference: https://linuxhostsupport.com/blog/how-to-install-and-configure-docker-compose-on-ubuntu-20-04/\nOpen the Microsoft Store and select the Ubuntu version to download Wait for the automatic installation to succeed Start Ubuntu and wait for it to install automatically After setting the username and password, enter the Ubuntu system Install Docker Use th daocloud one-click installation command:\nThe installation command is as follows:\n1 sudo curl -sSL https://get.daocloud.io/docker | sh Wait for successful installation\nStart the docker service command\n1 sudo service docker start Check if the installation is successful command\n1 sudo docker ps -a The installation of Ubuntu Docker is successful when the following is displayed\nInstall docker-compose Update the apt-get command:\n1 sudo apt-get update -y Install the docker-compose command:\n1 sudo apt-get install docker-compose Enter y in the middle to enter\nInstallation complete!\n","date":"2022-09-16T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/install-ubuntu-on-windows-subsystem-using-wsl2-technology/","title":"Install Ubuntu on Windows subsystem using WSL2 technology"},{"content":"REST API Design Rulebook URI Format(RFC 3986) 1 URL = scheme \u0026#34;://\u0026#34; authority \u0026#34;/\u0026#34; path [ \u0026#34;?\u0026#34; query ] [ \u0026#34;#\u0026#34; fragment ] URI Rules A forward-slash separator (/) must be used to indicate hierarchical relationships\n1 http://api.canvas.restapi.org/shapes/polygons/quadrilaterals/squares The URI should not have a slash (/) at the end\n1 2 Incorrect:\thttp://api.canvas.restapi.org/shapes/ Correct:\thttp://api.canvas.restapi.org/shapes Hyphens (-) should be used to improve URI readability\n1 http://api.example.restapi.org/blogs/mark-masse/entries/this-is-my-first-post Underscores (_) should not be used in URIs\nIn the URI path, lowercase letters should be preferred\n1 2 3 1: http://api.example.restapi.org/my-folder/my-doc\tCorrect 2: HTTP://API.EXAMPLE.RESTAPI.ORG/my-fplder/my-doc\tCorrect 3: httpL//api.example.restapi.org/My-Folder/my-doc\tIncorrect The file extension should not be included in the URI\n1 2 Incorrect:\thttp://api.college.restapi.org/students/3248234/transcripts/2005/fall.json Correct:\thttp://api.college.restapi.org/students/3248234/transcripts/2005/fall For the API, a consistent subdomain should be used, and a subdomain named api should be added to the full domain of the API\n1 2 Incorrect:\thttp://soccer.restapi.org Correct:\thttp://api.soccer.restapi.org For client developers, a consistent subdomain should be used\n1 httpL//developer.soccer.restapi.org URIs that represent document resources should use singular nouns\n1 http://api.soccer.restapi.org/leagues/seattle/teams/trebuchet/players/claudio The URI that identifies a collection should use a plural noun\n1 http://api.soccer.restapi.org/leagues/seattle/teams/trebuchet/players The URI identifying the resource store should use a plural noun\n1 http://api.music.restapi.org/artists/mikemassedotcom/playlists Verb or verb phrase applied to controller name\n1 2 3 4 http://api.college.restapi.org/students/morgan/register http://api.example.restapi.org/lists/4324/dedupe http://api.ognom.restapi.org/dbs/reindex http://api.build.restapi.org/qa/nightly/runTestSuite Variable path segments can be used for substitution based on the value of the identifier\n1 2 http://api.soccer.restapi.org/leagues/{leagueId}/teams/{teamsId}/players/{playerId} http://api.soccer.restapi.org/leagues/seattle/teams/trebuchet/players/21 CRUD function names should not be used in URIs\n1 2 3 4 5 6 7 Incorrect: GET /deleteUser?id=1234 GET /deleteUsers/1234 DELETE /deleteUser/1234 POST /users/1234/delete Correct: DELETE /users/1234 A query component of a URI can be used to filter collections or store\n1 2 GET /users GET /users?role=admin The query component of the URI should be used for paging to collect or store results\n1 GET /users?pageSize=25\u0026amp;\u0026amp;pageStartIndex=50 Request Methods(RFC2616) 1 Request-Line = Method SP Request-URI SP HTTP-Version CRLF GET is to retrieve a representation of a resource\u0026rsquo;s state.\nHEAD is used to retrieve the metadata associated with the resource\u0026rsquo;s state.\nPUT should be used to add a new resource to a store or update a resource.\nDELETE removes a resource from its parent.\nPOST should be used to create a new resource within a collection and execute controllers.\nRequest Method Rules GET and POST cannot be used for other request methods\nMust use GET to retrieve the expression of the resource\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 $ curl -v http://api.example.restapi.org/greeting \u0026gt; GET /greeting HTTP/1.1 \u0026gt; User-Agent: curl/7.20.1 \u0026gt; Host: api.example.restapi.org \u0026gt; Accept: *.* \u0026lt; HTTP/1.1 200 OK \u0026lt; Date: Sat, 20 Aug 2011 16:02:40 GMT \u0026lt; Server: Apache \u0026lt; Expires: Sat, 20 Aug 2011 16:06:40 GMT \u0026lt; Cache-Control: max-age=60, must-revalidate \u0026lt; ETag: text/html:hello world \u0026lt; Last-Modified: Sat, 20 Aug 2011 16:02:17 GMT \u0026lt; Vary: Accept-Encoding \u0026lt; Content-Type: text/html \u0026lt;!doctype html\u0026gt;\u0026lt;head\u0026gt;\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt;\u0026lt;title\u0026gt;Greeting\u0026lt;/title\u0026gt;\u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;div id=\u0026#34;greeting\u0026#34;\u0026gt;Hello World!\u0026lt;/div\u0026gt;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt; HEAD is applied to retrieve response headers\n1 2 3 4 5 6 7 8 9 10 11 $curl --head http://api.example.restapi.org/greeting HTTP/1.1 200 OK Date: Sat, 20 Aug 2011 16:02:40 GMT Server: Apache Expires: Sat, 20 Aug 2011 16:03:40 GMT Cache-Control: max-age=60, must-revalidate ETag: text/html:hello world Last-Modified: Sat, 20 Aug 2011 16:02:17 GMT Vary: Accept-Encoding Context-Type: text/html PUT must be used to insert and update the stored resources\n1 PUT /accounts/4ef2d5d0-cb7e-11e0-9572-0800200c9a66/buckets/objects/4321 PUT must be used to update variable resources\nMust use POST to create a new resource in a collection\n1 2 3 POST /leagues/seattle/teams/trebuchet/players # Note the request message may contain a representation that suggests the initial state of the player to be created. POST must be used to execute the controller\n1 POST /alerts/245743/resend DELETE must be used to delete the resource\n1 DELETE /accounts/4ef2d5d0-cb7e-11e0-9572-080020c9a66/buckets/objects/4321 OPTIONS should be used to retrieve metadata describing the interactions available to the resource\nResponse Status Codes Category Description 1xx: Informational Communicates transfer protocol-level information. 2xx: Success Indicates that the client\u0026rsquo;s request was accepted successfully. 3xx: Redirection Indicates that the client must take some additional action in order to complete their request. 4xx: Client Error This category of error status codes points the finger at clients. 5xx: Server Error The server takes responsibility for these error status codes Response Status Code Rules 200 OK (indicates non-specific success) 200 OK (cannot be used to communicate errors in the corresponding body) 201 Created (indicates that the resource was created successfully) 202 Accepted (must be used to indicate that an asynchronous operation has been successfully started) 204 No Content (Use 204 if the corresponding body is intentionally empty) 301 Moved Permanently (used to relocate the resource) 302 Found (this rule should not be used) 303 See Other (applied to refer clients to a different URI) 304 Not Modified (applied to reserve bandwidth) 307 Temporary Redirect (tells the client to resubmit the request to another URI) 400 Bad Request (indicates a non-specific failure) 401 Unauthorized (must be used when there is a problem with the client\u0026rsquo;s credentials) 403 Forbidden (user access to the resource exceeds permissions, access is prohibited) 404 Not Found (404 must be used when the URI cannot be mapped to a resource) 405 Method Not Allowed (when HTTP methods are not supported, 405 must be used) 406 Not Acceptable (406 must be used when the requested file type cannot be provided) 409 Conflict (when attempting to place a resource in an impossible or inconsistent state) 412 Precondition Failed (precondition in request header not met, returned 412 and did not execute request) 415 Unsupported Media Type (415 must be used when the file type requested by the client cannot be handled) 500 Internal Server Error (used to indicate API failure) HTTP Headers Rules Content-Type must be used Content-Length should be used Last-Modified should be used in the response ETag should be used in the response Storage must support conditional PUT requests Location must be used to specify the URI of the newly created resource Cache-Control, Expires and Date request headers should be used to encourage caching Cache-Control, Expires, and Pragma response headers can be used to block caching Caching should be encouraged Expiration caching cache headers should be used with the 200 (OK) response Expiration caching cache headers can optionally be used with 3xx and 4xx responses custom HTTP headers cannot be used to change the behavior of HTTP methods Media Types 1 type \u0026#34;/\u0026#34; subtype *( \u0026#34;;\u0026#34; parameter ) Registered Media Types Registered Media Types Description text/plain A plain text format with no specific content structure or markup. text/html Content that is formatted using the HyperText Markup Language (HTML). image/jpeg An image compression method that was standardized by the Joint Photographic Experts Group (JEPG). application/xml Content that is structured using the Extensible Markup Language (XML). application/atom+xml Content that uses the Atom Syndication Format (Atom), which is an XML-based format that structures data into lists known as feeds. application/javascript Source code written in the JavaScript programming language. application/json The JavaScript Object Notation (JSON) text-based format that is often used by programs to exchange structured data. Media Types Rules Application-specific media types should be used Media type negotiation should be supported when multiple representations are available Media type selection using a query parameter may be supported Message Body Rules the resource representation should support JSON JSON must be well-formed XML and other formats are optional for the resource representation Additional envelopes must not be created Hypermedia Representation Rules A consistent form should be used to represent links A consistent form should be used to represent link relations A consistent form should be used to advertise links A self link should be included in response message body representations Minimize the number of advertised “entry point” API URIs Links should be used to advertise a resource’s available actions in a state-sensitive manner Media Type Representation Rules A consistent form should be used to represent media type formats A consistent form should be used to represent media type schemas Error Representation Rules A consistent form should be used to represent errors A consistent form should be used to represent error responses Consistent error types should be used for common error conditions Client Concerns Rules New URIs should be used to introduce new concepts Schemas should be used to manage representational form versions Entity tags should be used to manage representational state versions OAuth may be used to protect resources API management solutions may be used to protect resources The query component of a URI should be used to support partial responses The query component of a URI should be used to embed linked resources JSONP should be supported to provide multi-origin read access from JavaScript Final Thoughts Principles REST API designs differ more than necessary A REST API should be designed, not coded Programmers and their organizations benefit from consistency A REST API should be created using a GUI tool ","date":"2022-06-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/rest-api-design-rulebook/","title":"REST API Design Rulebook"},{"content":"Windows batch scripts(.bat) Common file manipulation DOS commands dir (List file names) cd (Change current directory) ren (Change the file name) copy (Copy a file) del (Delete a file) md (Create subdirectory) rd (Deletes a directory) deltree (Deletes a directory tree) format (format the disk) edit (Text editor) type (Show file contents) mem (View memory status) help (Show help tips) cls (clear screen) move (Move files, change directory names) more (split screen display) xcopy (copies directories and files) echo (Show input) echo on (Turns on the command echo) echo off (Turn off the command display) @ (@ commands with @ are not displayed) pause (suspends the program, press any key to continue) \u0026gt; (Output the displayed content to somewhere) \u0026gt;\u0026gt; (Append the display to somewhere) \u0026gt;nul (command followed by \u0026gt;nul means output to empty device) mode (Sets the window size: mode con cols=32 lines=8) color (Set the background color: color 3a (background (dark indigo) and text (bright green))) title (change the title name of the current command prompt) rem (comment (belongs to the command will be displayed)) :: (comment (will not be shown)) prompt (change the current path to the root path and rename it) goto (command followed by a label to jump) : (Write the tag name after the command (not case sensitive), special tags :EOF or :eof do not need to be defined) call (call batch or label) start (starts the application) Variables Command Explanation set var=1 Define the variable var and copy 1 to a set var View the value of the variable var set v View the values of all variables starting with v set View the values of all variables %var% Value (content) of var variable set /a var=48 Assign the number 48 to the variable var, a 32-bit integer value, occupying 4 bytes set /p var The user manually enters a value for var set /p var=Please enter some text The user manually enters the value for var and displays the prompt text: \u0026ldquo;Please enter some text\u0026rdquo; set var=Hello world! echo %var:o=z% Output Hello world! without changing the var value set var2=%var:ld=ms and bugs% Assign Hello worms and bugs! to var2 without changing the var value %var:~m% A positive number m means that the variable var is taken from the left side after the mth character. A negative number m means that the variable var is taken from the right side after the -mth character and all characters to the right of it. %var:~m,n% Starting from m, n characters are taken for positive numbers, and n characters are taken for negative numbers until -n characters are left set /a num=48 Assign the value 48 to the variable num set /a result=%num%+12 The result of adding the variables num and 12 is assigned to the variable result echo %result% Display the value of the variable result setlocal EnableDelayedExpansion Delayed variable expansion makes sense of !var! Passing parameters Use % to receive arguments Pass arguments directly after call or start or when running a batch file in cmd\n1 2 3 4 5 6 7 8 Receiving parameters: echo The 1st parameter you entered is %1 echo The 2nd parameter you entered is %2 Transfer parameters: call Called.bat hello world! start Called.bat hello world! ./Called.bat hello world! Condition IF Symbols Meaning EQU equal NEQ unequal LSS less than LEQ less than or equal to GTR Greater than GEQ greater than or equal to NOT NOT if exist\t(Determine if a file exists) if defined\t(Determine if environment variables are defined) Loop FOR General format of for loop usage: for %i in (*.*) do @echo %i\n1 2 3 4 5 6 7 8 9 :::::::Batch file name modification.bat::::::: @echo off setlocal EnableDelayedExpansion set /a num=1 for %%i in (D:\\test\\*.txt) do ( ren \u0026#34;%%i\u0026#34; !num!.txt set /a num+=1 ) :::::::::::::::::::::::::::::::::::::::::::::: The for loop uses the general format of a numeric loop: for /l %i in (5,3,16) do echo %i\nThe numeric variable i becomes, in order: 5, 8, 11, 14, starting from 5 and increasing by 3 until 16.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 ::::::::::Circle Square.bat:::::::::: @echo off setlocal EnableDelayedExpansion set var=○ for /l %%i in (1,1,7) do set var=%var%!var! :: At this point the variable var has become a row of 8 consecutive circles for /l %%i in (1,1,8) do ( echo This is the first %%i copies\u0026gt; output-results-%%i.txt for /l %%j in (1,1,8) do echo %var%\u0026gt;\u0026gt;output-results-%%i.txt ) echo The 8 X 8 ○ matrix has been drawn and saved in 8 text files pause ::::::::::::::::::::::::::::::::s::::: Combination commands \u0026amp;\n1 echo Checking what executable files we have in WINDOWS... \u0026amp; dir C:\\WINDOWS\\*.exe \u0026amp; echo And we got lots of stuff here. \u0026amp; acts as a link between multiple commands.\nRegardless of the result of each of the three commands, the later one will always be executed.\n\u0026amp;\u0026amp;\nSimilar to \u0026amp;, multiple commands are juxtaposed and executed in order.\nIf there is an error in the execution of one of the multiple commands, the subsequent commands will not be executed; if there has been no error, all the concurrent commands will be executed all the time.\n||\n|| has the opposite purpose of \u0026amp;\u0026amp;.\nWhen the correct command is encountered, no further commands will be executed.\nIf no correct command is encountered, all commands will be executed.\nPipeline commands \u0026gt; and \u0026gt;\u0026gt;\nEnter the redirect command. Redirects a command or the output of a program to a specific file.\n\u0026gt; will erase the content of the original file and write it to the specified file, while \u0026gt;\u0026gt; will only append the content to the specified file.\n|\nIt can put the output of the command on its left into the command on its right as an argument.\nThe pipeline command also has \u0026lt;, \u0026lt;\u0026amp; and \u0026gt;\u0026amp;, which are not common and will not be discussed for now.\nLearning Address Windows Batch Scripting Tutorial\n","date":"2022-05-17T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/windows-batch-scripts.bat/","title":"Windows batch scripts(.bat)"},{"content":"Windows 11 allows remote desktop/remote access Windows 11 allows remote desktop Open Settings Search Remote Desktop Open Remote Desktop Windows 11 allows remote access Search Windows Defender Firewall Click Turn Windows Defender Firewall on or off Select Turn off Windows Defender Firewall from Public network settings (not recommended) Click OK below to save The display can be as shown ","date":"2022-05-12T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/windows-11-allows-remote-desktop/remote-access/","title":"Windows 11 allows remote desktop/remote access"},{"content":"MonetDB Remote Access First of all, we should know that the normal way to start MonetDB is to run the M5server.bat file directly from the installation directory After starting up, the following picture, at this time directly using another computer\u0026rsquo;s DBeaver connection will prompt that the connection is rejected Edit the M5server.bat file in the installation directory and add the \u0026ndash;set \u0026ldquo;mapi_listenaddr=all\u0026rdquo; parameter to the start the real server command below 1 --set \u0026#34;mapi_listenaddr=all\u0026#34; Save the file and re-run M5server.bat Finish References https://www.monetdb.org/documentation-Jan2022/admin-guide/manpages/mserver5/\n","date":"2022-05-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/monetdb-remote-access/","title":"MonetDB Remote Access"},{"content":"MySQL 5.7 Remote Access Go to the bin directory in the MySQL installation directory (if you have configured environment variables, go directly to step 2) Type cmd in the address bar to open a command line window (if you have configured the environment variables directly Win+R type cmd to enter) Type the command and enter 1 mysql -uroot -p Enter the command and enter, where password is the password of your msyql database 1 grant all privileges on *.* to \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39; identified by \u0026#39;password\u0026#39;; Type the command and enter 1 flush privileges; Close the window and finish ","date":"2022-05-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/mysql-5.7-remote-access/","title":"MySQL 5.7 Remote Access"},{"content":"PostgreSQL Remote Access Open the data\\pg_hba.conf file in the PostgreSQL installation directory Add the following line 1 host\tall\tall\t0.0.0.0/0\tscram-sha-256 Save to exit, done ","date":"2022-05-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/postgresql-remote-access/","title":"PostgreSQL Remote Access"},{"content":"GrapeCity written test question Title Source Title URL: https://www.grapecity.com.cn/career/challenge\nTitle Description Title: Data Visualization\nProgramming language: not limited\nTitle Description: There is a saying that goes like this: \u0026ldquo;A text is better than a table, and a table is better than a chart\u0026rdquo;. The image describes the very different efficiency and experience that charts bring to the receiver when conveying information. Therefore, at a time when computer computing power, data size and decision-making needs are increasing, the use of data visualization is becoming more and more common.\nThe scope of data visualization is wide and involves many concepts and areas such as data acquisition, processing, modeling, graphics, human-computer interaction, etc. To get started faster and have a better experience, it is wiser to use professional tools and services like DragonFly BI.\nToday, we take a hands-on approach to simple data visualization with a simplified proposition. Write a program that, for a given set of data and requirements, outputs a bar graph composed of characters.\nInput\nIn the first row, an integer N (1\u0026lt;=n\u0026lt;=20), indicating the number of entries in this data set. The second line, two strings, is used to indicate how the data is sorted on the bar chart. The first string is \u0026ldquo;Name\u0026rdquo; or \u0026ldquo;Value\u0026rdquo;, which indicates that the sorting is based on the name or value of the data item; the second string is \u0026ldquo;ASC\u0026rdquo; or \u0026ldquo;DESC\u0026rdquo;, indicating ascending or descending order. The subsequent N lines, each containing a string S and a number V separated by spaces, represent a piece of data. s, the name of the data entry, contains only lowercase letters, and V, the corresponding value, is an integer, (0\u0026lt;=V\u0026lt;=1,000,000) Output\nChart outer frame corner symbols:\n“┌”（\\u250c） “┐”（\\u2510） “└”（\\u2514） “┘”（\\u2518） Horizontal and vertical lines in the chart:\n“─”（\\u2500） “│”（\\u2502） Various cross lines in the chart:\n“├”（\\u251c） “┤”（\\u2524） “┬”（\\u252c） “┴”（\\u2534） “┼”（\\u253c） Characters used to spell columns:\n“█”（\\u2588） Spaces in the chart:\n“ ”（\\u0020） The width of the name area in the chart is determined by the maximum length of the names in the set of data, all names are aligned to the right, the maximum length of the columns in the chart is 20, the length of each column is obtained by multiplying the ratio of the data corresponding to the column and the maximum value in the set of data (this value must be greater than 0) with 20, and rounding off the part that is less than one cell.\nInput Example\n1 2 3 4 5 3 Value DESC apple 5 pen 3 pineapple 10 Output Example\nProblem Solving 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 import java.util.Arrays; import java.util.HashMap; import java.util.Scanner; public class test { public static void main(String []args) { Scanner sc = new Scanner(System.in); int num = sc.nextInt(); String way = sc.next(); String seq = sc.next(); String name; int value; int maxLength = 0; int maxNum = 0; Object[] arr = new Object[num]; HashMap\u0026lt;Object, Object\u0026gt; map = new HashMap\u0026lt;\u0026gt;(); for (int i=0; i\u0026lt;num; i++) { name = sc.next(); value = sc.nextInt(); if (name.length() \u0026gt; maxLength) maxLength = name.length(); if (value \u0026gt; maxNum) maxNum = value; if (way.equals(\u0026#34;Name\u0026#34;)) { map.put(name, value); arr[i] = name; } else { map.put(value, name); arr[i] = value; } } //Sort Arrays.sort(arr); if (seq.equals(\u0026#34;DESC\u0026#34;)) { int l = arr.length; Object temp=0; for (int i=0; i\u0026lt;l/2; i++) { temp = arr[i]; arr[i] = arr[l-i-1]; arr[l-i-1] = temp; } } //Output first line System.out.print(\u0026#39;\\u250c\u0026#39;); for (int i=0; i\u0026lt;maxLength; i++) System.out.print(\u0026#39;\\u2500\u0026#39;); System.out.print(\u0026#39;\\u252c\u0026#39;); for (int i=0; i\u0026lt;20; i++) System.out.print(\u0026#39;\\u2500\u0026#39;); System.out.println(\u0026#39;\\u2510\u0026#39;); //Output the following lines, in groups of two for (int k=0; k\u0026lt;num; k++) { //Get the row data if (way.equals(\u0026#34;Name\u0026#34;)) { name = (String)arr[k]; value = (int)map.get(arr[k]); } else { value = (int)arr[k]; name = (String)map.get(arr[k]); } //Calculate column length int q = (int)((double)value/maxNum*20); //Contains data line output System.out.print(\u0026#39;\\u2502\u0026#39;); for (int i=1; i\u0026lt;=maxLength-name.length(); i++) { System.out.print(\u0026#39;\\u0020\u0026#39;); } System.out.print(name); System.out.print(\u0026#39;\\u2502\u0026#39;); for (int i=1; i\u0026lt;=q; i++) { System.out.print(\u0026#39;\\u2588\u0026#39;); } for (int i=q; i\u0026lt;20; i++) { System.out.print(\u0026#39;\\u0020\u0026#39;); } System.out.println(\u0026#39;\\u2502\u0026#39;); //Output border line if (k == num-1) { System.out.print(\u0026#39;\\u2514\u0026#39;); for (int i=0; i\u0026lt;maxLength; i++) { System.out.print(\u0026#39;\\u2500\u0026#39;); } System.out.print(\u0026#39;\\u2534\u0026#39;); for (int i=0; i\u0026lt;20; i++) { System.out.print(\u0026#39;\\u2500\u0026#39;); } System.out.println(\u0026#39;\\u2518\u0026#39;); } else { System.out.print(\u0026#39;\\u251c\u0026#39;); for (int i=0; i\u0026lt;maxLength; i++) { System.out.print(\u0026#39;\\u2500\u0026#39;); } System.out.print(\u0026#39;\\u253c\u0026#39;); for (int i=0; i\u0026lt;20; i++) { System.out.print(\u0026#39;\\u2500\u0026#39;); } System.out.println(\u0026#39;\\u2524\u0026#39;); } } } } Run Screenshot ","date":"2021-09-04T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/grapecity-written-test-question/","title":"GrapeCity written test question"},{"content":"Install MySQL-5.7 on CentOS7 At that time, the installation of mysql5.7 encountered many problems, online solutions are not right, record down their own installation of successful installation steps and notes\nInstall mysql 5.7 Update yum local cache 1 2 yum clean cache yum makecache Check if mysql is installed on the system 1 yum list installed | grep mysql Uninstall mysql and its dependencies that come with the system (to prevent conflicts) 1 yum -y remove mysql-libs.x86_64 Install wget 1 yum install wget -y Add rpm sources to centos and select the newer ones 1 wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm Install the downloaded rpm file Go to the directory /etc/yum.repos.d/ and these two files will be added Modify the mysql-community.repo file 1 vi mysql-community.repo Install mysql using yum 1 yum install mysql-community-server -y Check the version of mysql to make sure it\u0026rsquo;s installed successfully 1 mysql -V Start mysql service 1 service mysqld start Set mysql to start on boot 1 chkconfig mysqld on From the mysqld.log file, view the mysql temporary password 1 grep \u0026#34;password\u0026#34; /var/log/mysqld.log Copy the temporary password above and login to mysql 1 mysql -uroot -p[Temporary password] If there are special characters in the temporary password, you need to add \\\\ escape, otherwise it will prompt the character exception Do not have spaces after -u and -p, or you will be prompted with a password error Change the password authentication policy (do not change it, the modified password may not pass), and then change the root user password 1 2 3 set global validate_password_policy=0; set global validate_password_length=4; alter user \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; identified by \u0026#39;123456\u0026#39;; After successfully changing your password, type quit to log out, and then log back in with your new password. Set the database user to be accessible under all ip\u0026rsquo;s, the following example with the root user (enter this command in mysql) 1 grant all privileges on *.* to \u0026#39;root\u0026#39;@\u0026#39;%\u0026#39; identified by \u0026#39;123456\u0026#39; with grant option; where root is the user, % indicates all privileges, and the password is 123456 Refresh mysql\u0026rsquo;s system permission-related tables (enter this command in mysql) 1 flush privileges; Use quit or exit to quit mysql and restart mysql service 1 service mysqld restart Turn on the firewall The linux firewall is not opened on port 3306 by default, you need to open it manually so that the local client can connect to the mysql service on linux.\nCheck if port 3306 is open 1 firewall-cmd --query-port=3306/tcp yes, means on; no means not on On the firewall, add the port 3306 that needs to be opened 1 firewall-cmd --add-port=3306/tcp --permanent Reload the added port 1 firewall-cmd --reload Query again whether port 3306 is open, and confirm that it is open 1 firewall-cmd --query-port=3306/tcp Uninstall mysql on linux If the installation fails and you want to reinstall it, you need to remove all mysql related ones.\nCheck the installed mysql components 1 rpm -qa | grep -i mysql Delete the queried files one by one 1 2 3 yum remove mysql-community-libs-compat-5.7.35-1.el7.x86_64 yum remove mysql-community-release-el6-5.noarch yum remove mysql-community-common-5.7.35-1.el7.x86_64 Delete mysql related files 1 2 3 4 5 6 yum remove mysql mysql-server mysql-libs mysql-server rm -rf /var/lib/mysq rm /etc/my.cnf rm –rf /usr/lib64/mysql rm -rf /etc/yum.repos.d/mysql* rm -rf mysql-community-release-el6-5.noarch.rpm Find residual directories, then use the rm command to delete them one by one 1 whereis mysql ","date":"2021-08-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/install-mysql-5.7-on-centos7/","title":"Install MySQL-5.7 on CentOS7"},{"content":"Install Tomcat8 on Windows Download the installation package Visit Tomcat official website https://tomcat.apache.org/\n**Select the download version in the Download column on the left, the version selected here is Tomcat8, click into **\nChoose the corresponding version to download according to your system version, here choose the Windows 64-bit operating system version, as shown in the picture click download\nInstall Tomcat8 (the downloaded zip package is the installation-free version, you can use it directly after decompression) Unzip the downloaded file\nPlace the unpacked files on the D drive\nConfigure environment variables Right-click on properties on this computer and open settings\nClick on Advanced System Settings to open System Properties\nClick on environment variables to open environment variables\nSelect path and click edit to enter the edit path variable page\nClick New, enter the directory of the bin folder under the installation directory of Tomcat8, click OK, OK, OK\nRun the command Go to the bin folder in the Tomcat8 installation directory\nClick on the address bar, type cmd and enter to open a command line window\nType service.bat install in the command line window and enter\nThe installation is successful if the picture is displayed\nTest whether it is successful Double-click to run the Tomcat8w.exe file in the bin folder to open the startup window\nClick Start to start Tomcat8\nOpen the browser, enter 127.0.0.1:8080 to access the following screen is a successful installation\n","date":"2021-07-26T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/install-tomcat8-on-windows/","title":"Install Tomcat8 on Windows"},{"content":"Install MySQL-5.7.17 on Windows Download the mysql installation package. Download the mysql installation package: mysql-5.7.17.msi.\nOr go to the official website to download the installation package.\nOpen the installation package Check the box I accept the license terms and click Next Check the Custom box and click Next Select the installation version x64 for 64-bit systems and x86 for 32-bit systems Then click on the right to select the following Advanced Options, to customize the path, I installed in the D disk root directory, and then OK, and then Next Continue to click Execute and wait for the installation Click Next after installation, continue to Next Select Server Dedicated Set the port number, generally not recommended to modify, the default 3306 can be, and then Next Enter the mysql password, and then Next Set the server name, which generally does not need to be changed either, and then Next No need to modify directly Next Click Execute to start the installation Click Finish Click Next Click Finish Open the my.ini file in the installation directory Change these two lines to innodb_flush_log_at_trx_commit=0 and innodb_buffer_pool_size=2G Save the changes and go to the bin folder in the installation directory Click on the address bar above and type cmd, then enter to open the command line in that directory Enter the command: \u0026ldquo;mysql -uroot -p\u0026rdquo;, then enter the password to enter the mysql database Enter \u0026ldquo;status\u0026rdquo; and the following image will be displayed to indicate that the installation is complete ","date":"2021-05-29T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/install-mysql-5.7.17-on-windows/","title":"Install MySQL-5.7.17 on Windows"},{"content":"Google Chrome Web Browser Export Password and Import Password Sometimes people encounter a new computer, or the company needs to adjust the computer, or that they need to import the account password stored in Google Chrome on other people\u0026rsquo;s computers, and find that you can export the password, but there is no option to import the password, it is very annoying, here to teach you how to export and import the account password of chrome Google Chrome.\nExport account password Click on Settings in the upper right corner Select password Click on the right for more actions Just click on Export Password The exported passwords are in csv format, which can be viewed in excel, but it is still not convenient, so how to import them? Import account password Open Google Chrome and type chrome://flags/#password-import-export in the address bar Then search in the search field above: password import Then select Default as Enabled on the right, and click Relaunch below to refresh the browser Finally, go back to the place where you exported your password and you will see the option to import If you import the password you exported from another computer, you\u0026rsquo;ll see that both computers have the same password for Google Chrome ","date":"2021-05-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/google-chrome-web-browser-export-password-and-import-password/","title":"Google Chrome Web Browser Export Password and Import Password"},{"content":"Gluttony Game (Java GUI) GUI Overview GUI Overview In the early days, computers offered users a monotonous, boring, character-only state of the \u0026ldquo;Command Line Interface (CLI)\u0026rdquo;. It is to this day that we can still vaguely see them: open a DOS window in Windows and you can see the footprint of history. Later, Apple took the lead in the computer\u0026rsquo;s operating system to achieve a graphical user interface (Graphical User Interface, or GUI), but due to Apple\u0026rsquo;s closed market strategy to complete their own computer hardware, operating system, application software a one-stop product, and other PC incompatible. This makes Apple miss a good opportunity to unify the global PC.\nLater, Microsoft launched the popular Windows operating system, which established the status of the operating system standard with its excellent graphical user interface. This also created the world\u0026rsquo;s richest man \u0026mdash; Bill. Gates and the titan of the IT industry, Microsoft Corporation.\nIn today\u0026rsquo;s world of graphical user interfaces, an application is not acceptable to users without a good GUI. And the Java language understands the importance of this, and it provides a set of tools that make it easy to build GUIs. In this and the next chapter, we will demonstrate this to you in full.\nA Graphical User Interface (GUI, also known as a graphical user interface) is a user interface for computer operations that uses a graphical display.\nGUI is an interface display format for human-computer communication that allows users to manipulate on-screen icons or menu options using input devices such as a mouse to select commands, invoke files, start programs, or perform some other everyday task. The GUI has many advantages over a character interface where routine tasks are performed by entering text or character commands from the keyboard. The GUI consists of windows, drop-down menus, dialog boxes, and their corresponding control mechanisms that are standardized across a variety of newer applications, i.e., the same operations are always performed in the same way. In the GUI, the user sees and manipulates graphical objects and applies the techniques of computer graphics.\nPackages for GUI development in Java java.awt package - mainly provides font/layout manager\njavax.swing package [common for commercial development] - mainly provides various components (windows/buttons/textboxes)\njava.awt.event package - event handling, implementation of backend functions.\nGame screenshots Code display The main launch class of the game 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package com.study.snake; import javax.swing.*; //游戏的主启动类 public class StartGame { public static void main(String[] args) { JFrame frame = new JFrame(\u0026#34;贪吃蛇\u0026#34;); frame.setBounds(10,10,915,720); frame.setResizable(false);//窗口大小不可变 frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); //正常游戏界面都应该在面板上！ frame.add(new GamePanel()); frame.setVisible(true); } } The game\u0026rsquo;s panelpackage com.study.snake; import javax.swing.*; import java.awt.*; import java.awt.event.ActionEvent; import java.awt.event.ActionListener; import java.awt.event.KeyEvent; import java.awt.event.KeyListener; import java.util.Random; //游戏的面板 public class GamePanel extends JPanel implements KeyListener, ActionListener { //定义蛇的数据结构 int length; //蛇的长度 int[] snakeX = new int[600]; //蛇的x坐标 25*25 int[] snakeY = new int[500]; //蛇的坐标 25*25 String fx;//初始方向 //食物的坐标 int foodX; int foodY; Random random = new Random(); int score;//成绩 //游戏当前的状态： 开始 or 停止 boolean isStart = false; //默认是停止 boolean isFail = false; //游戏失败 //定时器 以ms为单位 1000ms = 1s Timer timer = new Timer(100,this); //100毫秒执行一次！ //构造器 public GamePanel() { init(); //获得焦点和键盘事件 this.setFocusable(true); //获得焦点事件 this.addKeyListener(this); //获得键盘监听事件 timer.start(); //游戏一开始定时器就启动 } //初始化方法 public void init(){ length = 3; snakeX[0] = 100; snakeY[0] = 100; //脑袋的坐标 snakeX[1] = 75 ; snakeY[1] = 100; //第一个身体的坐标 snakeX[2] = 50 ; snakeY[2] = 100; //第二个身体的坐标 fx = \u0026#34;R\u0026#34;; //初始方向向右 foodX = 25 + 25*random.nextInt(34); foodY = 75 + 25*random.nextInt(24); score = 0;//初始0分 } //绘制面板，游戏中的所有东西，都使用这个画笔来画 @Override protected void paintComponent(Graphics g) { super.paintComponent(g);//清屏 //绘制静态的面板 this.setBackground(Color.WHITE); Data.header.paintIcon(this,g,25,11);//头部广告栏画上去 g.fillRect(25,75,850,600);//默认的游戏界面 //画积分 g.setColor(Color.WHITE); g.setFont(new Font(\u0026#34;微软雅黑\u0026#34;,Font.BOLD,18)); g.drawString(\u0026#34;长度\u0026#34;+length,750,40); g.drawString(\u0026#34;分数\u0026#34;+score,750,60); //画食物 Data.food.paintIcon(this,g,foodX,foodY); //把小蛇画上去 if (fx.equals(\u0026#34;R\u0026#34;)){ Data.right.paintIcon(this,g,snakeX[0],snakeY[0]); }else if (fx.equals(\u0026#34;L\u0026#34;)){ Data.left.paintIcon(this,g,snakeX[0],snakeY[0]); }else if (fx.equals(\u0026#34;U\u0026#34;)){ Data.up.paintIcon(this,g,snakeX[0],snakeY[0]); }else if (fx.equals(\u0026#34;D\u0026#34;)){ Data.down.paintIcon(this,g,snakeX[0],snakeY[0]); } // Data.right.paintIcon(this,g,snakeX[0],snakeY[0]);//蛇头初始化向右 for (int i = 1; i \u0026lt; length ; i++){ Data.body.paintIcon(this,g,snakeX[i],snakeY[i]);//身体坐标 } // Data.body.paintIcon(this,g,snakeX[1],snakeY[1]);//第一个身体坐标 // Data.body.paintIcon(this,g,snakeX[2],snakeY[2]);//第二个身体坐标 //游戏状态 if (isStart == false){ g.setColor(Color.WHITE); //设置字体 g.setFont(new Font(\u0026#34;微软雅黑\u0026#34;,Font.BOLD,40)); g.drawString(\u0026#34;按下空格开始游戏！\u0026#34;,300,300); } if (isFail){ g.setColor(Color.RED); //设置字体 g.setFont(new Font(\u0026#34;微软雅黑\u0026#34;,Font.BOLD,40)); g.drawString(\u0026#34;失败，按下空格重新开始！\u0026#34;,300,300); } } //键盘监听事件 @Override public void keyPressed(KeyEvent e) { int keyCode = e.getKeyCode(); //获得键盘按键是哪一个 if (keyCode == KeyEvent.VK_SPACE){ //如果按下的是空格键 if (isFail){ isFail = false; //重新开始 init(); }else{ isStart = !isStart; //取反 } repaint(); } //小蛇移动 if (keyCode == KeyEvent.VK_UP){ fx = \u0026#34;U\u0026#34;; }else if (keyCode == KeyEvent.VK_DOWN){ fx = \u0026#34;D\u0026#34;; }else if (keyCode == KeyEvent.VK_LEFT){ fx = \u0026#34;L\u0026#34;; }else if (keyCode == KeyEvent.VK_RIGHT){ fx = \u0026#34;R\u0026#34;; } } //事件监听--需要通过固定时间来刷新，1s=10次 @Override public void actionPerformed(ActionEvent e) { if (isStart \u0026amp;\u0026amp; isFail == false){ //如果游戏是开始状态并且没有失败，就让小蛇动起来 //吃食物 if (snakeX[0] == foodX \u0026amp;\u0026amp; snakeY[0] == foodY){ length++; //长度 + 1 //分数加10 score += 10; //再次随机食物 foodX = 25 + 25*random.nextInt(34); foodY = 75 + 25*random.nextInt(24); } //移动 for (int i = length-1; i \u0026gt; 0; i--){ //后一节移动到前一节的位置snakeX[1] = snakeX[0]; snakeX[i] = snakeX[i-1]; snakeY[i] = snakeY[i-1]; } //走向 if (fx.equals(\u0026#34;R\u0026#34;)){ snakeX[0] = snakeX[0]+25; if (snakeX[0] \u0026gt; 850){ snakeX[0] = 25; } //边界判断 }else if (fx.equals(\u0026#34;L\u0026#34;)){ snakeX[0] = snakeX[0]-25; if (snakeX[0] \u0026lt; 25){ snakeX[0] = 850; } //边界判断 }else if (fx.equals(\u0026#34;U\u0026#34;)){ snakeY[0] = snakeY[0]-25; if (snakeY[0] \u0026lt; 75){ snakeY[0] = 650; } //边界判断 }else if (fx.equals(\u0026#34;D\u0026#34;)){ snakeY[0] = snakeY[0]+25; if (snakeY[0] \u0026gt; 650){ snakeY[0] = 75; } //边界判断 } //失败判断，撞到自己就算失败 for (int i = 1; i \u0026lt; length; i++) { if (snakeX[0] == snakeX[i] \u0026amp;\u0026amp; snakeY[0] == snakeY[i]){ isFail = true; } } repaint(); //重画页面 } timer.start(); //定时器开启！ } @Override public void keyTyped(KeyEvent e) { } @Override public void keyReleased(KeyEvent e) { } } Games for the data center 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package com.study.snake; import javax.swing.*; import java.net.URL; //数据中心 public class Data { //相对路径 相对于当前类的路径 //绝对路径 相对于当前项目的根目录 public static URL headerURL = Data.class.getResource(\u0026#34;statics/header.png\u0026#34;); public static ImageIcon header = new ImageIcon(headerURL); public static URL upURL = Data.class.getResource(\u0026#34;statics/up.png\u0026#34;); public static ImageIcon up = new ImageIcon(upURL); public static URL downURL = Data.class.getResource(\u0026#34;statics/down.png\u0026#34;); public static ImageIcon down = new ImageIcon(downURL); public static URL leftURL = Data.class.getResource(\u0026#34;statics/left.png\u0026#34;); public static ImageIcon left = new ImageIcon(leftURL); public static URL rightURL = Data.class.getResource(\u0026#34;statics/right.png\u0026#34;); public static ImageIcon right = new ImageIcon(rightURL); public static URL foodURL = Data.class.getResource(\u0026#34;statics/food.png\u0026#34;); public static ImageIcon food = new ImageIcon(foodURL); public static URL bodyURL = Data.class.getResource(\u0026#34;statics/body.png\u0026#34;); public static ImageIcon body = new ImageIcon(bodyURL); } Code Download Source code download link: Gluttony Game\n","date":"2020-12-24T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/gluttony-game-java-gui/","title":"Gluttony Game (Java GUI)"},{"content":"Machine Learning - Model evaluation and selection \u0026amp; K-means clustering algorithm Note: The code is for reference only, according to the actual situation to make the appropriate changes, can not be completely copied, otherwise it will not work!\n1.Importing Class Libraries 1 2 from pandas import read_csv #Use pandas to import data and perform descriptive statistical analysis on the data from matplotlib import pyplot #Plotting with matplotlib, data visualization 2.Importing Data Sets 1 2 3 4 5 #Using the sample dataset that comes with sklearn from sklearn import datasets iris=datasets.load_iris() #The dataset has two files, iris.data, which stores feature data, and iris.target, which stores category data. #View and visualize the two datasets by yourself. Use functions such as describe(), info(), hist(), scatter(), etc. 3.Separate data sets 1 2 3 4 5 from sklearn.model_selection import train_test_split # The train_test_split function is used to randomly divide the matrix into a training subset and a test subset, and return the divided training set test set samples and training set test set labels. validation_size = 0.2 #Separate data, 80% training dataset, 20% evaluation dataset seed = 7 X_train, X_validation, Y_train, Y_validation = train_test_split(iris.data,iris.target, test_size=validation_size, random_state=seed) 4.Algorithm performance is evaluated using two algorithms, logistic regression and Bayesian classifier, and validated on a test set. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 from sklearn.linear_model import LogisticRegression #Logistic regression from sklearn.metrics import accuracy_score from sklearn.metrics import classification_report from sklearn.metrics import confusion_matrix from sklearn.naive_bayes import GaussianNB #Plain Bayesian from sklearn.model_selection import KFold from sklearn.model_selection import cross_val_score # Algorithm review (note that before using a particular algorithm, import it yourself from the skleran class library) models = {} models[\u0026#39;LR\u0026#39;] = LogisticRegression() models[\u0026#39;LDA\u0026#39;] = LinearDiscriminantAnalysis() models[\u0026#39;KNN\u0026#39;] = KNeighborsClassifier() models[\u0026#39;CART\u0026#39;] = DecisionTreeClassifier() models[\u0026#39;NB\u0026#39;] = GaussianNB() models[\u0026#39;SVM\u0026#39;] = SVC() # Evaluation algorithm using ten-fold cross-validation results = [] for key in models: kfold = KFold(n_splits=10, random_state=seed) cv_results = cross_val_score(models[key], X_train, Y_train, cv=kfold, scoring=\u0026#39;accuracy\u0026#39;)\tresults.append(cv_results) print(\u0026#39;%s: %f (%f)\u0026#39; %(key, cv_results.mean(), cv_results.std())) #Validate and compare the classification effect of the two algorithms on the test set lr=LogisticRegression() lr.fit(X=X_train, y=Y_train) predictions = lr.predict(X_validation) print(accuracy_score(Y_validation, predictions)) #Prediction Accuracy print(confusion_matrix(Y_validation, predictions)) #Conflict Matrix print(classification_report(Y_validation, predictions)) #Data Report nb = GaussianNB() nb.fit(X=X_train, y=Y_train) predictions = nb.predict(X_validation) print(accuracy_score(Y_validation, predictions)) print(confusion_matrix(Y_validation, predictions)) print(classification_report(Y_validation, predictions)) What should I do if an erase warning message appears? How do I get rid of it?\n1 2 3 4 Method 1: Specify the two default parameters of the LogisticsRegression function lr=LogisticRegression(solver=\u0026#39;liblinear\u0026#39;,multi_class=\u0026#39;auto\u0026#39;) Method 2: Import warnings warnings.filterwarnings(\u0026#34;ignore\u0026#34;) Sklearn implementation of K-means clustering: ","date":"2020-11-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/machine-learning-model-evaluation-and-selection-k-means-clustering-algorithm/","title":"Machine Learning - Model evaluation and selection \u0026 K-means clustering algorithm"},{"content":"Machine Learning - Logistic regression experiments Learning Logistic Regression with scikit-learn and pandas 1. Get the data, define the problem The sinking of the Titanic is one of the most infamous shipwrecks in history.On April 15, 1912, during its first voyage, the Titanic sank after hitting an iceberg, killing 1,502 of the 2,224 passengers and crew. One of the reasons for the loss of life was that there were not enough lifeboats for the passengers and crew. While there were factors that contributed to the luck of surviving, some people were more likely to survive than others, such as women, children and the upper class.\nThe Titanic dataset is divided into two parts:\nTraining dataset-contains feature information and labels for survival and non-survival, train.csv\nTest dataset - contains only feature information, test.csv\nThe dataset can be downloaded from kaggle in csv format.\nYou can also download it from my csdn resources at Click to download\nWe are going to use the tools of machine learning to predict which passengers are more likely to survive the disaster.\nIn this lesson\u0026rsquo;s challenge, we are going to use a logistic regression algorithm to complete an analysis of which people are more likely to survive.\nIn scikit-learn, logistic regression is implemented through the linear_model.LogisticRegression class.\n1 2 3 4 5 6 LogisticRegression(penalty=\u0026#39;l2\u0026#39;, dual=False, tol=0.0001, C=1.0, fit_intercept=True, intercept_scaling=1, class_weight=None, random_state=None, solver=\u0026#39;warn\u0026#39;, max_iter=100, multi_class=\u0026#39;warn\u0026#39;, verbose=0, warm_start=False, n_jobs=None) Reference: https://www.cnblogs.com/wjq-Law/p/9779657.html\n1 2 3 4 5 Properties: coef_, intercept_, n_iter Methods: fit(X_train,y_train) score(X_test,y_test) predict(X) predict_proba(X) 2. View Data Data columns (total 12 columns):\nPassengerId 891 non-null int64 Pclass 891 non-null int64 Name 891 non-null object Sex 891 non-null object Age 714 non-null float64 SibSp 891 non-null int64 Parch 891 non-null int64 Ticket 891 non-null object Fare 891 non-null float64 Cabin 204 non-null object Embarked 889 non-null object It can be seen that the training set contains a total of 891 samples with 12 features each, of which Age, Cabin and Embarked have missing values. In particular, the Carbin feature has values for only 204 samples.\nSimilarly: observe the missing values in the test set.\nAdditional functions to view the data:\n1 2 3 4 5 data_trian.describe() #Description data data_trian.head() #View the first 5 rows of data data_trian.tail() #View the dimensions of the data data_trian.shape data_trian.hist() #Data visualization, histogram display. Note that you have to import the matplotlib class library first. 3. Handling of missing values Age features are very important (ladies and children are usually preferred when fleeing for their lives), so we need to fill them.\nThe methods of filling missing values are: fixed value filling, mean/median filling, adjacent value filling, and model prediction filling.\nHere we use mean fill. fillna() function.\nCabin has more missing values, and we directly discard them to avoid introducing larger noise. (Delete a feature, column) with the drop() function.\nEmbarked features have only 2 samples with missing values in the training set, so the samples with missing values can be removed directly. (Delete a sample, line)\nSimilarly, the missing values of the test set are processed.\n4. Feature Processing There are still some problems with the current data, such as the Name feature is text-based, which is not conducive to subsequent processing, so we temporarily discard it when training the model, and the Ticket feature is messy, so we also ignore it temporarily.\nPclass features, Sex features, and Embarked features are all category types, which generally need to be one-hot encoded.\nAge features, SibSp features, Parch features and Fare features are numerical and have a wide range of values, so they are generally normalized or normalized first.\nThe standardization uses the fit() function and fit_transform() function in the preprocessing.StandardScaler class library.\nfit() is used to calculate the mean and variance of the training data, which are later used to transform the training data.\nfit_transform() not only calculates the mean and variance of the training data, but also transforms the training data based on the calculated mean and variance, thus converting the data into a standard orthogonal distribution.\n5. Model Training (1) Import the required classification algorithm class library.\n1 from sklearn import linear_model.LogisticRegression() The parameters of the logistic regression function are as follows:\n1 2 3 4 LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True, intercept_scaling=1, max_iter=100, multi_class=\u0026#39;warn\u0026#39;, n_jobs=None, penalty=\u0026#39;l2\u0026#39;, random_state=None, solver=\u0026#39;lbfgs\u0026#39;, tol=1e-06, verbose=0, warm_start=False) (2) Extract the feature values and labels in the training set separately.\n(3) Divide the training set and the validation set.\ntrain_test_split() Function\n(4) Training model.\nfit() Function\n(5) Verify on the validation set and evaluate the performance.\nThe model has been trained and is performing well enough to be used for prediction.\n6. Complete python code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 import pandas as pd import matplotlib data_train = pd.read_csv(\u0026#34;D:/titanic/train.csv\u0026#34;) data_train.info() data_train.describe() data_train.head() data_train.tail() data_train.shape data_train.hist() data_train[\u0026#39;Age\u0026#39;].fillna(data_train[\u0026#39;Age\u0026#39;].mean(),inplace = True) data_train.info() data_train = data_train.drop([\u0026#39;Cabin\u0026#39;],axis=1) data_train.info() data_train = data_train.dropna(axis=0) data_train.info() data_train.head() data_train = data_train.drop([\u0026#39;Name\u0026#39;,\u0026#39;Ticket\u0026#39;],axis=1) data_train.head() cate_df = data_train[[\u0026#39;Pclass\u0026#39;,\u0026#39;Sex\u0026#39;,\u0026#39;Embarked\u0026#39;]] cate_onehot_df = pd.get_dummies(cate_df) cate_onehot_df.head() cont_df = data_train[[\u0026#39;Age\u0026#39;,\u0026#39;Fare\u0026#39;,\u0026#39;SibSp\u0026#39;,\u0026#39;Parch\u0026#39;]] cont_df.head() import sklearn.preprocessing as pr scaler = pr.StandardScaler() age_scale = scaler.fit(cont_df[\u0026#39;Age\u0026#39;].values.reshape(-1,1)) print(age_scale) cont_df[\u0026#39;Age_scaled\u0026#39;]=scaler.fit_transform(cont_df[\u0026#39;Age\u0026#39;].values. reshape(-1,1),age_scale) fare_scale = scaler.fit(cont_df[\u0026#39;Fare\u0026#39;].values.reshape(-1,1)) cont_df[\u0026#39;Fare_scaled\u0026#39;]=scaler.fit_transform(cont_df[\u0026#39;Fare\u0026#39;].values.reshape(-1,1),fare_scale) sibsp_scale=scaler.fit(cont_df[\u0026#39;SibSp\u0026#39;].values.reshape(-1,1)) cont_df[\u0026#39;SibSp_scaled\u0026#39;]=scaler.fit_transform(cont_df[\u0026#39;SibSp\u0026#39;].values.reshape(-1,1),sibsp_scale) parch_scale=scaler.fit(cont_df[\u0026#39;Parch\u0026#39;].values.reshape(-1,1)) cont_df[\u0026#39;Parch_scaled\u0026#39;]=scaler.fit_transform(cont_df[\u0026#39;Parch\u0026#39;].values.reshape(-1,1),parch_scale) cont_df.drop([\u0026#39;Age\u0026#39;,\u0026#39;Fare\u0026#39;,\u0026#39;SibSp\u0026#39;,\u0026#39;Parch\u0026#39;],axis=1,inplace=True) cont_df.head(3) cont_df.hist df_train=pd.concat([data_train[\u0026#39;Survived\u0026#39;],cate_onehot_df,cont_df],axis=1) df_train.head(3)from sklearn import linear_model y=df_train[\u0026#39;Survived\u0026#39;] X=df_train.drop([\u0026#39;Survived\u0026#39;],axis=1) from sklearn.model_selection import train_test_split X_train,X_validation,Y_train,Y_validation = \\ train_test_split(X,y,test_size=0.3,random_state=1) LR=linear_model.LogisticRegression(C=1.0,penalty=\u0026#39;l2\u0026#39;,tol=1e-6,solver=\u0026#39;lbfgs\u0026#39;) LR.fit(X_train,Y_train) y_predict=LR.predict(X_validation) y_predict_prob=LR.predict_proba(X_validation)[:,1] from sklearn.metrics import classification_report print(\u0026#39;Check accuracy rate, check completeness rate, F1 value:\u0026#39;) print(classification_report(Y_validation,y_predict,target_names=None)) from sklearn.metrics import accuracy_score print(\u0026#39;Prediction accuracy:\u0026#39;) print(accuracy_score(Y_validation,y_predict)) print(\u0026#39;Accurate to 4 decimal places: {:.4f}\u0026#39;.format(accuracy_score(Y_validation,y_predict))) from sklearn.metrics import roc_auc_score print(\u0026#39;AUC values:\u0026#39;) print((roc_auc_score(Y_validation,y_predict_prob))) print(\u0026#39;Accurate to 6 decimal places: {:.6f}\u0026#39;.format(roc_auc_score(Y_validation,y_predict_prob))) from sklearn.metrics import confusion_matrix print(\u0026#39;Confusion Matrix\u0026#39;) print(confusion_matrix(Y_validation,y_predict,labels=None)) feature=list(df_train.columns[1:]) weight=LR.coef_[0] df=pd.DataFrame({\u0026#39;feature\u0026#39;:feature,\u0026#39;weight\u0026#39;:weight}) print(df) ","date":"2020-10-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/machine-learning-logistic-regression-experiments/","title":"Machine Learning - Logistic regression experiments"},{"content":"Simple Factory Pattern and Factory Method Pattern Simple Factory Pattern Simple Factory Pattern Concept The Simple Factory Pattern is not one of GoF\u0026rsquo;s 23 classic design patterns, but it is often used as a basis for learning other factory patterns.\nSimple Factory Pattern: Define a factory class that can return instances of different classes depending on the parameters, and the instances that are created usually have a common parent class.\nSimple Factory Pattern Structure Simple Factory Pattern Structure: The structure of the Simple Factory Pattern is relatively simple, and its core is the design of the factory class.\n(1) Factory (factory role): The factory role is the factory class, which is the core of the simple factory pattern and is responsible for implementing the internal logic of creating all product instances; the factory class can be called directly by the outside world to create the required product objects; static factory methods are provided in the factory class factoryMethod(), which returns a type of abstract product type Product.\n(2) Product (abstract product role): It is the parent of all objects created by the factory class, encapsulating the public methods of various product objects, its introduction will improve the flexibility of the system, making it possible to define only a generic factory method in the factory class, because all the concrete product objects created are its sub class objects.\n(3) ConcreteProduct (Concrete Product Role): It is the creation goal of the Simple Factory pattern, and all created objects act as instances of some concrete class of this role. Each concrete product role inherits from the abstract product role and needs to implement the abstract methods declared in the abstract product.\nSimple Factory Pattern Implementation A typical abstract product class code is as follows:\n1 2 3 4 5 6 7 8 9 public abstract class Product { //Public business methods for all product classes public void methhodSame() { //Implementation of public methods } //Declaring abstract business methods public abstract void methodDiff(); } The code for a typical specific product class is as follows:\n1 2 3 4 5 6 public class ConcreteProduct extends Product { //Implementing business methods public void methodDiff() { //Business Method Implementation } } The code of a typical factory class is as follows:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 public class Factory { //Static Factory Methods public static Product getProduct(String arg) { Product product = null; if (arg.equalsIgnoreCase(\u0026#34;A\u0026#34;)) { product = new ConcreteProductA(); //Initialize and set the product } else if (arg.equalsIgnoreCase(\u0026#34;B\u0026#34;)) { product = new ConcreteProductB(); //Initialize and set the product } return product; } } In the client code, the product object is obtained by calling the factory method of the factory class. The typical code is as follows:\n1 2 3 4 5 6 7 8 public class Client { public static void main(String[] args) { Product product; product = Factory.getProduct(\u0026#34;A\u0026#34;);//Create product objects through factory classes product.methodSame(); product.methodDiff(); } } Simple factory pattern advantages and disadvantages and applicable environment Simple Factory Pattern Advantages\n(1) The factory class contains the necessary judgment logic to decide when to create an instance of which product class, the client can dispense with the responsibility of creating the product object directly, but only \u0026ldquo;consume\u0026rdquo; the product, the simple factory pattern achieves the separation of object creation and use. The simple factory pattern achieves the separation of object creation and use.\n(2) The client does not need to know the class name of the specific product class created, only the parameters corresponding to the specific product class can be, for some complex class names, through the simple factory pattern can reduce the amount of user memory to a certain extent.\n(3) By introducing configuration files, new concrete product classes can be replaced and added without modifying any client code, which improves the flexibility of the system to a certain extent.\nSimple Factory Pattern Disadvantages\n(1) Because the factory class concentrates all the product creation logic, the responsibilities are too heavy and once it does not work properly, the whole system has to be affected.\n(2) Using the simple factory pattern will inevitably increase the number of classes in the system (introducing new factory classes), increasing the degree of responsibility and understanding of the system.\n(3) The system is difficult to extend, once you add a new product you have to modify the factory logic, which may cause the factory logic to be too complex when there are more product types, which is not conducive to system expansion and maintenance.\n(4) The simple factory pattern, due to the use of static factory methods, causes the factory role to fail to form an inheritance-based hierarchy.\nSimple Factory Pattern Applicable Environment\n(1) The factory class is responsible for creating fewer objects, due to the creation of fewer objects, due to the creation of fewer objects, does not cause the business logic in the factory methods to be too complex.\n(2) The client only knows the parameters passed into the factory class and does not care about how the object is created.\nFactory Method Pattern Factory method pattern concept In the factory method pattern no longer provides a unified factory class to create all product objects, but rather provides different factories for different products, and the system provides a factory hierarchy that corresponds to the product hierarchy.\nThe Factory Method Pattern: Define an interface for creating objects, but let subclasses decide which class to instantiate. The factory method pattern lets the instantiation of a class be deferred to its subclasses.\nFactory Method Pattern Structure Factory Method Pattern Structure: The Factory Method Pattern provides an abstract factory interface to declare abstract factory methods, and its subclasses to concretely implement the factory methods to create concrete product objects.\n(1) Product (abstract product): It is the interface that defines the product, the supertype of the object created by the factory method pattern, which is the public parent class of the product object.\n(2) ConcreteProduct (Concrete Product): It implements the abstract product interface, some type of concrete product created by a specialized concrete factory, one-to-one correspondence between the concrete factory and the concrete product.\n(3) Factory (abstract factory): A factory method (Factory Method) is declared in the abstract factory class for returning a product. The abstract factory is the core of the factory method pattern, and all factory classes that create objects must implement the interface.\n(4) ConcreteFactory (Concrete Factory): It is a subclass of the abstract factory class that implements the Factory Method declared in the abstract factory and can be called by the client to return an instance of the concrete product class.\nFactory method pattern implementation Compared with the simple factory pattern, the most important feature of the factory method pattern is the introduction of the abstract factory role, which can be an interface, an abstract class or a concrete class. Its typical code is as follows:\n1 2 3 public interface Factory { public Product factoryMethod(); } In the abstract factory declared factory methods but does not implement the factory methods, the creation of concrete product objects by its subclasses responsible for the client for the abstract factory programming, you can specify the concrete factory class at runtime, the concrete factory class implements the factory methods, different concrete factory can create different concrete products. Its typical code is as follows:\n1 2 3 4 5 public class ConcreteFactory implements Factory { public Product factoryMethod() { return new ConcreteProduct(); } } In practice, the specific factory class can be responsible for the initialization of the product object and some resource and environment configuration work, such as connecting to the database and creating files, in addition to creating specific product objects when the factory method is implemented.\nIn the client code, the developer only needs to care about the factory class, and different concrete factories can create different products. A typical client-side code snippet is as follows:\n1 2 3 4 5 6 ··· Factory factory; factory = new ConcreteFactory(); Product product; product = factory.factoryMethod(); ··· You can store the class name of the concrete factory class ConcreteFactory through the configuration file, and then create the concrete factory object through the reflection mechanism, without modifying the source code when replacing the new concrete factory, and the system is more convenient to extend.\nFactory method pattern advantages and disadvantages and applicable environment Advantages of the Factory Method Pattern\n(1) In the factory method pattern, the factory method is used to create the product that the customer needs, while also hiding from the customer which specific product class will be instantiated this detail, the user only needs to care about the factory corresponding to the desired product, without caring about the creation details, or even without knowing the class name of the specific product class.\n(2) The polymorphic design based on the factory role and product role is the key to the factory method pattern. It enables the factory to determine autonomously what product object to create, and the details of how to create this object are completely encapsulated within the concrete factory. The factory method pattern is also known as the polymorphic factory pattern precisely because all concrete factory classes have the same abstract parent class.\n(3) Another priority of using the factory method pattern is to add new products to the system without modifying the interface provided by the abstract factory and abstract product, without modifying the client, and without modifying other concrete factories and concrete products, but just add a concrete factory and concrete products, so that the scalability of the system also becomes The scalability of the system becomes very good, fully consistent with the principle of open and closed.\nDrawbacks of the Factory Method Pattern\n(1) When adding new products, you need to write a new specific product class, and also provide the corresponding specific factory class, the number of classes in the system will increase in pairs, to a certain extent, increasing the complexity of the system, there are more classes to compile and run, which will bring some additional overhead to the system.\n(2) As the scalability of the system is taken into account, the abstraction layer needs to be introduced, which is defined in the client code using the abstraction layer, increasing the abstraction and understanding difficulty of the system.\nFactory Method Pattern Applicable Environment\n(1) The client does not know the class of the object it needs. In the factory method pattern, the client does not need to know the class name of the specific product class, it only needs to know the corresponding factory. The specific product object is created by the specific factory class, and the class name of the specific factory class can be stored in the configuration file or database.\n(2) abstract factory class through its subclasses to specify the creation of that object. In the factory method pattern, for the abstract factory class only need to provide an interface to create the product, and by its subclasses to determine the specific object to be created, the use of object-oriented polymorphism and the principle of Richter substitution, in the program runtime child class objects will override the parent class objects, thus making the system more easily scalable.\nDifference between \u0026ldquo;Simple Factory Pattern\u0026rdquo; and \u0026ldquo;Factory Method Pattern (1) The simple factory pattern is difficult when you need to add new product classes, you need to change the original code, not in line with the open and closed principle; and the factory method pattern does not need to change the original code when you add new product classes, fully in line with the open and closed principle.\n(2) The factory method pattern is more complex, more abstract, more system resource intensive, and more difficult to understand than the simple factory pattern.\n(3) The simple factory pattern in the factory class concentrates all the product creation logic, once it does not work properly, the whole system will be affected; while the factory method pattern divides the responsibility to each factory class, reducing the responsibility of each class.\n","date":"2020-09-10T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/simple-factory-pattern-and-factory-method-pattern/","title":"Simple Factory Pattern and Factory Method Pattern"},{"content":"Switching eclipse after the menu bar messy problem Question Today I switched the working directory of eclipse\nAfter opening it, I found a messy menu bar problem\neclipse opens like this:\nI found that the menu bar is all messed up\nSolution Workaround: Open Window - Preferences - General - Appearance\nModify the right Theme to Windows Classic\nThen tap Apply or Apply and Close and you\u0026rsquo;re done.\n","date":"2020-09-07T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/switching-eclipse-after-the-menu-bar-messy-problem/","title":"Switching eclipse after the menu bar messy problem"},{"content":"Drawing class diagrams in Eclipse using AmaterasUML plugin Install the GEF plugin Open the eclipse website https://www.eclipse.org/ Click on Projects and search for GEF Click Download on the right In the pop-up window, copy the download address The current address is: http://download.eclipse.org/tools/gef/updates/releases\nOpen eclipse, click Help above, select install new software, paste the copied address, click Add, the plugin name can be empty Select Select All (I don\u0026rsquo;t know which one I need, it\u0026rsquo;s not big to install all of them), then keep Next and accept on it Install the AmaterasUML plugin Download AmaterasUML_1.3.4 Download address: AmaterasUML_1.3.4\nYou can also go to the official website to download the latest version of AmaterasUML\nAfter downloading, unzip the package, there are 3 jar packages, copy them to the plugins directory of the eclipse installation directory, restart eclipse AmaterasUML can be seen via Window-Preference Simple use of AmaterasUML Right-click a project, New-Other, select Class Diagram, and click Next Give the class diagram a name and click Finish Then drag the class or interface into the interface, and the class appears magnificently ","date":"2020-09-04T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/drawing-class-diagrams-in-eclipse-using-amaterasuml-plugin/","title":"Drawing class diagrams in Eclipse using AmaterasUML plugin"},{"content":"Q 1072: Soda bottles Time limit: 1Sec Memory Limit: 128MB\nTitle Description Here\u0026rsquo;s a question: \u0026ldquo;A store says that three empty soda bottles can be exchanged for one bottle of soda. Zhang has ten empty soda bottles in her hand, how many bottles of soda can she drink at most?\u0026rdquo; The answer is 5 bottles, the method is as follows: first 9 empty bottles for 3 bottles of soda, drink 3 full bottles, drink 4 empty bottles, with 3 and then a bottle, drink this full bottle, which is left 2 empty bottles. Then you let the boss first lend you a bottle of soda, drink the full bottle, drink the full bottle after the 3 empty bottles for a full bottle back to the boss. If Zhang has n empty soda bottles on hand, what is the maximum number of sodas he can exchange?\ninput The input file contains up to 10 sets of test data, each taking up one line and containing only one positive integer n (1\u0026lt;=n\u0026lt;=100), indicating the number of empty soda bottles in Zhang\u0026rsquo;s hand. n=0 means the input is finished and your program should not process this line.\nOutput For each set of test data, output a line indicating the maximum number of soda bottles that can be drunk. If you can\u0026rsquo;t drink one bottle, output 0.\nSample Input 1 2 3 4 3 10 81 0 Sample Output 1 2 3 1 5 40 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include \u0026lt;stdio.h\u0026gt; int drink(int k) { int s = 0, d = 0; while(s != 2 \u0026amp;\u0026amp; s != 1){ s = k%3 + k/3; d += k/3; k = s; } if(s == 2) return ++d; else return d; } int main(void) { int n, i=0; int a[100]; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;n)){ if( n == 0) break; a[i] = drink(n); i++; } for(int j=0;j\u0026lt;i;j++) printf(\u0026#34;%d\\n\u0026#34;,a[j]); return 0; } All through C语言网 compile and run. ","date":"2020-07-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1072-soda-bottles-c-language/","title":"Q 1072 Soda bottles (C Language)"},{"content":"Q 1157: Affinity number Time limit: 1Sec Memory Limit: 128MB\nTitle Description In his study of natural numbers, the ancient Greek mathematician Pythagoras found that the sum of all the true covariates (i.e., covariates that are not themselves) of 220 is\n1+2+4+5+10+11+20+22+44+55+110 = 284.\nPeople are surprised by such a number and call it an affine number. Generally speaking, two numbers are affine if either of them is the sum of the true divisors of the other number. Your task is to write a program that determines whether the given two numbers are affine numbers\nInput The first line of the input data contains a number M, followed by M lines, one instance per line, containing two integers A,B; where 0 \u0026lt;= A,B \u0026lt;= 600000 .\nOutput For each test instance, output YES if A and B are affinity numbers, otherwise output NO.\nSample Input 1 2 3 2 220 284 100 200 Sample Output 1 2 YES NO C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 #include\u0026lt;stdio.h\u0026gt; int main() { int M,m,a[10000],b[10000],c[10000],sum_a,sum_b,j; scanf(\u0026#34;%d\u0026#34;,\u0026amp;M); m = M; while(m) { scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;a[m],\u0026amp;b[m]); m--; } for(m=1;m\u0026lt;=M;m++) { sum_a = 0; sum_b = 0; for(j=1;j\u0026lt;a[m];j++) { if(a[m]%j == 0) sum_a+=j; } for(j=1;j\u0026lt;b[m];j++) { if(b[m]%j == 0) sum_b+=j; } //\tprintf(\u0026#34;a=%d\\tb=%d\\n\u0026#34;,a[m],b[m]); //\tprintf(\u0026#34;suma=%d\\tsumb=%d\u0026#34;,sum_a,sum_b); if((sum_a==b[m])\u0026amp;\u0026amp;(sum_b==a[m])) c[m]=1; else c[m]=0; //\tprintf(\u0026#34;\\n%d\u0026#34;,c[m]); } for(j=M;j\u0026gt;=1;j--) { if(c[j]==1) printf(\u0026#34;YES\\n\u0026#34;); else printf(\u0026#34;NO\\n\u0026#34;); } return 0; } All through C语言网 compile and run. ","date":"2020-07-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1157-affinity-number-c-language/","title":"Q 1157 Affinity number (C Language)"},{"content":"Q 1393: Bell God Racing Time limit: 1Sec Memory Limit: 128MB\nTitle Description Bell God recently coded tired, want to ride a bicycle scenery, so find a certain gentleman to ride a bicycle race. The speed of each bicycle of a certain gentleman and Bell God is known, Bell God wins one game to get 50 silver taels of silver, loses one game to lose 50 silver taels, and does not earn or lose in a tie. Bell God can arrange the number of high school and low grade bicycle appearances in any order, assuming that Bell God\u0026rsquo;s physical strength is unlimited without loss seek Bell God can earn up to how much money\nInput Multiple rows of test data, each row contains an integer n and 2n 32-bit positive integers, the first n indicates the number of bicycles, the next n 32-bit integers indicate the speed of a certain gentleman\u0026rsquo;s bicycle, and the last n 32-bit integers indicate the speed of Bell God\u0026rsquo;s bicycle\nOutput The clock god can arrange the number sequence of bicycle appearances at will. Output the maximum amount of money the clock god can earn, the result must be in the range of 32-bit integers\nSample Input 1 2 3 2 1 3 2 2 3 3 2 1 3 1 1 3 Sample Output 1 2 50 0 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #include\u0026lt;stdio.h\u0026gt; void pai(int *a,int n) { int i,j,x; for(i=1;i\u0026lt;=n;i++) { for(j=0;j\u0026lt;n-1;j++) { if(a[j]\u0026lt;a[j+1]) { x=a[j];a[j]=a[j+1];a[j+1]=x; } } } } int main() { int t[1000+22],q[1000+22]; int n,i,j,k,s,win,lose; while(scanf(\u0026#34;%d\u0026#34;,\u0026amp;n)!=EOF) { k=0;win=0,lose=0; for(i=0;i\u0026lt;n;i++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;q[i]); for(i=0;i\u0026lt;n;i++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;t[i]); pai(q,n);pai(t,n); while(k\u0026lt;n) { for(i=0;i\u0026lt;n-k;i++) { if(t[0]\u0026gt;q[i]) { for(s=0;s\u0026lt;n-k-1;s++) t[s]=t[s+1]; for(s=i;s\u0026lt;n-k-1;s++) q[s]=q[s+1]; k++; win++; break; } else if((i==n-k-1)\u0026amp;\u0026amp;t[0]==q[i]) { for(s=0;s\u0026lt;n-k-1;s++) t[s]=t[s+1]; k++; break; } else if((i==n-k-1)\u0026amp;\u0026amp;t[0]\u0026lt;q[i]) { lose=i+1; k=n; break; } } } printf(\u0026#34;%d\\n\u0026#34;,50*(win-lose)); } } All through C语言网 compile and run. ","date":"2020-07-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1393-bell-god-racing-c-language/","title":"Q 1393 Bell God Racing (C Language)"},{"content":"Q 1537: [Algorithm Improvement VIP]Raster printing problems Time limit: 1Sec Memory Limit: 128MB\nTitle Description Write a program that enters two integers as the height and width of a grid, and then prints a grid using the characters \u0026ldquo;+\u0026rdquo;, \u0026ldquo;-\u0026rdquo; and \u0026ldquo;|\u0026rdquo;.\nInput The input has only one line and consists of two integers, which are the height and width of the grid.\nOutput Output the corresponding raster.\nSample Input 1 3 2 Sample Output 1 2 3 4 5 6 7 +-+-+ | | | +-+-+ | | | +-+-+ | | | +-+-+ C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #include\u0026lt;stdio.h\u0026gt; int main() { int L,H; int i,j; while(scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;H,\u0026amp;L)!=EOF) { if(H\u0026lt;=0||L\u0026lt;=0) break;//Tip: some of you did not pass is not added similar judgment (I did not add the first time also did not pass) for(i=0;i\u0026lt;H;i++) { for(j=0;j\u0026lt;=L;j++) { if(j!=L) printf(\u0026#34;+-\u0026#34;); else putchar(\u0026#39;+\u0026#39;); } putchar(\u0026#39;\\n\u0026#39;); for(j=0;j\u0026lt;=L;j++) { if(j!=L) printf(\u0026#34;| \u0026#34;); else putchar(\u0026#39;|\u0026#39;); } putchar(\u0026#39;\\n\u0026#39;); } for(j=0;j\u0026lt;=L;j++)//Back cover { if(j!=L) printf(\u0026#34;+-\u0026#34;); else putchar(\u0026#39;+\u0026#39;); } putchar(\u0026#39;\\n\u0026#39;); } return 0; } All through C语言网 compile and run. ","date":"2020-07-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1537-algorithm-improvement-vipraster-printing-problems-c-language/","title":"Q 1537 [Algorithm Improvement VIP]Raster printing problems (C Language)"},{"content":"Web front-end development technology course big assignment Assignment requirements The front-end program of the website should not only be able to present the content requested by the users, but also meet the requirements of good layout, beautiful interface, elegant color scheme, and various expressions. For this reason, the main requirements of this assignment are:\n(1) Login function. Login is the verification of the user and prevents illegal users from logging in and using it.\n(2) Registration function. Registration is set for the joining of new users and can increase the game users.\n(3) Navigation function. Provide complete system navigation function to help users quickly locate to the area they need to browse.\n(4) Advertisement rotation. The ad rotation realizes the function of displaying the core position of the main products of important customers.\n(5) Search portal. The search function provides customers with a search and positioning function, which can help customers quickly find the products they need.\nFinal Interface Code index.htmlu0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;英雄联盟\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;LOL,腾讯游戏,英雄联盟\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;LOL,腾讯游戏,英雄联盟\u0026#34; /\u0026gt; \u0026lt;link href=\u0026#34;css/index.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; /\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;js/qiehuan.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;js/switchpic.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body onload=\u0026#34;init();\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;topNavBar\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; value=\u0026#34;\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;button\u0026#34; value=\u0026#34;搜索\u0026#34; id=\u0026#34;where\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;logon.html\u0026#34; class=\u0026#34;nav_on\u0026#34;\u0026gt;注册\u0026lt;/a\u0026gt; \u0026amp;nbsp; \u0026lt;a href=\u0026#34;login.html\u0026#34; class=\u0026#34;nav_on\u0026#34;\u0026gt;登录\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;container\u0026#34; class=\u0026#34;\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;header\u0026#34; class=\u0026#34;\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;img/lol_logo.jpg\u0026#34; alt=\u0026#34;\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;menu_out\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;menu_in\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;menu\u0026#34;\u0026gt; \u0026lt;ul id=\u0026#34;nav\u0026#34;\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a class=\u0026#34;nav_on\u0026#34; id=\u0026#34;mynav0\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(0)\u0026#34; href=\u0026#34;#\u0026#34; target=\u0026#34;framebody\u0026#34;\u0026gt;\u0026lt;span\u0026gt;游戏资料\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(1)\u0026#34; id=\u0026#34;mynav1\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;游戏商城\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(2)\u0026#34; id=\u0026#34;mynav2\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;游戏合作\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(3)\u0026#34; id=\u0026#34;mynav3\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;社区互动\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(4)\u0026#34; id=\u0026#34;mynav4\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;赛事官网\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(5)\u0026#34; id=\u0026#34;mynav5\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;自助系统\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(6)\u0026#34; id=\u0026#34;mynav6\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;游戏视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(7)\u0026#34; id=\u0026#34;mynav7\u0026#34; class=\u0026#34;nav_off\u0026#34;\u0026gt;\u0026lt;span\u0026gt;填写问卷\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a class=\u0026#34;nav_off\u0026#34; id=\u0026#34;mynav8\u0026#34; onmouseover=\u0026#34;javascript:qiehuan(8)\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;关于网站\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;div id=\u0026#34;menu_con\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;qh_con0\u0026#34; style=\u0026#34;display: block\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;游戏下载\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;游戏指引\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;./web_first.html\u0026#34; target=\u0026#34;block\u0026#34;\u0026gt;\u0026lt;span\u0026gt;资料库\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;云顶之弈\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;攻略中心\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con1\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;点卷充值\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;道具城\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;周边商城\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con2\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;LOL桌游\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;LOL信用卡\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;网吧特权\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;电竞小说\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con3\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;官方社区\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;视频中心\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;官方论坛\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;官方微信\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;官方微博\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con4\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;LPL职业联赛\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;LDL发展联赛\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;全球总决赛\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;全明星赛\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;季中杯\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;德玛西亚杯\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;全国高校联赛\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con5\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;转区系统\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;封号查询\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;账号注销\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;信誉分系统\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con6\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;推荐视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;官方视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;娱乐视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;赛事视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;云顶之弈视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;教学视频\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con7\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;web_question.html\u0026#34; target=\u0026#34;block\u0026#34;\u0026gt;\u0026lt;span\u0026gt;填写问卷\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;qh_con8\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;联系客服\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;menu_line2\u0026#34;\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;span\u0026gt;网站作者\u0026lt;/span\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;main\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;top\u0026#34; class=\u0026#34;\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;\u0026lt;img id=\u0026#34;pic\u0026#34; src=\u0026#34;img/example1.jpg\u0026#34; border=\u0026#34;0\u0026#34; alt=\u0026#34;\u0026#34; onmouseover=\u0026#34;pause();\u0026#34; onmouseout=\u0026#34;reStart();\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div id=\u0026#34;down\u0026#34; class=\u0026#34;\u0026#34;\u0026gt; \u0026lt;iframe name=\u0026#34;framebody\u0026#34; src=\u0026#34;web_first.html\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;bottom\u0026#34;\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;\u0026lt;strong\u0026gt;友情链接：\u0026lt;/strong\u0026gt; \u0026lt;select size=\u0026#34;1\u0026#34; name=\u0026#34;d1\u0026#34; onchange=\u0026#34;window.open(this.options[this.selectedindex].value)\u0026#34;\u0026gt; \u0026lt;option\u0026gt; 知名游戏厂家\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp; \u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://game.qq.com/portal2010/about.htm\u0026#34;\u0026gt;腾讯游戏\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://www.activisionblizzard.com/\u0026#34;\u0026gt;动视暴雪\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://www.microsoft.com/zh-cn/\u0026#34;\u0026gt;微软游戏工作室\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://www.apple.com.cn/\u0026#34;\u0026gt;苹果\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://www.sony.com.cn/\u0026#34;\u0026gt;索尼\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;select size=\u0026#34;1\u0026#34; name=\u0026#34;d1\u0026#34; onchange=\u0026#34;window.open(this.options[this.selectedindex].value)\u0026#34;\u0026gt; \u0026lt;option\u0026gt; 优秀游戏连接\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp; \u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://pubg.qq.com/\u0026#34;\u0026gt;绝地求生\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://dnf.qq.com/\u0026#34;\u0026gt;地下城与勇士\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;http://www.m3guo.com/v2/\u0026#34;\u0026gt;梦三国\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://wow.blizzard.cn/landing\u0026#34;\u0026gt;魔兽世界\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://xyq.163.com/\u0026#34;\u0026gt;梦幻西游\u0026lt;/option\u0026gt; \u0026lt;option value=\u0026#34;https://wuxia.qq.com/\u0026#34;\u0026gt;天涯明月刀\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; 腾讯游戏\u0026amp;nbsp;·\u0026amp;nbsp;英雄联盟\u0026amp;nbsp;\u0026amp;nbsp;LOL 1998-2020\u0026amp;copy;保留所有权利，未经允许不得复制、镜像\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; login.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;登陆界面\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;css/login.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;dowebok\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;logo\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-item\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;username\u0026#34; type=\u0026#34;text\u0026#34; autocomplete=\u0026#34;off\u0026#34; placeholder=\u0026#34;账号\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-item\u0026#34;\u0026gt; \u0026lt;input id=\u0026#34;password\u0026#34; type=\u0026#34;password\u0026#34; autocomplete=\u0026#34;off\u0026#34; placeholder=\u0026#34;登录密码\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;index.html\u0026#34;\u0026gt;\u0026lt;button id=\u0026#34;submit\u0026#34;\u0026gt;登 录\u0026lt;/button\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; index.csscharset \u0026#34;utf-8\u0026#34;; * { font-size: 12px; font-family: Arial, Helvetica, sans-serif; } body { margin: 0px auto; padding: 0px; text-align: center; position: relative; } #topNavBar { position: absolute; margin-left: 290px; font-size: 20px; } #topNavBar a { font-size: 12px; } #topNavBar a:link { color: white; text-decoration: none; } #topNavBar a:visited { color: white; text-decoration: none; } #topNavBar a:hover { color: white; text-decoration: none; } #topNavBar a:active { color: white; text-decoration: none; } #where { margin-right: 660px; } #container { width: 960px; padding: 0 auto; margin: 0 auto; } img { width: 960px; height: auto; } #menu ul { padding: 0; border: 0; list-style: none; line-height: 150%; margin-top: 0; margin-right: 0; margin-bottom: 0; margin-left: 40px; } #menu li { color: white; } #menu_out { width: 960px; padding-left: 4px; margin-left: auto; margin-right: auto; background: url(\u0026#34;../img/menu_left.gif\u0026#34;) no-repeat left top; overflow: hidden; /* ����������� */ } #menu_in { background: url(\u0026#34;../img/menu_right.gif\u0026#34;) no-repeat right top; padding-right: 4px; } #menu { background: url(\u0026#34;../img/menu_bg.gif\u0026#34;) repeat-x; height: 73px; width: 960px; } .menu_line { background: url(\u0026#34;../img/menu_line.gif\u0026#34;) no-repeat center top; width: 8px; } .menu_line2 { background: url(\u0026#34;../img/menu_line2.gif\u0026#34;) no-repeat center top; width: 15px; } #nav { padding-left: 20px; width: 960px; } #nav li { float: left; height: 35px; } #nav li a { float: left; display: block; padding-left: 6px; height: 35px; background: url(\u0026#34;../img/menu_on_left.gif\u0026#34;) no-repeat left top; cursor: pointer; text-decoration: none; } #nav li a span { float: left; padding: 11px 14px 10px 10px; line-height: 14px; background: url(\u0026#34;../img/menu_on_right.gif\u0026#34;) no-repeat right top; font-size: 14px; font-weight: bold; color: #FFFFFF; text-decoration: none; } #nav li .nav_on { background-position: left 100%; } #nav li .nav_on span { background-position: right 100%; color: #333333; text-decoration: none; padding: 14px 14px 7px 10px; } #menu_con { text-align: left; padding-left: 20px; clear: both; } #menu_con li { float: left; height: 22px; margin-top: 8px; } #menu_con li a { display: block; float: left; background: url(\u0026#34;../img/menu_on_left2.gif\u0026#34;) no-repeat left top; cursor: pointer; padding-left: 3px; } #menu_con li a span { float: left; padding: 6px 10px 4px 10px; line-height: 12px; background: url(\u0026#34;../img/menu_on_right2.gif\u0026#34;) no-repeat right top; color: black; } #menu_con li a:hover { text-decoration: none; background: url(\u0026#34;../img/menu_on_left2.gif\u0026#34;) no-repeat left bottom; } #menu_con li a:hover span { background: url(\u0026#34;../img/menu_on_right2.gif\u0026#34;) no-repeat right bottom; } #main { width: 960px; height: 300px; } #top { width: 960px; height: auto; border: 1px solid white; } #top img { width: 960px; height: 489px; } #down { width: 960px; height: 500px; margin: 0 auto; } #down iframe { width: 960px; height: 500px; border: 0px; padding: 0px; margin: 0px; } .bottom { clear: both; height: 80px; background: #000000; text-align: center; padding-top: 20px; color: white; font-size: 18px; width: 960px; margin-top: 694px; /* please */ } .bottom ul { list-style: none; color: white; } login.css 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 * { margin: 0; padding: 0; } html { height: 100%; } body { height: 100%; background: #fff url(../img/example1.jpg) 50% 50% no-repeat; background-size: cover; } .dowebok { position: absolute; left: 50%; top: 50%; width: 430px; height: 550px; margin: -300px 0 0 -215px; border: 1px solid #fff; border-radius: 20px; overflow: hidden; } .logo { width: 200px; height: 100px; margin-top: 130px; margin-bottom: 70px; margin-left: 130px; background: url(../img/logo-public.png) 0 0 no-repeat; } .form-item { position: relative; width: 360px; margin: 0 auto; padding-bottom: 30px; } .form-item input { width: 288px; height: 48px; padding-left: 70px; border: 1px solid #fff; border-radius: 25px; font-size: 18px; color: #fff; background-color: transparent; outline: none; } .form-item button { width: 360px; height: 50px; border: 0; border-radius: 25px; font-size: 18px; color: #1f6f4a; outline: none; cursor: pointer; background-color: #fff; } .tip { display: none; position: absolute; left: 20px; top: 52px; font-size: 14px; color: #f50; } .reg-bar { width: 360px; margin: 20px auto 0; font-size: 14px; overflow: hidden; } .reg-bar a { color: #fff; text-decoration: none; } .reg-bar a:hover { text-decoration: underline; } .reg-bar .reg { float: left; } .reg-bar .forget { float: right; } .dowebok ::-webkit-input-placeholder { font-size: 18px; line-height: 1.4; color: #fff; } .dowebok :-moz-placeholder { font-size: 18px; line-height: 1.4; color: #fff; } .dowebok ::-moz-placeholder { font-size: 18px; line-height: 1.4; color: #fff; } .dowebok :-ms-input-placeholder { font-size: 18px; line-height: 1.4; color: #fff; } @media screen and (max-width: 500px) { * { box-sizing: border-box; } .dowebok { position: static; width: auto; height: auto; margin: 0 30px; border: 0; border-radius: 0; } .logo { margin: 50px auto; } .form-item { width: auto; } .form-item input, .form-item button, .reg-bar { width: 100%; } } swithpic.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /* switchpic.js */ var CurScreen = 1; var MaxScreen = 7; var timer = null; function $(id) { return document.getElementById(id); } function switchPic() { if (CurScreen == MaxScreen) { CurScreen = 1; } else { CurScreen++; } $(\u0026#34;pic\u0026#34;).src = \u0026#34;img/example\u0026#34; + CurScreen + \u0026#34;.jpg\u0026#34;; } function reStart() { switchPic(); init(); } function pause() { clearInterval(timer); } function init() { timer = setInterval(\u0026#39;switchPic();\u0026#39;, 1000); } csdn link Web前端开发技术课程大作业\n","date":"2020-07-27T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/web-front-end-development-technology-course-big-assignment/","title":"Web front-end development technology course big assignment"},{"content":"Computer Vision - Experiment 16 - Separate background experiments with Gaussian background modeling Experimental objectives and requirements Understand the basic principles of background modeling; master the code writing method to implement background modeling.\nExperiment content (i) Create a new project.\n(ii) Configure OpenCV in VS2015.\n(iii) Opening a video using the VideoCapture class;\n(iv) Creating a Gaussian blend model;\n(v) Update the Gaussian blending model by updating each image frame of the opened video.\n(vi) Show the foreground image and the background image.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed.\nExperimental principle (i) In many cases, we need to find the target of interest from a video or a series of images, for example, to sound an alarm when a person enters a supermarket that is already closed. To do this, we first need to \u0026ldquo;learn\u0026rdquo; the background model, and then compare the background model with the current image to get the foreground target.\n(ii) background and foreground are relative concepts, take the highway as an example: sometimes we are interested in the cars coming and going on the highway, then the cars are the foreground, while the road and the surrounding environment are the background; sometimes we are only interested in the pedestrians breaking into the highway, then the intruders are the foreground, while other things, including cars, become the background. All kinds of background models have their own application occasions.\n(iii) Mixture of Gaussians (MOG) is an advanced background statistical model implemented by OpenCv. Gaussian model is to quantify things precisely with Gaussian probability density function (normal distribution curve), and decompose one thing into several models formed based on Gaussian probability density function (normal distribution curve). The principle and process of building a Gaussian model for an image background:The image gray histogram reflects the frequency of occurrence of a certain gray value in an image, which can also be thought of as an estimate of the image gray probability density. If the target area and the background area contained in the image are relatively different, and the background area and the target area have a certain difference in gray level, then the gray level histogram of the image shows a double peak-valley shape, where one peak corresponds to the target and the other peak corresponds to the central gray level of the background. For complex images, especially medical images, they are usually multi-peaked. By considering the multi-peak property of the histogram as a superposition of multiple Gaussian distributions, the image segmentation problem can be solved.\nExperimental steps (i) Create a Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Call the open function of VideoCapture to open the video;\n(iv) Calling the BackgroundSubtractorMOG2 class to create a Gaussian mixture model;\n(v) Call the \u0026ldquo;\u0026raquo;\u0026rdquo; method of the VideoCapture class to read a frame of the video;\n(vi) Update the Gaussian blending model by updating each frame of the opened video and calling the getBackgroundImage function to get the background image.\n(vii) Call the imshow function to display the foreground image and the background image.\nExperimental notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the VideoCapture class;\n(iii) The functions and usage of the BackgroundSubtractorMOG2 class;\n(iv) The functions and usage of getBackgroundImage function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 //----------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/core/core.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026#34;opencv2/video/background_segm.hpp\u0026#34; #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026lt;stdio.h\u0026gt; using namespace std; using namespace cv; //-------------------------【help( )函数】-------------------------------------- //\t描述：输出一些帮助信息 //---------------------------------------------------------------------------------- static void help() { printf(\u0026#34;\\n\\n\\n\\t此程序展示了用高斯背景建模进行视频的背景分离方法.\\n\\n\\t主要采用cvUpdateBGStatModel()函数\\n\u0026#34; \u0026#34;\\n\\t程序首先会“学习背景”，然后进行分割。\\n\u0026#34; \u0026#34;\\n\\t可以用过【Space】空格进行功能切换。\\n\\n\u0026#34;); } //---------------------------【main( )函数】-------------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------- int main(int argc, const char** argv) { help(); VideoCapture cap; bool update_bg_model = true; cap.open(\u0026#34;1.avi\u0026#34;); if( !cap.isOpened() ) { printf(\u0026#34;can not open camera or video file\\n\u0026#34;); return -1; } namedWindow(\u0026#34;image\u0026#34;, WINDOW_AUTOSIZE); namedWindow(\u0026#34;foreground mask\u0026#34;, WINDOW_AUTOSIZE); namedWindow(\u0026#34;foreground image\u0026#34;, WINDOW_AUTOSIZE); namedWindow(\u0026#34;mean background image\u0026#34;, WINDOW_AUTOSIZE); BackgroundSubtractorMOG2 bg_model;//(100, 3, 0.3, 5); Mat img, fgmask, fgimg; for(;;) { cap \u0026gt;\u0026gt; img; if( img.empty() ) break; //cvtColor(_img, img, COLOR_BGR2GRAY); if( fgimg.empty() ) fgimg.create(img.size(), img.type()); //更新模型 bg_model(img, fgmask, update_bg_model ? -1 : 0); fgimg = Scalar::all(0); img.copyTo(fgimg, fgmask); Mat bgimg; bg_model.getBackgroundImage(bgimg); imshow(\u0026#34;image\u0026#34;, img); imshow(\u0026#34;foreground mask\u0026#34;, fgmask); imshow(\u0026#34;foreground image\u0026#34;, fgimg); if(!bgimg.empty()) imshow(\u0026#34;mean background image\u0026#34;, bgimg ); char k = (char)waitKey(30); if( k == 27 ) break; if( k == \u0026#39; \u0026#39; ) { update_bg_model = !update_bg_model; if(update_bg_model) printf(\u0026#34;\\t\u0026gt;背景更新(Background update)已打开\\n\u0026#34;); else printf(\u0026#34;\\t\u0026gt;背景更新(Background update)已关闭\\n\u0026#34;); } } return 0; } (ii) Show results\nExperiment summary The main content of this experiment is to understand the basic principles of background modeling; master the code writing method to implement background modeling. Create a new project; configure OpenCV in VS2015; open a video using the VideoCapture class; create a Gaussian blending model; update the Gaussian blending model by updating each frame of the opened video; display the foreground image and the background image.\n","date":"2020-06-12T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-16-separate-background-experiments-with-gaussian-background-modeling/","title":"Computer Vision - Experiment 16 - Separate background experiments with Gaussian background modeling"},{"content":"Computer Vision - Experiment 15 - Fast corner point detection experiments on video Experimental objectives and requirements Understand the basic principle of corner point detection; master the code writing method to implement corner point detection.\nExperiment content (i) New project .\n(ii) Configure OpenCV in VS2015.\n(iii) Opening video files using the VideoCapture class;\n(iv) Reading a frame from a video;\n(v) Convert the grayscale map and detect the corner points.\n(vi) traverse each point, plot it, and display the corner points in the original image.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed.\nExperimental principle (i) Corner point detection is a - method used in computer vision systems to obtain image features. A corner point is usually defined as the intersection of two edges, and more strictly speaking, the local neighborhood of a corner point should have two different regions with different directions of the boundary. In practice, most of the so-called corner detection methods detect image points with specific features, not just \u0026ldquo;corner points\u0026rdquo;. These feature points have specific coordinates in the image and have certain mathematical characteristics, such as local maximum or minimum grayscale;\n(ii) Corner points are used extensively to solve a range of problems such as object recognition, image recognition, image matching, visual tracking, and 3D reconstruction. Instead of looking at the whole picture, we select certain special points and then analyze them locally and purposefully. This method is of practical value if a sufficient number of such points can be detected, while they are well differentiated and stable features can be pinpointed;\n(iii) A very important evaluation criterion for corner point detection methods is their ability to detect the same or similar features in multiple images and to cope with image changes such as lighting changes, image rotation, etc. The Shi-Tomasi algorithm is an improvement of the Harris algorithm,This experiment shows that for the same target in a video by playing a video, the Shi- Tomasi algorithm has a strong robustness for the corner points obtained for the same target in the video.\nExperimental steps (i) Create a Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Call the open function of the VideoCapture class to open the video;\n(iv) Call the \u0026ldquo;\u0026raquo;\u0026rdquo; method of the VideoCapture class to read a frame of the video;\n(v) call the cvtColor function to convert the grayscale map and call the goodFeaturesToTrack function to detect the corner points.\n(vi) traverse each point and call circle to plot the corner points in the original image.\nExperimental notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the VideoCapture class;\n(iii) The functions and usage of the cvtColor function;\n(iv) The functions and usage of the goodFeaturesToTrack function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 //------------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/calib3d/calib3d.hpp\u0026#34; #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026#34;opencv2/features2d/features2d.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; #include \u0026lt;list\u0026gt; #include \u0026lt;vector\u0026gt; using namespace std; using namespace cv; //---------------------------------【help( )函数】-------------------------------------- //\t描述：输出一些帮助信息 //----------------------------------------------------------------------------------- int Harris(Mat \u0026amp;img) { Mat grayImage; //转换灰度图 cvtColor(img, grayImage, CV_BGR2GRAY); //开始进行角点检测 vector\u0026lt;Point2f\u0026gt; dstPoint2f; goodFeaturesToTrack(grayImage, dstPoint2f, 200, 0.01, 10, Mat(), 3); //遍历每个点，进行绘制，便于显示 //Mat dstImage; //img.copyTo(dstImage); for (int i = 0; i \u0026lt; (int)dstPoint2f.size(); i++) { circle(img, dstPoint2f[i], 3, Scalar(0,0,255), 2, 8); } return 0; } //---------------------------【main( )函数】-------------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------- int main() { VideoCapture capture; capture.open(\u0026#34;1.avi\u0026#34;); if (!capture.isOpened()) { cout \u0026lt;\u0026lt; \u0026#34;capture device \u0026#34; \u0026lt;\u0026lt; \u0026#34; failed to open!\u0026#34; \u0026lt;\u0026lt; endl; return 1; } Mat frame; Mat gray; for (;;) { capture \u0026gt;\u0026gt; frame; if (frame.empty()) break; int h = frame.rows; int w = frame.cols; Harris(frame); imshow(\u0026#34;frame\u0026#34;, frame); waitKey(3); //延时30ms } return 0; } (ii) Show results\nExperiment summary The main content of this experiment is to understand the basic principle of corner point detection; master the code writing method to implement corner point detection. Create a new project; configure OpenCV in VS2015; open a video file using the VideoCapture class; read a frame from the video; convert the grayscale map and detect the corner points; traverse each point, draw, and display the corner points in the original map.\n","date":"2020-06-10T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-15-fast-corner-point-detection-experiments-on-video/","title":"Computer Vision - Experiment 15 - Fast corner point detection experiments on video"},{"content":"Computer Vision - Experiment 14 - Watershed algorithm experiment Experimental objectives and requirements Understand the basic principles of the watershed algorithm; master the code writing method to implement the watershed algorithm.\nExperiment content (i) New project .\n(ii) Configuring OpenCV in VS2015.\n(iii) Load the original image and display it, initialize the mask and grayscale map;\n(iv) Finding the contours;\n(v) Copy the mask.\n(vi) loop to draw out the contours;\n(vii) traversing the watershed image to save it;\n(viii) Mix the grayscale and watershed effect maps and display the final window.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed.\nExperimental principle (i) In many practical applications, we need to segment the loft image, but cannot get useful information from the background image. Watershed algorithm is often very effective in this regard. This algorithm can transform the edges of the image into \u0026ldquo;mountains\u0026rdquo; and uniform areas into \u0026ldquo;valleys\u0026rdquo; so as to help segment the target. Watershed algorithm is a mathematical morphological segmentation method based on topological theory. The basic idea is to consider the image as a topological landscape in geodesic terms, and the gray value of each pixel in the image represents the elevation of the point. The concept and formation of the watershed can be illustrated by simulating the immersion process: on the surface of each local minima, a small hole is pierced, and then the whole model is slowly immersed in water. As the immersion deepens, the influence domain of each local minima slowly expands outward, and a dam is constructed at the confluence of the two catchment basins, i.e., the watershed is formed.\n(ii) The watershed algorithm implemented by the function watershed is one of the marker-based segmentation algorithms. Before passing the image to the function, we need to roughly outline the regions of the image that are expected to be segmented, and they are labeled as positive indices. So, each region is labeled with pixel values 1, 2, 3, etc., indicating that it becomes one or more connected components. The values of these markers can be retrieved by a binary mask using the findContours function and the drawContours function.\nExperimental steps (i) Create the Visual Studio 2015 console application;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Calling the imread function to load the original image and display it, initializing the mask and grayscale map;\n(iv) Calling the findContours function to find contours;\n(v) Copy the mask.\n(vi) call the drawContours function to loop through the contours;\n(vii) Call the watershed function to calculate the watershed, using a double-layer loop to traverse the watershed image and save it;\n(viii) Blend the grayscale and watershed effect maps and display the final window.\nExperimental notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the watershed function;\n(iii) The method of traversing the saved watershed images;\n(iv) The method of mixing grayscale and watershed effect maps.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 //---------------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------------------ #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; using namespace cv; using namespace std; //-----------------------------------【宏定义部分】-------------------------------------------- // 描述：定义一些辅助宏 //------------------------------------------------------------------------------------------------ #define WINDOW_NAME1 \u0026#34;【程序窗口1】\u0026#34; //为窗口标题定义的宏 #define WINDOW_NAME2 \u0026#34;【分水岭算法效果图】\u0026#34; //为窗口标题定义的宏 //-----------------------------------【全局函变量声明部分】-------------------------------------- //\t描述：全局变量的声明 //----------------------------------------------------------------------------------------------- Mat g_maskImage, g_srcImage; Point prevPt(-1, -1); //-----------------------------------【全局函数声明部分】-------------------------------------- //\t描述：全局函数的声明 //----------------------------------------------------------------------------------------------- static void ShowHelpText(); static void on_Mouse( int event, int x, int y, int flags, void* ); //-----------------------------------【main( )函数】-------------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始执行 //----------------------------------------------------------------------------------------------- int main( int argc, char** argv ) {\t//【0】改变console字体颜色 system(\u0026#34;color 6F\u0026#34;); //【0】显示帮助文字 ShowHelpText( ); //【1】载入原图并显示，初始化掩膜和灰度图 g_srcImage = imread(\u0026#34;1.jpg\u0026#34;, 1); imshow( WINDOW_NAME1, g_srcImage ); Mat srcImage,grayImage; g_srcImage.copyTo(srcImage); cvtColor(g_srcImage, g_maskImage, COLOR_BGR2GRAY); cvtColor(g_maskImage, grayImage, COLOR_GRAY2BGR); g_maskImage = Scalar::all(0); //【2】设置鼠标回调函数 setMouseCallback( WINDOW_NAME1, on_Mouse, 0 ); //【3】轮询按键，进行处理 while(1) { //获取键值 int c = waitKey(0); //若按键键值为ESC时，退出 if( (char)c == 27 ) break; //按键键值为2时，恢复源图 if( (char)c == \u0026#39;2\u0026#39; ) { g_maskImage = Scalar::all(0); srcImage.copyTo(g_srcImage); imshow( \u0026#34;image\u0026#34;, g_srcImage ); } //若检测到按键值为1或者空格，则进行处理 if( (char)c == \u0026#39;1\u0026#39; || (char)c == \u0026#39; \u0026#39; ) { //定义一些参数 int i, j, compCount = 0; vector\u0026lt;vector\u0026lt;Point\u0026gt; \u0026gt; contours; vector\u0026lt;Vec4i\u0026gt; hierarchy; //寻找轮廓 findContours(g_maskImage, contours, hierarchy, RETR_CCOMP, CHAIN_APPROX_SIMPLE); //轮廓为空时的处理 if( contours.empty() ) continue; //拷贝掩膜 Mat maskImage(g_maskImage.size(), CV_32S); maskImage = Scalar::all(0); //循环绘制出轮廓 for( int index = 0; index \u0026gt;= 0; index = hierarchy[index][0], compCount++ ) drawContours(maskImage, contours, index, Scalar::all(compCount+1), -1, 8, hierarchy, INT_MAX); //compCount为零时的处理 if( compCount == 0 ) continue; //生成随机颜色 vector\u0026lt;Vec3b\u0026gt; colorTab; for( i = 0; i \u0026lt; compCount; i++ ) { int b = theRNG().uniform(0, 255); int g = theRNG().uniform(0, 255); int r = theRNG().uniform(0, 255); colorTab.push_back(Vec3b((uchar)b, (uchar)g, (uchar)r)); } //计算处理时间并输出到窗口中 double dTime = (double)getTickCount(); watershed( srcImage, maskImage ); dTime = (double)getTickCount() - dTime; printf( \u0026#34;\\t处理时间 = %gms\\n\u0026#34;, dTime*1000./getTickFrequency() ); //双层循环，将分水岭图像遍历存入watershedImage中 Mat watershedImage(maskImage.size(), CV_8UC3); for( i = 0; i \u0026lt; maskImage.rows; i++ ) for( j = 0; j \u0026lt; maskImage.cols; j++ ) { int index = maskImage.at\u0026lt;int\u0026gt;(i,j); if( index == -1 ) watershedImage.at\u0026lt;Vec3b\u0026gt;(i,j) = Vec3b(255,255,255); else if( index \u0026lt;= 0 || index \u0026gt; compCount ) watershedImage.at\u0026lt;Vec3b\u0026gt;(i,j) = Vec3b(0,0,0); else watershedImage.at\u0026lt;Vec3b\u0026gt;(i,j) = colorTab[index - 1]; } //混合灰度图和分水岭效果图并显示最终的窗口 watershedImage = watershedImage*0.5 + grayImage*0.5; imshow( WINDOW_NAME2, watershedImage ); } } return 0; } //-----------------------------------【onMouse( )函数】--------------------------------------- //\t描述：鼠标消息回调函数 //----------------------------------------------------------------------------------------------- static void on_Mouse( int event, int x, int y, int flags, void* ) { //处理鼠标不在窗口中的情况 if( x \u0026lt; 0 || x \u0026gt;= g_srcImage.cols || y \u0026lt; 0 || y \u0026gt;= g_srcImage.rows ) return; //处理鼠标左键相关消息 if( event == EVENT_LBUTTONUP || !(flags \u0026amp; EVENT_FLAG_LBUTTON) ) prevPt = Point(-1,-1); else if( event == EVENT_LBUTTONDOWN ) prevPt = Point(x,y); //鼠标左键按下并移动，绘制出白色线条 else if( event == EVENT_MOUSEMOVE \u0026amp;\u0026amp; (flags \u0026amp; EVENT_FLAG_LBUTTON) ) { Point pt(x, y); if( prevPt.x \u0026lt; 0 ) prevPt = pt; line( g_maskImage, prevPt, pt, Scalar::all(255), 5, 8, 0 ); line( g_srcImage, prevPt, pt, Scalar::all(255), 5, 8, 0 ); prevPt = pt; imshow(WINDOW_NAME1, g_srcImage); } } //-----------------------------------【ShowHelpText( )函数】---------------------------------- // 描述：输出一些帮助信息 //---------------------------------------------------------------------------------------------- static void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第77个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); //输出一些帮助信息 printf( \u0026#34;\\n\\n\\n\\t欢迎来到【分水岭算法】示例程序~\\n\\n\u0026#34;); printf( \u0026#34;\\t请先用鼠标在图片窗口中标记出大致的区域，\\n\\n\\t然后再按键【1】或者【SPACE】启动算法。\u0026#34; \u0026#34;\\n\\n\\t按键操作说明: \\n\\n\u0026#34; \u0026#34;\\t\\t键盘按键【1】或者【SPACE】- 运行的分水岭分割算法\\n\u0026#34; \u0026#34;\\t\\t键盘按键【2】- 恢复原始图片\\n\u0026#34; \u0026#34;\\t\\t键盘按键【ESC】- 退出程序\\n\\n\\n\u0026#34;); } (ii) Show results\nExperiment Summary The main content of this experiment is to understand the basic principle of the watershed algorithm; to master the code writing method to implement the watershed algorithm. Create a new project, configure OpenCV in VS2015, load the original image and display it, initialize the mask and grayscale map, find the contours, copy the mask, loop through the contours, save the watershed image traversal, mix the grayscale and watershed effect maps and display the final window.\n","date":"2020-06-01T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-14-watershed-algorithm-experiment/","title":"Computer Vision - Experiment 14 - Watershed algorithm experiment"},{"content":"Computer Vision - Experiment 13 - Contour shape analysis experiment Experimental objectives and requirements To understand the basic principles of contour shape analysis; to master the method of writing code to implement contour shape analysis.\nExperiment content (i) New project.\n(ii) Configure OpenCV in VS2015.\n(iii) Obtain the grayscale image of the original image and smooth it;\n(iv) Detecting edges using Threshold;\n(v) Find the contours.\n(vi) polygonal approximation of contours and obtaining rectangular and circular bounding boxes;\n(vii) Draw polygonal outlines, enclosing rectangular and circular boxes.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed.\nExperimental principle (i) In computer vision, shape features are an important means to describe high-level visual features (e.g., target, object). The target, object is especially important to obtain the semantics of the image, so it is necessary to have good algorithms for the extraction and description of shape features. Contour shape analysis is an important way to extract shape features.\n(ii) This experiment first finds the target contour, then approximates the polygon curve with specified accuracy, then calculates the outermost rectangular boundary of the point set, finds the enclosing circle with minimum area, and finally draws the polygon contour, enclosing rectangular box, and circular box, and compares the effect of the three extracted contour shapes on the description of the target object.\nExperimental steps (i) Create the Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Obtain the grayscale image of the original image and smooth it;\n(iv) Binarize using the threshold function in OpenCV;\n(v) Use the findContours function in OpenCV to find the contours.\n(vi) polygon approximation of contours using the approxPolyDP function in OpenCV, rectangle acquisition using the boundingRect function in OpenCV, and circular bounding box using the minEnclosingCircle function in OpenCV;\n(vii) Draw polygon outlines using the drawContours function in OpenCV, enclosing rectangle boxes using the rectangle function in OpenCV, and enclosing circle boxes using the circle function in OpenCV.\nExperimental Notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the threshold function;\n(iii) The functions and usage of the approxPolyDP function;\n(iv) the functions and usage of the rectangle function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 //---------------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------------------ #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; using namespace cv; using namespace std; //-----------------------------------【宏定义部分】-------------------------------------------- // 描述：定义一些辅助宏 //------------------------------------------------------------------------------------------------ #define WINDOW_NAME1 \u0026#34;【原始图窗口】\u0026#34; //为窗口标题定义的宏 #define WINDOW_NAME2 \u0026#34;【效果图窗口】\u0026#34; //为窗口标题定义的宏 //-----------------------------------【全局变量声明部分】-------------------------------------- // 描述：全局变量的声明 //----------------------------------------------------------------------------------------------- Mat g_srcImage; Mat g_grayImage; int g_nThresh = 50;//阈值 int g_nMaxThresh = 255;//阈值最大值 RNG g_rng(12345);//随机数生成器 //-----------------------------------【全局函数声明部分】-------------------------------------- // 描述：全局函数的声明 //----------------------------------------------------------------------------------------------- void on_ContoursChange(int, void* ); static void ShowHelpText( ); //-----------------------------------【main( )函数】-------------------------------------------- // 描述：控制台应用程序的入口函数，我们的程序从这里开始执行 //----------------------------------------------------------------------------------------------- int main( ) { //【0】改变console字体颜色 system(\u0026#34;color 1F\u0026#34;); //【0】显示欢迎和帮助文字 ShowHelpText( ); //【1】载入3通道的原图像 g_srcImage = imread( \u0026#34;2007_000837.jpg\u0026#34;, 1 ); if(!g_srcImage.data ) { printf(\u0026#34;读取图片错误，请确定目录下是否有imread函数指定的图片存在~！ \\n\u0026#34;); return false; } //【2】得到原图的灰度图像并进行平滑 cvtColor( g_srcImage, g_grayImage, COLOR_BGR2GRAY ); blur( g_grayImage, g_grayImage, Size(3,3) ); //【3】创建原始图窗口并显示 namedWindow( WINDOW_NAME1, WINDOW_AUTOSIZE ); imshow( WINDOW_NAME1, g_srcImage ); //【4】设置滚动条并调用一次回调函数 createTrackbar( \u0026#34; 阈值:\u0026#34;, WINDOW_NAME1, \u0026amp;g_nThresh, g_nMaxThresh, on_ContoursChange ); on_ContoursChange( 0, 0 ); waitKey(0); return(0); } //----------------------------【on_ContoursChange( )函数】--------------------------------- // 描述：回调函数 //------------------------------------------------------------------------------------------------- void on_ContoursChange(int, void* ) { //定义一些参数 Mat threshold_output; vector\u0026lt;vector\u0026lt;Point\u0026gt;\u0026gt; contours; vector\u0026lt;Vec4i\u0026gt; hierarchy; // 使用Threshold检测边缘 threshold( g_grayImage, threshold_output, g_nThresh, 255, THRESH_BINARY ); // 找出轮廓 findContours( threshold_output, contours, hierarchy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0) ); // 多边形逼近轮廓 + 获取矩形和圆形边界框 vector\u0026lt;vector\u0026lt;Point\u0026gt; \u0026gt; contours_poly( contours.size() ); vector\u0026lt;Rect\u0026gt; boundRect( contours.size() ); vector\u0026lt;Point2f\u0026gt;center( contours.size() ); vector\u0026lt;float\u0026gt;radius( contours.size() ); //一个循环，遍历所有部分，进行本程序最核心的操作 for( unsigned int i = 0; i \u0026lt; contours.size(); i++ ) { approxPolyDP( Mat(contours[i]), contours_poly[i], 3, true );//用指定精度逼近多边形曲线 boundRect[i] = boundingRect( Mat(contours_poly[i]) );//计算点集的最外面（up-right）矩形边界 minEnclosingCircle( contours_poly[i], center[i], radius[i] );//对给定的 2D点集，寻找最小面积的包围圆形 } // 绘制多边形轮廓 + 包围的矩形框 + 圆形框 //Mat drawing = Mat::zeros( threshold_output.size(), CV_8UC3 ); Mat drawing = g_srcImage.clone(); for( int unsigned i = 0; i\u0026lt;contours.size( ); i++ ) { Scalar color = Scalar( g_rng.uniform(0, 255), g_rng.uniform(0,255), g_rng.uniform(0,255) );//随机设置颜色 drawContours( drawing, contours_poly, i, color, 1, 8, vector\u0026lt;Vec4i\u0026gt;(), 0, Point() );//绘制轮廓 rectangle( drawing, boundRect[i].tl(), boundRect[i].br(), color, 2, 8, 0 );//绘制矩形 circle( drawing, center[i], (int)radius[i], color, 2, 8, 0 );//绘制圆 } // 显示效果图窗口 namedWindow( WINDOW_NAME2, WINDOW_AUTOSIZE ); imshow( WINDOW_NAME2, drawing ); } //-----------------------------------【ShowHelpText( )函数】---------------------------------- // 描述：输出一些帮助信息 //---------------------------------------------------------------------------------------------- static void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第75个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); //输出一些帮助信息 printf(\u0026#34;\\n\\n\\n\\t欢迎来到【创建包围轮廓的矩形和圆形边界框】示例程序~\\n\\n\u0026#34;); printf( \u0026#34;\\n\\n\\t按键操作说明: \\n\\n\u0026#34; \u0026#34;\\t\\t键盘按键【ESC】- 退出程序\\n\\n\u0026#34; \u0026#34;\\t\\t滑动滚动条 - 改变阈值\\n\\n\u0026#34;); } (ii) Show results\nExperiment summary The main content of this experiment is to understand the basic principle of contour shape analysis; master the code writing method to implement contour shape analysis. Create a new project, configure OpenCV in VS2015, get the grayscale image of the original image and smooth it, use Threshold to detect the edges, find out the contour, polygon approximation of the contour, get the rectangular and circular bounding boxes, draw the polygon contour, the enclosed rectangular box and the circular box.\n","date":"2020-05-27T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-13-contour-shape-analysis-experiment/","title":"Computer Vision - Experiment 13 - Contour shape analysis experiment"},{"content":"Computer Vision - Experiment 12 - Discrete Fourier Transform Experiment Experimental objectives and requirements Understand the basic principle of Fourier transform; master the code writing method to implement Fourier transform.\nExperiment content (i) New project.\n(ii) Configure OpenCV in VS2015.\n(iii) Read the original image in grayscale mode and display it;\n(iv) Write code to implement the Fourier transform;\n(v) Display the Fourier transform effect graph.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) Discrete Fourier transform (DFT), which is the Fourier transform in both the time and frequency domains in a discrete form, transforms the sampling of the time-domain signal into sampling in the frequency domain of the discrete-time Fourier transform. Formally, the sequences at both ends of the transform (in the time and frequency domains) are finite-length, while in practice both sets of sequences should be considered as principal value sequences of discrete periodic signals. Even if a DFT is done for a finite-length discrete signal, it should be transformed again after it has been extended periodically to become a periodic signal. In practical applications, the fast Fourier transform is usually used to compute the DFT efficiently.\n(ii) Inside the frequency domain, for an image, places with intense changes in brightness or grayscale correspond to high-frequency components, such as edge and texture information; places with little change in brightness or grayscale correspond to low-frequency components. If the image is subjected to noise that happens to lie within a specific \u0026ldquo;frequency\u0026rdquo; range, the original image can be recovered by a filter. Fourier transform can be used in image processing for image enhancement and image denoising, image segmentation and edge detection, image feature extraction, image compression, etc.\nExperimental steps (i) Create Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Reading the original image in grayscale mode and displaying it;\n(iv) Extend the input image to the optimal size, with borders supplemented by 0;\n(v) Allocate storage space for the results of the Fourier transform (real and imaginary parts);\n(vi) Performing the discrete Fourier transform;\n(vii) Convert the complex numbers into magnitudes;\n(viii) Performing logarithmic scale scaling;\n(ix) shear and redistribute the magnitude map quadrant;\n(x) Normalization, transforming the matrix into a visual image format using floating point values between 0 and 1;\n(xi) Display the Fourier transform effect map.\nExperimental notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the dft function;\n(iii) The method of clipping and redistributing magnitude map quadrants;\n(iv) The function and usage of the normalize function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 //-----------------------【头文件、命名空间包含部分】----------------------------- //\t描述：包含程序所使用的头文件和命名空间 //--------------------------------------------------------------------------------- #include \u0026#34;opencv2/core/core.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; using namespace cv; //-----------------------------------【ShowHelpText( )函数】------------------------ //\t描述：输出一些帮助信息 //---------------------------------------------------------------------------------- void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第28个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); } //-------------------------------【main( )函数】----------------------------------------- // 描述：控制台应用程序的入口函数，我们的程序从这里开始执行 //------------------------------------------------------------------------------------- int main( ) { //【1】以灰度模式读取原始图像并显示 Mat srcImage = imread(\u0026#34;feng.png\u0026#34;, 0); if(!srcImage.data ) { printf(\u0026#34;读取图片错误，请确定目录下是否有imread函数指定图片存在~！ \\n\u0026#34;); return false; } imshow(\u0026#34;原始图像\u0026#34; , srcImage); ShowHelpText(); //【2】将输入图像延扩到最佳的尺寸，边界用0补充 int m = getOptimalDFTSize( srcImage.rows ); int n = getOptimalDFTSize( srcImage.cols ); //将添加的像素初始化为0. Mat padded; copyMakeBorder(srcImage, padded, 0, m - srcImage.rows, 0, n - srcImage.cols, BORDER_CONSTANT, Scalar::all(0)); //【3】为傅立叶变换的结果(实部和虚部)分配存储空间。 //将planes数组组合合并成一个多通道的数组complexI Mat planes[] = {Mat_\u0026lt;float\u0026gt;(padded), Mat::zeros(padded.size(), CV_32F)}; Mat complexI; merge(planes, 2, complexI); //【4】进行就地离散傅里叶变换 dft(complexI, complexI); //【5】将复数转换为幅值，即=\u0026gt; log(1 + sqrt(Re(DFT(I))^2 + Im(DFT(I))^2)) split(complexI, planes); // 将多通道数组complexI分离成几个单通道数组，planes[0] = Re(DFT(I), planes[1] = Im(DFT(I)) //void magnitude(InputArray x, InputArray y, OutputArray magnitude); magnitude(planes[0], planes[1], planes[0]);// planes[0] = magnitude Mat magnitudeImage = planes[0]; //【6】进行对数尺度(logarithmic scale)缩放 magnitudeImage += Scalar::all(1); log(magnitudeImage, magnitudeImage);//求自然对数 //【7】剪切和重分布幅度图象限 //若有奇数行或奇数列，进行频谱裁剪 magnitudeImage = magnitudeImage(Rect(0, 0, magnitudeImage.cols \u0026amp; -2, magnitudeImage.rows \u0026amp; -2)); //重新排列傅立叶图像中的象限，使得原点位于图像中心 int cx = magnitudeImage.cols/2; int cy = magnitudeImage.rows/2; Mat q0(magnitudeImage, Rect(0, 0, cx, cy)); // ROI区域的左上 Mat q1(magnitudeImage, Rect(cx, 0, cx, cy)); // ROI区域的右上 Mat q2(magnitudeImage, Rect(0, cy, cx, cy)); // ROI区域的左下 Mat q3(magnitudeImage, Rect(cx, cy, cx, cy)); // ROI区域的右下 //交换象限（左上与右下进行交换） Mat tmp; q0.copyTo(tmp); q3.copyTo(q0); tmp.copyTo(q3); //交换象限（右上与左下进行交换） q1.copyTo(tmp); q2.copyTo(q1); tmp.copyTo(q2); //【8】归一化，用0到1之间的浮点值将矩阵变换为可视的图像格式 //此句代码的OpenCV2版为： //normalize(magnitudeImage, magnitudeImage, 0, 1, CV_MINMAX); //此句代码的OpenCV3版为: normalize(magnitudeImage, magnitudeImage, 0, 1, NORM_MINMAX); //【9】显示效果图 imshow(\u0026#34;频谱幅值\u0026#34;, magnitudeImage); waitKey(); return 0; } (ii) Show results\nExperiment summary The main content of this experiment is to understand the basic principle of Fourier transform; to master the code writing method to implement Fourier transform. Create a new project, configure OpenCV in VS2015; read the original image in grayscale mode and display it; write code to realize the Fourier transform; display the Fourier transform effect graph.\n","date":"2020-05-18T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-12-discrete-fourier-transform-experiment/","title":"Computer Vision - Experiment 12 - Discrete Fourier Transform Experiment"},{"content":"Computer Vision - Experiment 11 - LBP transformation experiment Experimental objectives and requirements Understand the basic principle of local binary pattern; master the code writing method to implement local binary pattern.\nExperiment content (i) Create a new project.\n(ii) Configuring OpenCV in VS2015.\n(iii) Read in the original image and convert it to grayscale;\n(iv) Implement the LBP algorithm and calculate the LBP texture features of the input image;\n(v) Display the LBP texture feature map.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) LBP refers to Local Binary Patterns, full name in English:Local Binary Patterns. initially functioned as an aid to image local contrast, and was not a complete feature descriptor. LBP has many variants, or improvements. Simple LBP records information about the contrast, or difference, between a pixel point and its surrounding pixel points.\n(ii) The basic idea of LBP is to compare the threshold value of neighboring pixels with a pixel in the image as the center. If the brightness of the center pixel is greater than or equal to its neighboring pixels, mark the neighboring pixel as 0, otherwise mark it as 1. We can use binary numbers to represent the LBP code of each pixel in the LBP graph.\nExperimental steps (i) Create a Visual Studio 2015 console application;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Converting the original image to grayscale using OpenCV\u0026rsquo;s cvtColor function;\n(iv) Write functions to implement the LBP algorithm to calculate the LBP texture features of the input image;\n(v) Use the imshow function of OpenCV to display the LBP texture feature map.\nExperimental Notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the cvtColor function;\n(iii) The implementation of LBP algorithm in code based on the principle of LBP algorithm.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 #include \u0026lt;opencv2/opencv.hpp\u0026gt; #include \u0026lt;limits\u0026gt; using namespace std; using namespace cv; //原始的LBP算法 //使用模板参数 /** *将原图去除最外围的一圈，里面的每个都作为中心点，来计算这个中心点相应矩形区域 *的lbp特征值。 *算出来的这个lbp特征值，就是目标mat的值， *目标mat的大小是原始mat的（rows-2,cols-2) */ template \u0026lt;typename _Tp\u0026gt; void OLBP_(const Mat\u0026amp; src, Mat\u0026amp; dst) { dst = Mat::zeros(src.rows - 2, src.cols - 2, CV_8UC1); for (int i = 1; i\u0026lt;src.rows - 1; i++) { for (int j = 1; j\u0026lt;src.cols - 1; j++) { _Tp center = src.at\u0026lt;_Tp\u0026gt;(i, j); unsigned char code = 0; code |= (src.at\u0026lt;_Tp\u0026gt;(i - 1, j - 1) \u0026gt; center) \u0026lt;\u0026lt; 7; code |= (src.at\u0026lt;_Tp\u0026gt;(i - 1, j) \u0026gt; center) \u0026lt;\u0026lt; 6; code |= (src.at\u0026lt;_Tp\u0026gt;(i - 1, j + 1) \u0026gt; center) \u0026lt;\u0026lt; 5; code |= (src.at\u0026lt;_Tp\u0026gt;(i, j + 1) \u0026gt; center) \u0026lt;\u0026lt; 4; code |= (src.at\u0026lt;_Tp\u0026gt;(i + 1, j + 1) \u0026gt; center) \u0026lt;\u0026lt; 3; code |= (src.at\u0026lt;_Tp\u0026gt;(i + 1, j) \u0026gt; center) \u0026lt;\u0026lt; 2; code |= (src.at\u0026lt;_Tp\u0026gt;(i + 1, j - 1) \u0026gt; center) \u0026lt;\u0026lt; 1; code |= (src.at\u0026lt;_Tp\u0026gt;(i, j - 1) \u0026gt; center) \u0026lt;\u0026lt; 0; dst.at\u0026lt;unsigned char\u0026gt;(i - 1, j - 1) = code; if (i == 1) cout \u0026lt;\u0026lt; \u0026#34;(\u0026#34; \u0026lt;\u0026lt; i - 1 \u0026lt;\u0026lt; \u0026#34;,\u0026#34; \u0026lt;\u0026lt; j - 1 \u0026lt;\u0026lt; \u0026#34;)=\u0026#34; \u0026lt;\u0026lt; (unsigned)code \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } if (i == 1) cout \u0026lt;\u0026lt; endl; } } template \u0026lt;typename _Tp\u0026gt; void ELBP_(const Mat\u0026amp; src, Mat\u0026amp; dst, int radius, int neighbors) { neighbors = max(min(neighbors, 31), 1); // set bounds... // Note: alternatively you can switch to the new OpenCV Mat_ // type system to define an unsigned int matrix... I am probably // mistaken here, but I didn\u0026#39;t see an unsigned int representation // in OpenCV\u0026#39;s classic typesystem... dst = Mat::zeros(src.rows - 2 * radius, src.cols - 2 * radius, CV_32SC1); for (int n = 0; n\u0026lt;neighbors; n++) { // sample points float x = static_cast\u0026lt;float\u0026gt;(radius) * cos(2.0*M_PI*n / static_cast\u0026lt;float\u0026gt;(neighbors)); float y = static_cast\u0026lt;float\u0026gt;(radius) * -sin(2.0*M_PI*n / static_cast\u0026lt;float\u0026gt;(neighbors)); // relative indices int fx = static_cast\u0026lt;int\u0026gt;(floor(x)); int fy = static_cast\u0026lt;int\u0026gt;(floor(y)); int cx = static_cast\u0026lt;int\u0026gt;(ceil(x)); int cy = static_cast\u0026lt;int\u0026gt;(ceil(y)); // fractional part float ty = y - fy; float tx = x - fx; // set interpolation weights float w1 = (1 - tx) * (1 - ty); float w2 = tx * (1 - ty); float w3 = (1 - tx) * ty; float w4 = tx * ty; // iterate through your data for (int i = radius; i \u0026lt; src.rows - radius; i++) { for (int j = radius; j \u0026lt; src.cols - radius; j++) { float t = w1*src.at\u0026lt;_Tp\u0026gt;(i + fy, j + fx) + w2*src.at\u0026lt;_Tp\u0026gt;(i + fy, j + cx) + w3*src.at\u0026lt;_Tp\u0026gt;(i + cy, j + fx) + w4*src.at\u0026lt;_Tp\u0026gt;(i + cy, j + cx); // we are dealing with floating point precision, so add some little tolerance dst.at\u0026lt;unsigned int\u0026gt;(i - radius, j - radius) += ((t \u0026gt; src.at\u0026lt;_Tp\u0026gt;(i, j)) \u0026amp;\u0026amp; (abs(t - src.at\u0026lt;_Tp\u0026gt;(i, j)) \u0026gt; std::numeric_limits\u0026lt;float\u0026gt;::epsilon())) \u0026lt;\u0026lt; n; } } } } int main(int argc, char* argv[]) { Mat color_face = imread(\u0026#34;2007_000807.jpg\u0026#34;, CV_LOAD_IMAGE_ANYDEPTH | CV_LOAD_IMAGE_ANYCOLOR); if (color_face.empty()) { cout \u0026lt;\u0026lt; \u0026#34;read picture fail!\\n\u0026#34;; return -1; } Mat olbp_face = Mat::zeros(color_face.size(), color_face.type()); //change to grey color picture cvtColor(color_face, olbp_face, CV_BGR2GRAY); //显示原始的输入图像 cvNamedWindow(\u0026#34;Src Image\u0026#34;, CV_WINDOW_AUTOSIZE); imshow(\u0026#34;Src Image\u0026#34;, olbp_face); //计算输入图像的LBP纹理特征 Mat lbp_face;//= Mat::zeros(color_face.size(),color_face.type()) ; OLBP_\u0026lt;uchar\u0026gt;(olbp_face, lbp_face); //显示LBP纹理特征图 namedWindow(\u0026#34;LBP Image1\u0026#34;, 1); imshow(\u0026#34;LBP Image1\u0026#34;, lbp_face); //use elbp // Mat elbp_face; // ELBP_\u0026lt;uchar\u0026gt;(olbp_face,elbp_face,2,4); waitKey(); return 0; } (ii) Show results\nExperiment summary The main content of this experiment is to understand the basic principle of the local binary pattern; master the code writing method to implement the local binary pattern. Create a new project, configure OpenCV in VS2015, read in the original image and convert it to grayscale image; implement the LBP algorithm to calculate the LBP texture features of the input image; display the LBP texture feature map. Learned the functions and usage of cvtColor function; Implemented LBP algorithm in code according to the principle of LBP algorithm.\n","date":"2020-05-13T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-11-lbp-transformation-experiment/","title":"Computer Vision - Experiment 11 - LBP transformation experiment"},{"content":"Computer Vision - Experiment 10 - Create a rectangular boundary that encloses the outline Experimental objectives and requirements Understand the basic principle of creating a rectangular boundary that encloses an outline; master the method of writing code to create a rectangular boundary that encloses an outline using OpenCV.\nExperiment content (i) Create a new project.\n(ii) Configuring OpenCV in VS2015.\n(iii) Randomly generate point coordinates using the RNG class in OpenCV;\n(iv) Finding the enclosing rectangle of minimum area for a given set of 2D points;\n(v) Draw the enclosing rectangle with the minimum area.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) In practical applications, there is often a need to represent the detected contour as a polygon. This experiment implements how to represent the outline with a rectangle, or how to extract the rectangle based on the outline.\n(ii) In OpenCV, using the RNG class, you can randomly generate point coordinates and then use the minAreaRect function to find the enclosing rectangle with the smallest area. The rectangle obtained by the minAreaRect function can have a deflection angle and can be parallel to the the boundaries of the image are not parallel.\nExperimental steps (i) Create a Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to randomly generate point coordinates using the RNG class in OpenCV;\n(iv) Write code to find the minimum area enclosing rectangle for the 2D point set generated in the previous step, using the minAreaRect function in OpenCV;\n(v) Write code to draw the enclosing rectangle with the smallest area detected by the minAreaRect function, using the line function in OpenCV.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the RNG class;\n(iii) The functions and usage of the minAreaRect function;\n(iv) The functions and usage of the line function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 //---------------------------------【头文件、命名空间包含部分】-------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; using namespace cv; using namespace std; //-----------------------------------【ShowHelpText( )函数】----------------------------- // 描述：输出一些帮助信息 //------------------------------------------------------------------------------------- static void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第73个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------\\n\u0026#34;); //输出一些帮助信息 printf(\u0026#34;\\n\\n\\n\\t\\t\\t欢迎来到【矩形包围示例】示例程序~\\n\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t按键操作说明: \\n\\n\u0026#34; \u0026#34;\\t\\t键盘按键【ESC】、【Q】、【q】- 退出程序\\n\\n\u0026#34; \u0026#34;\\t\\t键盘按键任意键 - 重新生成随机点，并寻找最小面积的包围矩形\\n\u0026#34; ); } int main( ) { //改变console字体颜色 system(\u0026#34;color 1F\u0026#34;); //显示帮助文字 ShowHelpText(); //初始化变量和随机值 Mat image(600, 600, CV_8UC3); RNG\u0026amp; rng = theRNG(); //循环，按下ESC,Q,q键程序退出，否则有键按下便一直更新 while(1) { //参数初始化 int count = rng.uniform(3, 103);//随机生成点的数量 vector\u0026lt;Point\u0026gt; points;//点值 //随机生成点坐标 for(int i = 0; i \u0026lt; count; i++ ) { Point point; point.x = rng.uniform(image.cols/4, image.cols*3/4); point.y = rng.uniform(image.rows/4, image.rows*3/4); points.push_back(point); } //对给定的 2D 点集，寻找最小面积的包围矩形 RotatedRect box = minAreaRect(Mat(points)); Point2f vertex[4]; box.points(vertex); //绘制出随机颜色的点 image = Scalar::all(0); for( int i = 0; i \u0026lt; count; i++ ) circle( image, points[i], 3, Scalar(rng.uniform(0, 255), rng.uniform(0, 255), rng.uniform(0, 255)), FILLED, LINE_AA ); //绘制出最小面积的包围矩形 for( int i = 0; i \u0026lt; 4; i++ ) line(image, vertex[i], vertex[(i+1)%4], Scalar(100, 200, 211), 2, LINE_AA); //显示窗口 imshow( \u0026#34;矩形包围示例\u0026#34;, image ); //按下ESC,Q,或者q，程序退出 char key = (char)waitKey(); if( key == 27 || key == \u0026#39;q\u0026#39; || key == \u0026#39;Q\u0026#39; ) // \u0026#39;ESC\u0026#39; break; } return 0; } (ii) Show the results\nExperiment Summary The main content of this experiment is to understand the basic principle of creating a rectangular boundary that encloses an outline; to master the code writing method of creating a rectangular boundary that encloses an outline using OpenCV. Create a new project, configure OpenCV in VS2015, use the RNG class in OpenCV to randomly generate point coordinates; find the enclosing rectangle with the minimum area for a given set of 2D points; draw the enclosing rectangle with the minimum area. Learned to randomly generate point coordinates using the RNG class in OpenCV; learned how to find the enclosing rectangle with the smallest area for a given set of 2D points; learned how to draw the enclosing rectangle with the smallest area.\n","date":"2020-05-04T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-10-create-a-rectangular-boundary-that-encloses-the-outline/","title":"Computer Vision - Experiment 10 - Create a rectangular boundary that encloses the outline"},{"content":"Computer Vision - Experiment 9 - Find and draw convex packets of objects experimentally Experimental aims and requirements Understand the basic principles of using convex packets; master the method of writing code to understand object shapes or corridors by convex packets using OpenCV.\nExperiment content (i) Create a new project.\n(ii) Configuring OpenCV in VS2015.\n(iii) Finding image contours using the findContours function in OpenCV;\n(iv) Iterate over each contour and use convexHull in OpenCV to find its convex package;\n(v) Write code to draw the image contours and their convex packages using the drawContours function in OpenCV.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) Convex Hull is a common concept in computational geometry (graphics). In simple terms, given a set of points on a two-dimensional plane, a convex hull is a convex polygon that connects the outermost points to form a polygon that is capable of containing all the points in the point set. One of the more useful ways to understand the shape or corridor of an object is to compute the convex envelope of an object.\n(ii) In OpenCV, the convexHull function is used to find the convex packet of an image point set.\nExperimental steps (i) Create a Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to find image contours using the findContours function;\n(iv) Write code to iterate over each contour and use the convexHull function to find its convex package;\n(v) Write code to plot the image contours and their convex packets.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the findContours function;\n(iii) The functions and usage of the convexHull function;\n(iv) the functions and usage of the drawContours function.\nExperimental results (i) experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 //---------------------------------【头文件、命名空间包含部分】--------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; using namespace cv; using namespace std; //-----------------------------------【宏定义部分】---------------------------------- // 描述：定义一些辅助宏 //------------------------------------------------------------------------------------- #define WINDOW_NAME1 \u0026#34;【原始图窗口】\u0026#34;\t//为窗口标题定义的宏 #define WINDOW_NAME2 \u0026#34;【效果图窗口】\u0026#34;\t//为窗口标题定义的宏 //-----------------------------------【全局变量声明部分】------------------------------- // 描述：全局变量的声明 //------------------------------------------------------------------------------------ Mat g_srcImage; Mat g_grayImage; int g_nThresh = 50; int g_maxThresh = 255; RNG g_rng(12345); Mat srcImage_copy = g_srcImage.clone(); Mat g_thresholdImage_output; vector\u0026lt;vector\u0026lt;Point\u0026gt; \u0026gt; g_vContours; vector\u0026lt;Vec4i\u0026gt; g_vHierarchy; //----------------------------【全局函数声明部分】-------------------------------------- // 描述：全局函数的声明 //------------------------------------------------------------------------------------- static void ShowHelpText( ); void on_ThreshChange(int, void* ); void ShowHelpText(); //-----------------------【main( )函数】------------------------------------------ // 描述：控制台应用程序的入口函数，我们的程序从这里开始执行 //------------------------------------------------------------------------------------ int main( ) { system(\u0026#34;color 3F\u0026#34;); ShowHelpText(); // 加载源图像 g_srcImage = imread( \u0026#34;2007_000804.jpg\u0026#34;, 1 ); // 将原图转换成灰度图并进行模糊降 cvtColor( g_srcImage, g_grayImage, COLOR_BGR2GRAY ); blur( g_grayImage, g_grayImage, Size(3,3) ); // 创建原图窗口并显示 namedWindow( WINDOW_NAME1, WINDOW_AUTOSIZE ); imshow( WINDOW_NAME1, g_srcImage ); //创建滚动条 createTrackbar( \u0026#34; 阈值:\u0026#34;, WINDOW_NAME1, \u0026amp;g_nThresh, g_maxThresh, on_ThreshChange ); on_ThreshChange( 0, 0 );//调用一次进行初始化 waitKey(0); return(0); } //---------------------------【thresh_callback( )函数】---------------------------------- // 描述：回调函数 //------------------------------------------------------------------------------------- void on_ThreshChange(int, void* ) { // 对图像进行二值化，控制阈值 threshold( g_grayImage, g_thresholdImage_output, g_nThresh, 255, THRESH_BINARY ); // 寻找轮廓 findContours( g_thresholdImage_output, g_vContours, g_vHierarchy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0) ); // 遍历每个轮廓，寻找其凸包 vector\u0026lt;vector\u0026lt;Point\u0026gt; \u0026gt;hull( g_vContours.size() ); for( unsigned int i = 0; i \u0026lt; g_vContours.size(); i++ ) { convexHull( Mat(g_vContours[i]), hull[i], false ); } // 绘出轮廓及其凸包 Mat drawing = Mat::zeros( g_thresholdImage_output.size(), CV_8UC3 ); Mat drawing1; cv::cvtColor(g_grayImage, drawing1, cv::COLOR_GRAY2BGR); Mat drawing2 = Mat::zeros(g_thresholdImage_output.size(), CV_8UC3); for(unsigned int i = 0; i\u0026lt; g_vContours.size(); i++ ) { Scalar color = Scalar( g_rng.uniform(0, 255), g_rng.uniform(0,255), g_rng.uniform(0,255) ); drawContours( drawing, g_vContours, i, color, 1, 8, vector\u0026lt;Vec4i\u0026gt;(), 0, Point() ); drawContours( drawing, hull, i, color, 1, 8, vector\u0026lt;Vec4i\u0026gt;(), 0, Point() ); drawContours( drawing1, hull, i, color, 1, 8, vector\u0026lt;Vec4i\u0026gt;(), 0, Point() ); drawContours(drawing2, g_vContours, i, color, 1, 8, vector\u0026lt;Vec4i\u0026gt;(), 0, Point() ); } // 显示效果图 imshow( WINDOW_NAME2, drawing ); imshow( \u0026#34;hull\u0026#34;, drawing1); imshow( \u0026#34;Contours\u0026#34;, drawing2); } //-----------------------------------【ShowHelpText( )函数】----------------------------- //\t描述：输出一些帮助信息 //------------------------------------------------------------------------------------- void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第72个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n------------------------------------------------------------------\\n\u0026#34;); } (ii) Show results\nExperiment Summary The main content of this experiment is to understand the basic principles of using convex packages; to master the code writing method to understand the shape of objects or corridors by convex packages using OpenCV. Create a new project, configure OpenCV in VS2015, use the findContours function in OpenCV to find the image contours; traverse each contour and use convexHull in OpenCV to find its convex package; write code to draw the image contours and their convexity using the drawContours function in OpenCV. Learn to find the image contours with the findContours function; learn to find their convex packages with the convexHull function; learn to draw the image contours and their convexity with the drawContours function.\n","date":"2020-04-29T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-9-find-and-draw-convex-packets-of-objects-experimentally/","title":"Computer Vision - Experiment 9 - Find and draw convex packets of objects experimentally"},{"content":"Personal Resume Exercise Final page effect Reference page https://rscard.px-lab.com/startuper/\nPersonal Works Code index.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Me的个人简历\u0026lt;/title\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;./a.css\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;topNavBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;topNavBar-inner clearfix\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34; class=\u0026#34;logo\u0026#34; alt=\u0026#34;logo\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;rs\u0026#34;\u0026gt;RS\u0026lt;/span\u0026gt;\u0026lt;span class=\u0026#34;card\u0026#34;\u0026gt;card\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;nav\u0026gt; \u0026lt;ul class=\u0026#34;clearfix\u0026#34;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;关于\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#jineng\u0026#34;\u0026gt;技能\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#zuopin\u0026#34;\u0026gt;作品\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;博客\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;日历\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;联系方式\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;其他\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;banner\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;mask\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;main\u0026gt; \u0026lt;div class=\u0026#34;userCard\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;pictureAndText clearfix\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;picture\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./img/avatar.jpg\u0026#34; width=\u0026#34;299\u0026#34; height=\u0026#34;347\u0026#34; alt=\u0026#34;头像\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;text\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;welcome\u0026#34;\u0026gt;Hello \u0026lt;span class=\u0026#34;triangle\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;h1\u0026gt;靳文杰\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;前端开发工程师\u0026lt;/p\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;dl\u0026gt; \u0026lt;dt\u0026gt;年龄\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;21\u0026lt;/dd\u0026gt; \u0026lt;dt\u0026gt;所在城市\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;西安\u0026lt;/dd\u0026gt; \u0026lt;dt\u0026gt;邮箱\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;j_861142@163.com\u0026lt;/dd\u0026gt; \u0026lt;dt\u0026gt;手机\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;15502979297\u0026lt;/dd\u0026gt; \u0026lt;/dl\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;footer class=\u0026#34;media\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./png/github.png\u0026#34; class=\u0026#34;icon\u0026#34; alt=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./png/ins.png\u0026#34; class=\u0026#34;icon\u0026#34; alt=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./png/qq.png\u0026#34; class=\u0026#34;icon\u0026#34; alt=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./png/weibo.png\u0026#34; class=\u0026#34;icon\u0026#34; alt=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./png/weixin.png\u0026#34; class=\u0026#34;icon\u0026#34; alt=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/footer\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;p class=\u0026#34;downloadResume-wrapper\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;./resume.pdf\u0026#34; class=\u0026#34;downloadResume\u0026#34; target=\u0026#34;_blank\u0026#34; download\u0026gt;下载 PDF 简历\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;p class=\u0026#34;selfIntroduction\u0026#34;\u0026gt; 靳文杰，计算机科学与技术1701班，1998年9月，共青团员。\u0026lt;br\u0026gt; 大一学年成绩在专业排名第8名，大二学年成绩在专业排名第1名。 \u0026lt;br\u0026gt; 荣获2017-2018学年国家励志奖学金、2018-2019学年国家奖学金等。 \u0026lt;/p\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;section class=\u0026#34;skills\u0026#34;\u0026gt; \u0026lt;a name=\u0026#34;jineng\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;h2\u0026gt;技能\u0026lt;/h2\u0026gt; \u0026lt;ol class=\u0026#34;clearfix\u0026#34;\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h3\u0026gt; HTML 5 \u0026amp;amp; CSS 3 \u0026lt;/h3\u0026gt; \u0026lt;div class=\u0026#34;progressBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;progress\u0026#34; style=\u0026#34;width: 10%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h3\u0026gt; JavaScript \u0026lt;/h3\u0026gt; \u0026lt;div class=\u0026#34;progressBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;progress\u0026#34; style=\u0026#34;width: 40%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h3\u0026gt; jQuery \u0026lt;/h3\u0026gt; \u0026lt;div class=\u0026#34;progressBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;progress\u0026#34; style=\u0026#34;width: 60%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h3\u0026gt; Vue \u0026lt;/h3\u0026gt; \u0026lt;div class=\u0026#34;progressBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;progress\u0026#34; style=\u0026#34;width: 90%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h3\u0026gt; React \u0026lt;/h3\u0026gt; \u0026lt;div class=\u0026#34;progressBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;progress\u0026#34; style=\u0026#34;width: 20%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt; \u0026lt;h3\u0026gt; HTTP \u0026lt;/h3\u0026gt; \u0026lt;div class=\u0026#34;progressBar\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;progress\u0026#34; style=\u0026#34;width: 40%;\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section class=\u0026#34;portfolio\u0026#34;\u0026gt; \u0026lt;a name=\u0026#34;zuopin\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; \u0026lt;h2\u0026gt;作品集\u0026lt;/h2\u0026gt; \u0026lt;nav\u0026gt; \u0026lt;ol class=\u0026#34;clearfix\u0026#34;\u0026gt; \u0026lt;li id=\u0026#34;portfolio1\u0026#34;\u0026gt;所有\u0026lt;/li\u0026gt; \u0026lt;li id=\u0026#34;portfolio2\u0026#34;\u0026gt;框架\u0026lt;/li\u0026gt; \u0026lt;li id=\u0026#34;portfolio3\u0026#34;\u0026gt;原生 JS \u0026amp;amp; CSS\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;div id=\u0026#34;portfolioBar\u0026#34; class=\u0026#34;bar state-1\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;bar-inner\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;script\u0026gt; portfolio1.onclick = function () { portfolioBar.className = \u0026#39;bar state-1\u0026#39; } portfolio2.onclick = function () { portfolioBar.className = \u0026#39;bar state-2\u0026#39; } portfolio3.onclick = function () { portfolioBar.className = \u0026#39;bar state-3\u0026#39; } \u0026lt;/script\u0026gt; \u0026lt;div class=\u0026#34;works\u0026#34; style=\u0026#34;height: 576px;\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;big\u0026#34; style=\u0026#34;top: 0px; left: 0px;\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./jpg/111.JPG\u0026#34; alt=\u0026#34;作品1\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;small\u0026#34; style=\u0026#34;top: 0px; left: 644px;\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./jpg/222.JPG\u0026#34; alt=\u0026#34;作品2\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;small\u0026#34; style=\u0026#34;top: 298px; left: 644px;\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./jpg/333.JPG\u0026#34; alt=\u0026#34;作品3\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; a.cssbody { background: #EFEFEF; margin: 0; } a { color: inherit; text-decoration: none; } * { margin: 0; padding: 0; } hr { height: 0; border: none; border-top: 1px solid #DEDEDE; } ul, ol { list-style: none; } h1, h2, h3, h4, h5, h6 { font-weight: normal; } .clearfix::after { content: \u0026#39;\u0026#39;; display: block; clear: both; } .topNavBar nav\u0026gt;ul { list-style: none; margin: 0; padding: 0; } .topNavBar { /* padding-top: 20px; padding-bottom: 20px; padding-left: 16px; padding-right: 16px; padding:上 右 下 左 */ padding: 20px 0 20px 0; position: fixed; top: 0; left: 0; width: 100%; } .topNavBar-inner { padding: 0 16px; } .topNavBar nav { padding-top: 7px; padding-bottom: 2.19px; } .topNavBar nav\u0026gt;ul\u0026gt;li { float: left; margin-left: 17px; margin-right: 17px; } .topNavBar nav\u0026gt;ul\u0026gt;li\u0026gt;a { font-size: 12px; color: #B7B7B7; font-weight: bold; border-top: 3px solid transparent; border-bottom: 3px solid transparent; padding-top: 5px; padding-bottom: 5px; display: block; } .topNavBar nav\u0026gt;ul\u0026gt;li\u0026gt;a:hover { border-bottom: 3px solid #e06567; } .topNavBar a { float: left; } .topNavBar nav { float: right; } .topNavBar .logo { font-size: 24px; font-family: \u0026#34;Arial Black\u0026#34;; padding-top: 3px; padding-bottom: 4px; } .topNavBar .logo .rs { margin-right: 4px; color: #E6696A; } .topNavBar .logo .card { color: #9A9DA2; } .banner { height: 515px; background-image: url(./img/rs-cover.jpg); background-position: center center; background-size: cover; } .banner .mask { height: 515px; background-color: rgba(0, 0, 0, 0.8); } .userCard { max-width: 940px; margin-left: auto; margin-right: auto; background-color: #FFFFFF; box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.5); } .userCard .welcome { background: #E6686A; color: white; display: inline-block; /* width: 70px; height: 29px; line-height: 29px; text-align: center; */ padding: 3.5px 16.5px; line-height: 22px; position: relative; margin-bottom: 10px; } .userCard .welcome .triangle { display: block; border: 10px solid transparent; width: 0px; border-left-color: #E6686A; border-top-width: 0px; position: absolute; left: 4px; top: 100%; } .userCard .picture { float: left; } .userCard .text { float: left; margin-left: 65px; width: 470px; } .userCard .text h1 { margin-top: 18px; } .userCard .text hr { margin: 20px 0; } .userCard .pictureAndText { padding: 50px; } .userCard dl dt, .userCard dl dd { float: left; padding: 5px 0; } .userCard dl dt { width: 30%; font-weight: bold; } .userCard dl dd { width: 70%; color: #9da0a7; } .userCard\u0026gt;footer.media { background: #E6686A; text-align: center; } .userCard\u0026gt;footer.media\u0026gt;a { display: inline-block; width: 60px; line-height: 30px; padding: 15px 0; border-radius: 50%; margin: 8px; } .userCard\u0026gt;footer.media\u0026gt;a:hover { background: #CF5D5F; } .icon { width: 30px; height: 30px; overflow: hidden; vertical-align: top; } body\u0026gt;main { margin-top: -340px; } body\u0026gt;main .downloadResume-wrapper { text-align: center; } body\u0026gt;main .downloadResume { font-size: 14px; line-height: 16px; padding: 21px 55px; border: 1px solid #CDCFD1; background: #EFEFEF; display: inline-block; border-radius: 5px; color: #3d4451; font-weight: bold; margin: 32px 0; transition: box-shadow 0.2s; } body\u0026gt;main .downloadResume:hover { box-shadow: 0px 4px 13px 0px rgba(0, 0, 0, 0.2); } .selfIntroduction { max-width: 940px; margin-left: auto; margin-right: auto; text-align: center; font-family: cursive; line-height: 1.8; font-size: 18px; font-weight: 900; } section.skills, section.portfolio { max-width: 940px; margin-left: auto; margin-right: auto; margin-top: 60px; } section.skills\u0026gt;h2, section.portfolio\u0026gt;h2 { text-align: center; color: #3d4451; font-size: 34px; line-height: 1.2; font-weight: 600; } section.skills h3 { font-size: 14px; line-height: 1.1; padding-right: 40px; } section.skills\u0026gt;ol { background: white; box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.5); padding: 42px 50px 0; margin-top: 30px; } section.skills\u0026gt;ol\u0026gt;li { float: left; width: 48%; box-sizing: border-box; } section.skills\u0026gt;ol\u0026gt;li:nth-child(even) { float: right; } section.skills .progressBar { height: 5px; background: #fae1e1; border-radius: 9px; margin: 4px 0 40px; } section.skills .progressBar\u0026gt;.progress { height: 100%; background: #e6686a; width: 70%; border-radius: 9px; } section.portfolio { text-align: center; margin-bottom: 100px; } section.portfolio\u0026gt;nav { text-align: center; } section.portfolio\u0026gt;nav\u0026gt;ol { margin: 0 auto; display: inline-block; vertical-align: top; } section.portfolio\u0026gt;nav\u0026gt;ol\u0026gt;li { float: left; margin-left: 40px; cursor: pointer; } section.portfolio\u0026gt;nav\u0026gt;ol\u0026gt;li:nth-child(1) { margin-left: 0; } section.portfolio\u0026gt;nav { display: inline-block; vertical-align: top; margin-top: 32px; } section.portfolio\u0026gt;nav .bar { height: 5px; background: white; margin-top: 5px; margin-bottom: 28px; border-radius: 9px; } section.portfolio\u0026gt;nav .bar-inner { height: 100%; background: #E6686A; width: 10%; border-radius: 9px; transition: all 0.3s; } section.portfolio\u0026gt;nav .bar.state-1 .bar-inner { margin-left: 0px; width: 33px; } section.portfolio\u0026gt;nav .bar.state-2 .bar-inner { margin-left: 73px; width: 33px; } section.portfolio\u0026gt;nav .bar.state-3 .bar-inner { margin-left: 143px; width: 107px; } section.portfolio .works { position: relative; } section.portfolio .works\u0026gt;.big, section.portfolio .works\u0026gt;.small { position: absolute; } csdn link Front End - Personal Resume Exercise\n","date":"2020-04-23T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/front-end-personal-resume-exercise/","title":"Front End - Personal Resume Exercise"},{"content":"Computer Vision - Experiment 8 - Image segmentation experiment Experimental objectives and requirements Understand the basic principle of image segmentation using meanShfit; master the code writing method of color image segmentation by mean drift algorithm using OpenCV.\nExperiment content (i) Create a new project.\n(ii) Configuring OpenCV in VS2015.\n(iii) Implementing color image segmentation using pyrMeanShiftFiltering function in OpenCV;\n(iv) Use the floodFill function in OpenCV to fill the result of its segmentation with different colors.\nExperimental apparatus, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) meanShfit (mean drift) algorithm is a general clustering algorithm, its basic principle is: for a given number of samples, any one of the samples, the sample as the center point to delineate a circular region, find the center of mass of the samples in the circular region, that is, the point at the maximum density, and then continue to perform the above iterative process with that point as the center until the final convergence.\n(ii) meanShfit can be used not only for image filtering, video tracking, but also for image segmentation. The corresponding function in Opencv is pyrMeanShiftFiltering. pyrMeanShiftFiltering is an image smoothing filter at the color level, which can neutralize colors with similar color distribution, smooth out color details, and erode smaller color areas, thus achieve the segmentation effect.\n(iii) The main process of this experiment is to first set up the parameters and then use the function pyrMeanShiftFiltering function to segment the input image. The result of the segmentation is saved in the second parameter of the function that is the output image, and finally the result of its segmentation is filled with different colors according to the characteristics of this segmented image using the floodFill function.\nExperimental steps (i) Create the Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to implement color image segmentation using pyrMeanShiftFiltering function;\n(iv) Write code to fill the result of its segmentation with different colors using the floodFill function.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of pyrMeanShiftFiltering function;\n(iii) The functions and usage of the floodFill function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 //-------------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/core/core.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; using namespace cv; using namespace std; //---------------------------------【help( )函数】-------------------------------------- //\t描述：输出一些帮助信息 //------------------------------------------------------------------------------------- static void help() { cout \u0026lt;\u0026lt; \u0026#34;\\n\\t此程序演示了OpenCV中MeanShift图像分割的使用。\\n\u0026#34; \u0026lt;\u0026lt; \u0026#34;\\n\\t程序运行后我们可以通过3个滑动条调节分割效果。调节滑动条后可能会有些许卡顿，请耐心等待\\n\u0026#34; \u0026lt;\u0026lt; \u0026#34;\\n\\t3个滑动条代表的参数分别为空间窗的半径 （spatialRad）、色彩窗的半径（colorRad）、最大图像金字塔级别（maxPyrLevel）\\n\u0026#34; \u0026lt;\u0026lt; endl; } //This colors the segmentations static void floodFillPostprocess( Mat\u0026amp; img, const Scalar\u0026amp; colorDiff=Scalar::all(1) ) { CV_Assert( !img.empty() ); RNG rng = theRNG(); Mat mask( img.rows+2, img.cols+2, CV_8UC1, Scalar::all(0) ); for( int y = 0; y \u0026lt; img.rows; y++ ) { for( int x = 0; x \u0026lt; img.cols; x++ ) { if( mask.at\u0026lt;uchar\u0026gt;(y+1, x+1) == 0 ) { Scalar newVal( rng(256), rng(256), rng(256) ); floodFill( img, mask, Point(x,y), newVal, 0, colorDiff, colorDiff ); } } } } string winName = \u0026#34;meanshift\u0026#34;; int spatialRad, colorRad, maxPyrLevel; Mat img, res; static void meanShiftSegmentation( int, void* ) { cout \u0026lt;\u0026lt; \u0026#34;spatialRad=\u0026#34; \u0026lt;\u0026lt; spatialRad \u0026lt;\u0026lt; \u0026#34;; \u0026#34; \u0026lt;\u0026lt; \u0026#34;colorRad=\u0026#34; \u0026lt;\u0026lt; colorRad \u0026lt;\u0026lt; \u0026#34;; \u0026#34; \u0026lt;\u0026lt; \u0026#34;maxPyrLevel=\u0026#34; \u0026lt;\u0026lt; maxPyrLevel \u0026lt;\u0026lt; endl; pyrMeanShiftFiltering( img, res, spatialRad, colorRad, maxPyrLevel ); floodFillPostprocess( res, Scalar::all(2) ); imshow( winName, res ); } //--------------------------【main( )函数】-------------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------ int main(int argc, char** argv) { help(); img = imread( \u0026#34;1.jpg\u0026#34; ); if( img.empty() ) return -1; imshow(\u0026#34;原始图\u0026#34;,img); spatialRad = 10; colorRad = 10; maxPyrLevel = 1; namedWindow( winName, WINDOW_AUTOSIZE ); createTrackbar( \u0026#34;spatialRad\u0026#34;, winName, \u0026amp;spatialRad, 80, meanShiftSegmentation ); createTrackbar( \u0026#34;colorRad\u0026#34;, winName, \u0026amp;colorRad, 60, meanShiftSegmentation ); createTrackbar( \u0026#34;maxPyrLevel\u0026#34;, winName, \u0026amp;maxPyrLevel, 5, meanShiftSegmentation ); meanShiftSegmentation(0, 0); waitKey(); return 0; } (ii) Show results\nExperiment Summary The main content of this experiment is to understand the basic principle of image segmentation using meanShfit; to master the code writing method of color image segmentation by meanShift algorithm using OpenCV. Create a new project, configure OpenCV in VS2015, use pyrMeanShiftFiltering function in OpenCV to achieve color image segmentation; use the floodFill function in OpenCV to fill the result of its segmentation with different colors. Learn to implement color image segmentation using pyrMeanShiftFiltering function; floodFill function to fill the result of its segmentation with different colors.\n","date":"2020-04-20T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-8-image-segmentation-experiment/","title":"Computer Vision - Experiment 8 - Image segmentation experiment"},{"content":"Computer Vision - Experiment 7 - Find and draw outline experiments Experimental objectives and requirements Understand the basic principle of finding image contours; master the code writing method of finding contours using OpenCV; master the code writing method of drawing contours using OpenCV.\nExperiment content (i) New project.\n(ii) Configuring OpenCV in VS2015.\n(iii) Using the findContours function in OpenCV to implement find contours;\n(iv) Use the drawContours function in OpenCV to implement draw contours.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) Although an edge detection algorithm like Canny can detect pixels at the boundary of the contours based on the difference between pixels, it does not take the contours as a whole. So, this experiment is to assemble these edge pixels into a contour.\n(ii) A contour generally corresponds to a series of points, which is a curve in the image. Its representation may vary depending on the situation. In OpenCV, the findContours function can be used to find contours from a binary image. drawContours function is used to draw external or internal contours in the image .\nExperimental steps (i) Create a Visual Studio 2015 console application;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to implement findContours using the findContours function to implement find contours;\n(iv) Write code to implement drawContours using the drawContours function.\nExperimental notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of the findContours function;\n(iii) The functions and usage of the drawContours function.\nExperimental results (i) experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 //----------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; #include \u0026lt;iostream\u0026gt; using namespace cv; using namespace std; //----------------------------【宏定义部分】-------------------------------------------- //\t描述：定义一些辅助宏 //------------------------------------------------------------------------------------- #define WINDOW_NAME1 \u0026#34;【原始图窗口】\u0026#34;\t//为窗口标题定义的宏 #define WINDOW_NAME2 \u0026#34;【轮廓图】\u0026#34;\t//为窗口标题定义的宏 //----------------------------【全局变量声明部分】-------------------------------------- //\t描述：全局变量的声明 //------------------------------------------------------------------------------------- Mat g_srcImage; Mat g_grayImage; int g_nThresh = 80; int g_nThresh_max = 255; RNG g_rng(12345); Mat g_cannyMat_output; vector\u0026lt;vector\u0026lt;Point\u0026gt;\u0026gt; g_vContours; vector\u0026lt;Vec4i\u0026gt; g_vHierarchy; //----------------------------【全局函数声明部分】-------------------------------------- //\t描述：全局函数的声明 //------------------------------------------------------------------------------------- static void ShowHelpText( ); void on_ThreshChange(int, void* ); //---------------------------【main( )函数】-------------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始执行 //------------------------------------------------------------------------------------- int main( int argc, char** argv ) { //【0】改变console字体颜色 system(\u0026#34;color 1F\u0026#34;); //【0】显示欢迎和帮助文字 ShowHelpText( ); // 加载源图像 g_srcImage = imread( \u0026#34;1.jpg\u0026#34;, 1 ); if(!g_srcImage.data ) { printf(\u0026#34;读取图片错误，请确定目录下是否有imread函数指定的图片存在~！ \\n\u0026#34;); return false; } // 转成灰度并模糊化降噪 cvtColor( g_srcImage, g_grayImage, COLOR_BGR2GRAY ); blur( g_grayImage, g_grayImage, Size(3,3) ); // 创建窗口 namedWindow( WINDOW_NAME1, WINDOW_AUTOSIZE ); imshow( WINDOW_NAME1, g_srcImage ); //创建滚动条并初始化 createTrackbar( \u0026#34;canny阈值\u0026#34;, WINDOW_NAME1, \u0026amp;g_nThresh, g_nThresh_max, on_ThreshChange ); on_ThreshChange( 0, 0 ); waitKey(0); return(0); } //-----------------------------【on_ThreshChange( )函数】------------------------------ // 描述：回调函数 //------------------------------------------------------------------------------------- void on_ThreshChange(int, void* ) { // 用Canny算子检测边缘 Canny( g_grayImage, g_cannyMat_output, g_nThresh, g_nThresh*2, 3 ); imshow(\u0026#34;canny\u0026#34;, g_cannyMat_output); // 寻找轮廓 //void findContours(InputOutputArray image, OutputArrayOfArrays contours, //\tOutputArray hierarchy, int mode, //\tint method, Point offset = Point()); findContours( g_cannyMat_output, g_vContours, g_vHierarchy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point(0, 0) ); // 绘出轮廓 Mat drawing = Mat::zeros( g_cannyMat_output.size(), CV_8UC3 ); for( int i = 0; i\u0026lt; g_vContours.size(); i++ ) { Scalar color = Scalar( g_rng.uniform(0, 255), g_rng.uniform(0,255), g_rng.uniform(0,255) );//任意值 drawContours( drawing, g_vContours, i, color, 2, 8, g_vHierarchy, 0, Point() ); } // 显示效果图 imshow( WINDOW_NAME2, drawing ); } //----------------------------【ShowHelpText( )函数】---------------------------------- // 描述：输出一些帮助信息 //------------------------------------------------------------------------------------- static void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第70个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); //输出一些帮助信息 printf( \u0026#34;\\n\\n\\t欢迎来到【在图形中寻找轮廓】示例程序~\\n\\n\u0026#34;); printf( \u0026#34;\\n\\n\\t按键操作说明: \\n\\n\u0026#34; \u0026#34;\\t\\t键盘按键任意键- 退出程序\\n\\n\u0026#34; \u0026#34;\\t\\t滑动滚动条-改变阈值\\n\u0026#34; ); } (ii) Show results\nExperiment Summary The main content of this experiment is to understand the basic principle of finding image contours; to master the code writing method of using OpenCV to implement find contours; to master the code writing method of using OpenCV to implement draw contours. Create a new project, configure OpenCV in VS2015, and use the findContours function in OpenCV to find contours; use the drawContours function in OpenCV to draw contours. Learn how to find contours from binary images with the findContours function. drawContours function is used to draw external or internal contours in an image.\n","date":"2020-04-15T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-7-find-and-draw-outline-experiments/","title":"Computer Vision - Experiment 7 - Find and draw outline experiments"},{"content":"Q 1616: [Algorithm Improvement VIP]Inverted number Time limit: 1Sec Memory Limit: 128MB\nTitle Description The \u0026ldquo;inverse\u0026rdquo; of an integer is another integer obtained by reversing the order of each digit of that integer. If an integer ends in zeros, then those zeros are omitted from its inverse. For example, the inverse of 1245 is 5421 and the inverse of 1200 is 21. Write a program that enters two integers, calculates the sum of the inverse of these two integers, and then prints the inverse of sum. Requirement: Since you need to calculate the inverse of an integer more than once in this problem, you must abstract this part of the code to a function.\nInput The input has only one line, including two integers, separated by a space.\nOutput The output has only one line, the corresponding result.\nSample Input 1 435 754 Sample Output 1 199 C Code Solution A Convert an integer to a string first, then invert it, then convert it to an integer.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;string.h\u0026gt; int fun(int n) { char s[20],t; int len,m; sprintf(s,\u0026#34;%d\u0026#34;,n); len=strlen(s); for(int i=0;i\u0026lt;len/2;i++) { t=s[i];s[i]=s[len-1-i];s[len-1-i]=t; } sscanf(s,\u0026#34;%d\u0026#34;,\u0026amp;m); return m; } int main() { int x,y,sum; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;x,\u0026amp;y); sum=fun(x)+fun(y); printf(\u0026#34;%d\\n\u0026#34;,fun(sum)); return 0; } Solution B Is to first delete the zeros after the integer and then invert it to form a new integer.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include \u0026lt;stdio.h\u0026gt; int fun(int n) { int m=0; while(n%10==0) n=n/10; while(n!=0) { m=m*10+n%10; n=n/10; } return m; } int main() { int x,y,sum; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;x,\u0026amp;y); sum=fun(x)+fun(y); printf(\u0026#34;%d\\n\u0026#34;,fun(sum)); return 0; } All through C语言网 compile and run. ","date":"2020-04-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1616-algorithm-improvement-vipinverted-number-c-language/","title":"Q 1616 [Algorithm Improvement VIP]Inverted number (C Language)"},{"content":"Q 1815: [2014 5th exam questions]Ranking order Time limit: 1Sec Memory Limit: 128MB\nTitle Description If a string is formed with the 4 letters a b c d, there are 4!=24 kinds, and if they are put in order, each string corresponds to a serial number:: abcd 0 abdc 1 acbd 2 acdb 3 adbc 4 adcb 5 bacd 6 badc 7 bcad 8 bcda 9 bdac 10 bdca 11 cabd 12 cadb 13 cbad 14 cbda 15 cdab 16 cdba 17 \u0026hellip; Now there are no more than 10 two different lowercase letters and given the string they form, can you find the serial number of the string in all the arrangements?\nInput One row, one string.\nOutput A line, an integer, indicating the serial number of the string among all the strings generated by all permutations of its letters. Note: the smallest ordinal number is 0.\nSample Input 1 bdca Sample Output 1 11 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; char s[11],p[11],d[11],c; //p is used to store the s-array (invariant) d is used to record the s-array (variable) int cd,num=0,b[11]; //b is used to mark; cd records the length of the array; num counts void dfs(int x) { int i,j; if(x==cd) //If the length of x is the same as the length of cd num++ { num++; if(strcmp(p,d)==0) //If the current array is the same as the s array, output (num-1) because abcd is 1 { printf(\u0026#34;%d\u0026#34;,num-1); } return ; } for(i=0;i\u0026lt;cd;i++) { if(!b[i]) { d[x]=s[i]; //Record b[i]=1; //Marker dfs(x+1); //dfs b[i]=0; //Retrospective } } } int main() { int i,j,n=0; scanf(\u0026#34;%s\u0026#34;,s); //Input strcpy(p,s); //Copy to p-array cd=strlen(s); //Record length for(i=0;i\u0026lt;strlen(s)-1;i++) //bubble sort { for(j=0;j\u0026lt;strlen(s)-1-i;j++) { if(s[j]\u0026gt;s[j+1]) { c=s[j]; s[j]=s[j+1]; s[j+1]=c; } } } memset(b,0,sizeof(b)); //Set b to zero Set the beginning to zero as well dfs(0); //dfs return 0; } All through C语言网 compile and run. ","date":"2020-04-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1815-2014-5th-exam-questionsranking-order-c-language/","title":"Q 1815 [2014 5th exam questions]Ranking order (C Language)"},{"content":"Computer Vision - Experiment 6 - Haff transform experiment Experimental objectives and requirements Understand the basic principle of Haff transform; master the code writing method to implement Haff transform using OpenCV.\nExperiment content (i) Create a new project.\n(ii) Configuring OpenCV in VS2015.\n(iii) Implement the Haff transform to detect line segments using the functions in OpenCV.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) In the field of image processing and computer vision, how to extract the required feature information from the current image is the key to image recognition. In many applications fieldsh need to detect straight lines or circles quickly and accurately, one of the very effective ways to solve the problem is the Haff transform.\n(ii) Haff line transform is a method used to find straight lines. Before using Haff line transform, the image is first processed for edge detection, i.e., the direct input of Haff line transform can only be edge binary image.\n(iii) In OpenCV, the HoughLines function can be used to call the standard Haff transform and the multiscale Haff transform. And the HoughLinesP function is used to invoke the cumulative probability Hough transform. The cumulative probability Hough transform is executed very efficiently, and we prefer to use the HoughLinesP function compared to the HoughLines function.\nExperimental steps (i) Create the Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to implement the Haff line transform to detect line segments using the HoughLines or HoughLinesP function.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of HoughLines or HoughLinesP functions.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 //--------------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026lt;opencv2/opencv.hpp\u0026gt; #include \u0026lt;opencv2/highgui/highgui.hpp\u0026gt; #include \u0026lt;opencv2/imgproc/imgproc.hpp\u0026gt; using namespace std; using namespace cv; //--------------------------------【全局变量声明部分】----------------------------------- //\t描述：全局变量声明 //------------------------------------------------------------------------------------- Mat g_srcImage, g_dstImage,g_midImage;//原始图、中间图和效果图 vector\u0026lt;Vec4i\u0026gt; g_lines;//定义一个矢量结构g_lines用于存放得到的线段矢量集合 //变量接收的TrackBar位置参数 int g_nthreshold=100; //--------------------------------【全局函数声明部分】----------------------------------- //\t描述：全局函数声明 //------------------------------------------------------------------------------------- static void on_HoughLines(int, void*);//回调函数 static void ShowHelpText(); //-------------------------------【main( )函数】----------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------- int main( ) { //改变console字体颜色 system(\u0026#34;color 4F\u0026#34;); ShowHelpText(); //载入原始图和Mat变量定义 Mat g_srcImage = imread(\u0026#34;1.jpg\u0026#34;); //工程目录下应该有一张名为1.jpg的素材图 //显示原始图 imshow(\u0026#34;【原始图】\u0026#34;, g_srcImage); //创建滚动条 namedWindow(\u0026#34;【效果图】\u0026#34;,1); createTrackbar(\u0026#34;值\u0026#34;, \u0026#34;【效果图】\u0026#34;,\u0026amp;g_nthreshold,200,on_HoughLines); //进行边缘检测和转化为灰度图 Canny(g_srcImage, g_midImage, 50, 200, 3);//进行一次canny边缘检测 imshow(\u0026#34;canny\u0026#34;, g_midImage); cvtColor(g_midImage,g_dstImage, COLOR_GRAY2BGR);//转化边缘检测后的图为灰度图 //调用一次回调函数，调用一次HoughLinesP函数 on_HoughLines(g_nthreshold,0); HoughLinesP(g_midImage, g_lines, 1, CV_PI/180, 80, 50, 10 ); //显示效果图 imshow(\u0026#34;【效果图】\u0026#34;, g_dstImage); waitKey(0); return 0; } //---------------------------------【on_HoughLines( )函数】------------------------------ //\t描述：【顶帽运算/黑帽运算】窗口的回调函数 //------------------------------------------------------------------------------------- static void on_HoughLines(int, void*) { //定义局部变量储存全局变量 Mat dstImage=g_dstImage.clone(); Mat midImage=g_midImage.clone(); //调用HoughLinesP函数 //CV_EXPORTS_W void HoughLinesP(InputArray image, OutputArray lines, //\tdouble rho, double theta, int threshold, //\tdouble minLineLength = 0, double maxLineGap = 0); //image： 必须是二值图像，推荐使用canny边缘检测的结果图像； //rho: 线段以像素为单位的距离精度，double类型的，推荐用1.0 //theta： 线段以弧度为单位的角度精度，推荐用numpy.pi / 180 //threshod : 累加平面的阈值参数，int类型，超过设定阈值才被检测出线段，值越大，基本上意味着检出的线段越长，检出的线段个数越少。根据情况推荐先用100试试 //lines：这个参数的意义未知，发现不同的lines对结果没影响，但是不要忽略了它的存在 //minLineLength：线段以像素为单位的最小长度，根据应用场景设置 //maxLineGap：同一方向上两条线段判定为一条线段的最大允许间隔（断裂），超过了设定值，则把两条线段当成一条线段，值越大，允许线段上的断裂越大，越有可能检出潜在的直线段 vector\u0026lt;Vec4i\u0026gt; mylines; HoughLinesP(midImage, mylines, 1, CV_PI/180, g_nthreshold+1, 50, 10 ); //循环遍历绘制每一条线段 for( size_t i = 0; i \u0026lt; mylines.size(); i++ ) { Vec4i l = mylines[i]; line( dstImage, Point(l[0], l[1]), Point(l[2], l[3]), Scalar(23,180,55), 1, LINE_AA); } //显示图像 imshow(\u0026#34;【效果图】\u0026#34;,dstImage); } //--------------------------------【ShowHelpText( )函数】-------------------------------- //\t描述：输出一些帮助信息 //------------------------------------------------------------------------------------- static void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第64个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); //输出一些帮助信息 printf(\u0026#34;\\n\\n\\n\\t请调整滚动条观察图像效果~\\n\\n\u0026#34;); } (ii) Show results\nExperiment Summary The main content of this experiment is to understand the basic principle of Haff transform; master the code writing method to implement Haff transform using OpenCV. Create a new project, configure OpenCV in VS2015, and use the functions in OpenCV to implement the Haff transform to detect line segments. Use the HoughLines function to call the standard Haff transform and the multi-scale Haff transform, and the HoughLinesP function to call the cumulative probability Haff transform. By writing code, I learned to use the HoughLines function to call the standard Haff transform and the multiscale Haff transform, and the HoughLinesP function to call the cumulative probability Hough transform.\n","date":"2020-04-01T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-6-haff-transform-experiment/","title":"Computer Vision - Experiment 6 - Haff transform experiment"},{"content":"Computer Vision - Experiment 5 - Edge detection experiment Experimental objectives and requirements (i) To master the principle and programming implementation method of canny edge detection of images through experiments;\n(ii) To master the principle and programming implementation method of sobel edge detection of images through experiments;\n(iii) To master the principle and programming implementation method of scharr filter of image through experiments.\nExperiment content (i) Implement edge detection using the Canny function in OpenCV.\n(ii) Implementing edge detection using the Sobel function in OpenCV.\n(iii) Edge detection using the Scharr function in OpenCV.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) The three main evaluation criteria for optimal edge detection. Low error rate: identify as many actual edges as possible while minimizing false positives from noise; high locality: the identified edges should be as close as possible to the actual edges in the image; minimum response: the edges in the image should be identified only once and possible image noise should not be identified as edges.\n(ii) Canny edge detection operator is a multi-level edge detection algorithm developed by John F. Canny in 1986. the Canny algorithm is respected as the optimal algorithm for edge detection today.\n(iii) Sobel operator is a discrete differential operator mainly used for edge detection. It combines Gaussian smoothing and emblematic derivatives to compute the approximate gradient of the image grayscale function. scharr generally calls it a filter, not an operator, and it exists in OpenCV mainly in conjunction with the operation of the Sobel operator.\nExperimental steps (i) Create the Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to implement edge detection using the Canny function;\n(iv) Write code to implement edge detection using the Sobel function;\n(v) Write code to implement edge detection using the Scharr function.\nExperimental Notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of Canny function, Sobel function and Scharr function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 //--------------------------------【头文件、命名空间包含部分】---------------------------- //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026lt;opencv2/highgui/highgui.hpp\u0026gt; #include \u0026lt;opencv2/imgproc/imgproc.hpp\u0026gt; using namespace cv; //--------------------------------【全局变量声明部分】----------------------------------- //\t描述：全局变量声明 //------------------------------------------------------------------------------------- //原图，原图的灰度版，目标图 Mat g_srcImage, g_srcGrayImage,g_dstImage; //Canny边缘检测相关变量 Mat g_cannyDetectedEdges; int g_cannyLowThreshold=1;//TrackBar位置参数 //Sobel边缘检测相关变量 Mat g_sobelGradient_X, g_sobelGradient_Y; Mat g_sobelAbsGradient_X, g_sobelAbsGradient_Y; int g_sobelKernelSize=1;//TrackBar位置参数 //Scharr滤波器相关变量 Mat g_scharrGradient_X, g_scharrGradient_Y; Mat g_scharrAbsGradient_X, g_scharrAbsGradient_Y; //--------------------------------【全局函数声明部分】----------------------------------- //\t描述：全局函数声明 //------------------------------------------------------------------------------------- static void ShowHelpText( ); static void on_Canny(int, void*);//Canny边缘检测窗口滚动条的回调函数 static void on_Sobel(int, void*);//Sobel边缘检测窗口滚动条的回调函数 void Scharr( );//封装了Scharr边缘检测相关代码的函数 //-------------------------------【main( )函数】----------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------- int main( int argc, char** argv ) { //改变console字体颜色 system(\u0026#34;color 2F\u0026#34;); //显示欢迎语 ShowHelpText(); //载入原图 g_srcImage = imread(\u0026#34;1.jpg\u0026#34;); if( !g_srcImage.data ) { printf(\u0026#34;Oh，no，读取srcImage错误~！ \\n\u0026#34;); return false; } //显示原始图 namedWindow(\u0026#34;【原始图】\u0026#34;); imshow(\u0026#34;【原始图】\u0026#34;, g_srcImage); // 创建与src同类型和大小的矩阵(dst) g_dstImage.create( g_srcImage.size(), g_srcImage.type() ); // 将原图像转换为灰度图像 cvtColor( g_srcImage, g_srcGrayImage, COLOR_BGR2GRAY ); // 创建显示窗口 namedWindow( \u0026#34;【效果图】Canny边缘检测\u0026#34;, WINDOW_AUTOSIZE ); namedWindow( \u0026#34;【效果图】Sobel边缘检测\u0026#34;, WINDOW_AUTOSIZE ); // 创建trackbar createTrackbar( \u0026#34;参数值：\u0026#34;, \u0026#34;【效果图】Canny边缘检测\u0026#34;, \u0026amp;g_cannyLowThreshold, 120, on_Canny ); createTrackbar( \u0026#34;参数值：\u0026#34;, \u0026#34;【效果图】Sobel边缘检测\u0026#34;, \u0026amp;g_sobelKernelSize, 3, on_Sobel ); // 调用回调函数 on_Canny(0, 0); on_Sobel(0, 0); //调用封装了Scharr边缘检测代码的函数 Scharr( ); //轮询获取按键信息，若按下Q，程序退出 while((char(waitKey(1)) != \u0026#39;q\u0026#39;)) {} return 0; } //--------------------------------【ShowHelpText( )函数】-------------------------------- //\t描述：输出一些帮助信息 //------------------------------------------------------------------------------------- static void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第60个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); //输出一些帮助信息 printf( \u0026#34;\\n\\n\\t运行成功，请调整滚动条观察图像效果~\\n\\n\u0026#34; \u0026#34;\\t按下“q”键时，程序退出。\\n\u0026#34;); } //----------------------------------【on_Canny( )函数】---------------------------------- //\t描述：Canny边缘检测窗口滚动条的回调函数 //------------------------------------------------------------------------------------- void on_Canny(int, void*) { // 先使用 3x3内核来降噪 blur( g_srcGrayImage, g_cannyDetectedEdges, Size(3,3) ); // 运行我们的Canny算子 //void cvCanny( //\tconst CvArr* image, //第一个参数表示输入图像，必须为单通道灰度图 //\tCvArr* edges, //第二个参数表示输出的边缘图像，为单通道黑白图 //\tdouble threshold1, //\tdouble threshold2, //第三个参数和第四个参数表示阈值，这二个阈值中当中的小阈值用来控制边缘连接， //\t大的阈值用来控制强边缘的初始分割即如果一个像素的梯度大与上限值，则被认为 //\t是边缘像素，如果小于下限阈值，则被抛弃。如果该点的梯度在两者之间则当这个 //\t点与高于上限值的像素点连接时我们才保留，否则删除。 //\tint aperture_size = 3 //第五个参数表示Sobel 算子大小，默认为3即表示一个3*3的矩阵。Sobel 算子与 //\t高斯拉普拉斯算子都是常用的边缘算子 //\t); Canny( g_cannyDetectedEdges, g_cannyDetectedEdges, g_cannyLowThreshold, g_cannyLowThreshold*3, 3 ); //先将g_dstImage内的所有元素设置为0 g_dstImage = Scalar::all(0); //使用Canny算子输出的边缘图g_cannyDetectedEdges作为掩码，来将原图g_srcImage拷到目标图g_dstImage中 g_srcImage.copyTo( g_dstImage, g_cannyDetectedEdges); //显示效果图 imshow( \u0026#34;【效果图】Canny边缘检测\u0026#34;, g_dstImage ); imshow( \u0026#34;g_cannyDetectedEdges\u0026#34;, g_cannyDetectedEdges); } //----------------------------------【on_Sobel( )函数】---------------------------------- //\t描述：Sobel边缘检测窗口滚动条的回调函数 //------------------------------------------------------------------------------------- void on_Sobel(int, void*) { // 求 X方向梯度 //void Sobel(InputArray src, OutputArray dst, int ddepth, //\tint dx, int dy, int ksize = 3, //第四个参数，int类型dx，x 方向上的差分阶数。 //第五个参数，int类型dy，y方向上的差分阶数。 Sobel( g_srcImage, g_sobelGradient_X, CV_16S, 1, 0, (2*g_sobelKernelSize+1)); convertScaleAbs( g_sobelGradient_X, g_sobelAbsGradient_X );//计算绝对值，并将结果转换成8位 //显示效果图 imshow(\u0026#34;【效果图】Sobel边缘检测x\u0026#34;, g_sobelAbsGradient_X); // 求Y方向梯度 Sobel( g_srcImage, g_sobelGradient_Y, CV_16S, 0, 1, (2*g_sobelKernelSize+1)); convertScaleAbs( g_sobelGradient_Y, g_sobelAbsGradient_Y );//计算绝对值，并将结果转换成8位 imshow(\u0026#34;【效果图】Sobel边缘检测y\u0026#34;, g_sobelAbsGradient_Y); // 合并梯度 //void addWeighted(InputArray src1, double alpha, InputArray src2, //\tdouble beta, double gamma, OutputArray dst, int dtype = -1); //dst = src1*alpha + src2*beta + gamma; addWeighted( g_sobelAbsGradient_X, 0.5, g_sobelAbsGradient_Y, 0.5, 0, g_dstImage ); //显示效果图 imshow(\u0026#34;【效果图】Sobel边缘检测\u0026#34;, g_dstImage); } //-----------------------------------【Scharr( )函数】---------------------------------- //\t描述：封装了Scharr边缘检测相关代码的函数 //------------------------------------------------------------------------------------- void Scharr( ) { // 求 X方向梯度 Scharr( g_srcImage, g_scharrGradient_X, CV_16S, 1, 0); //void convertScaleAbs(InputArray src, OutputArray dst, //\tdouble alpha = 1, double beta = 0); //先缩放元素再取绝对值，最后转换格式为8bit型 convertScaleAbs( g_scharrGradient_X, g_scharrAbsGradient_X );//计算绝对值，并将结果转换成8位 //显示效果图 imshow(\u0026#34;【效果图】Scharr滤波器x\u0026#34;, g_scharrAbsGradient_X); // 求Y方向梯度 Scharr( g_srcImage, g_scharrGradient_Y, CV_16S, 0, 1); convertScaleAbs( g_scharrGradient_Y, g_scharrAbsGradient_Y );//计算绝对值，并将结果转换成8位 imshow(\u0026#34;【效果图】Scharr滤波器y\u0026#34;, g_scharrAbsGradient_Y); // 合并梯度 addWeighted( g_scharrAbsGradient_X, 0.5, g_scharrAbsGradient_Y, 0.5, 0, g_dstImage ); //显示效果图 imshow(\u0026#34;【效果图】Scharr滤波器\u0026#34;, g_dstImage); } (ii) Show results\nExperiment summary The main content of this experiment is to master the principle and programming implementation method of canny edge detection of image, master the principle and programming implementation method of sobel edge detection of image, master the principle and programming implementation method of scharr filter of image. Implement edge detection using the Canny function in OpenCV, edge detection using the Sobel function in OpenCV, and edge detection using the Scharr function in OpenCV. By writing code, I learned to implement edge detection using the Canny function, Sobel function, and Scharr function.\n","date":"2020-03-30T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-5-edge-detection-experiment/","title":"Computer Vision - Experiment 5 - Edge detection experiment"},{"content":"Q 1427: [2014 5th exam questions] Dividing candy Time limit: 1Sec Memory Limit: 128MB\nTitle Description There are n children sitting in a circle. The teacher gives each child an even number of candies at random and then plays the following game:\nEach child gives half of his or her candy to the child on his or her left hand side.\nAfter one round of candy distribution, the child with the odd number of candies is given one additional candy by the teacher, thus making the number even.\nRepeat this game until all the children have the same number of candies.\nYour task is to predict the total number of candies that the teacher will need to give out given the known initial candy situation.\nInput The program first reads in an integer N (2\u0026lt; N\u0026lt; 100), which represents the number of children. Then comes a line of N even numbers separated by spaces (each even number is not greater than 1000 and not less than 2)\nOutput The program is asked to output an integer that represents the number of candies the teacher needs to make up.\nSample Input 1 2 3 2 2 4 Sample Output 1 4 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include\u0026lt;stdio.h\u0026gt; int main() { int a,i,j,k,sum=0; scanf(\u0026#34;%d\u0026#34;, \u0026amp;a);//Enter a few children int student[a]; for(i=0;i\u0026lt;a;i++){ scanf(\u0026#34;%d\u0026#34;,\u0026amp;student[i]);//The candy in each child\u0026#39;s hand } while(1){ j=1;//The other flag bit is 1, 0 means the condition is not met, need to be divided into candy for(i=0;i\u0026lt;a-1;i++){ if(student[i]!=student[i+1]){ j=0;//Once a bit is not the same, mark position 0 and jump out of the loop break; } } if(j==0){//If the conditions are not met, start dividing the candy int c=student[0]/2;//The first one will record the number of sweets and leave it to the last student, because they are sitting around together, so it is a cycle. for(i=0;i\u0026lt;a;i++){ student[i]=student[i]/2;//The number of sweets for each student is halved if(i\u0026gt;=1){ student[i-1]+=student[i];//After adding the candy given by the next student from the 0 position, there is no one left to give candy to the last student, so the candy of one of our students can be given to him. } } student[a-1]+=c;//The last classmate\u0026#39;s candy to him for(i=0;i\u0026lt;a;i++){//After dividing the candy if there is an odd number of candy in the hands of students, the teacher will give him one, +1, and let sum+1 record the number of candy given by the teacher, and finally output if(student[i]%2!=0){ sum++;//Records student[i]++;//The teacher gave a candy, so +1. } } } else{ printf(\u0026#34;%d\u0026#34;,sum);//If the condition is met, j will not be set to 0. After entering this output, brake will jump out of the while loop, and the whole function will be finished. break; } } return 0; } All through C语言网 compile and run. ","date":"2020-03-28T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1427-2014-5th-exam-questions-dividing-candy-c-language/","title":"Q 1427 [2014 5th exam questions] Dividing candy (C Language)"},{"content":"Q 1609: [Algorithm Improvement VIP]Black Friday Time limit: 1Sec Memory Limit: 128MB\nTitle Description Some Westerners are superstitious, and if the 13th of a month falls on a Friday, they feel that it is not auspicious, or in ancient times, \u0026ldquo;bad for everything\u0026rdquo;. Write a program to find out how many times in a given year the 13th falls on a Friday, to help your superstitious friend solve his problem. Note: (1) There are 365 days in a year, and 366 days in a leap year. A leap year is a year that is divisible by 4 and not by 100, or a year that is divisible by both 100 and 400; (2) January 1, 1998 is known to be a Thursday, and the year entered by the user must be greater than or equal to 1998.\nInput The input has only one line, i.e. a specific year (greater than or equal to 1998).\nOutput The output has only one line, i.e. how many times in the year it occurred that it was both the 13th and a Friday.\nSample Input 1 1998 Sample Output 1 3 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 #include\u0026lt;stdio.h\u0026gt; int day[14]; int month[2][20]={{31,28,31,30,31,30,31,31,30,31,30,31},{31,29,31,30,31,30,31,31,30,31,30,31}}; int leap(int year) { if ((year % 4 == 0 \u0026amp;\u0026amp; year % 100 != 0) || year % 400 == 0) { //It\u0026#39;s a leap year return 1; }else{ //Not a leap year return 0; } } void f(int n) { int i,j; long sum=0; int count = 0; for(i=1998;i\u0026lt;n;i++) { if(leap(i)) { sum += 366; }else{ sum += 365; } } //Count how many days from January 1, 1998 to the 13th of each month if(leap(n)) { for(i=1;i\u0026lt;13;i++) { day[i]=12+sum; for(j=0;j\u0026lt;i-1;j++) { day[i] +=month[1][j]; } } }else{ for(i=1;i\u0026lt;13;i++) { day[i]=12+sum; for(j=0;j\u0026lt;i-1;j++) { day[i] += month[0][j]; } } } //Count the number of occurrences of week 5 for(i=1;i\u0026lt;=12;i++) { if((day[i]-3)%7==5) { count ++; } } printf(\u0026#34;%d\\n\u0026#34;,count); } int main() { int year; scanf(\u0026#34;%d\u0026#34;,\u0026amp;year); f(year); return 0; } All through C语言网 compile and run. ","date":"2020-03-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1609-algorithm-improvement-vipblack-friday-c-language/","title":"Q 1609 [Algorithm Improvement VIP]Black Friday (C Language)"},{"content":"题目 Q 1616: [Algorithm Improvement VIP]Passing Game Time limit: 1Sec Memory Limit: 128MB\nTitle Description During physical education class, Barbara\u0026rsquo;s teacher often takes the students to play games together. This time, the teacher took the students together to do the passing game. The rules of the game are as follows: n students stand in a circle, one of the students holding a ball in his hand, when the teacher blows the whistle to start passing the ball, each student can pass the ball to one of his left and right two students (left and right arbitrarily), when the teacher blows the whistle again, the passing stops, at this time, the one holding the ball did not pass out is the loser, to give a show. The clever Barbara asked an interesting question: how many different passing methods can make the ball start passing from Barbara\u0026rsquo;s hand and return to Barbara\u0026rsquo;s hand after passing m times. The two methods of passing the ball are treated as different methods when and only when the sequence of students who receive the ball in the order in which they receive it is different in both methods. For example, if there are 3 students #1, #2, and #3, and assuming Barbara is #1, there are 2 ways to return the ball to Barbara after 3 passes: 1-\u0026gt; 2-\u0026gt; 3-\u0026gt; 1 and 1-\u0026gt; 3-\u0026gt; 2-\u0026gt; 1.\nInput A total of one line with two integers n, m separated by spaces (3\u0026lt; =n\u0026lt; =30, 1\u0026lt; =m\u0026lt; =30).\nData size and conventions 100% of the data satisfy: 3\u0026lt; =n\u0026lt; =30, 1\u0026lt; =m\u0026lt; =30\nOutput t has a total of one line with an integer that indicates the number of methods that match the question.\nSample Input 1 3 3 Sample Output 1 2 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #include \u0026lt;stdio.h\u0026gt; int n; int main(){ int at(int); int m,i,j,f[31][31] = {0}; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;n,\u0026amp;m); f[1][2] = f[1][n] = 1; //The 1st pass, #1 may only pass to #2 or #n for(i = 2;i \u0026lt;= m;i++) //From the 2nd to the mth pass for(j = 1;j \u0026lt;= n;j++) //The possibility of each pass to #1 to #n depends on the possibility of the last ball pass to the adjacent position f[i][j] = f[i - 1][at(j - 1)] + f[i - 1][at(j + 1)]; printf(\u0026#34;%d\u0026#34;,f[m][1]); //There are several possible ways to pass to #1 for the mth pass return 0; } int at(int x){ //Standing in a circle to pass the ball if(x\u0026lt;1) return x + n; //When the number is reduced to 0, pass to number n if(x\u0026gt;n) return x - n; //When the number increases to n+1, pass to number 1 return x; } All through C语言网 compile and run. ","date":"2020-03-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1616-algorithm-improvement-vippassing-game-c-language/","title":"Q 1616 [Algorithm Improvement VIP]Passing Game (C Language)"},{"content":"Q 1629: [Algorithm Training VIP]Water connection problems Time limit: 1Sec Memory Limit: 128MB\nTitle Description The school has a water room with a total of m faucets for students to turn on the water, each with an equal volume of water per second of 1.\nNow there are n students ready to receive water, and their initial order of receiving water has been determined. The students are numbered from 1 to n in the order in which they receive water, and the amount of water received by student i is wi. At the beginning of the connection, students 1 to m each occupy a faucet and turn on the faucet at the same time to receive water. When one of the students, j, completes the required amount of water, the next student in line, k, immediately takes the place of j and starts to receive water. This changeover process is instantaneous and no water is wasted. That is, when student j finishes receiving water at the end of the xth second, student k immediately starts receiving water at the xth+1st second. If the current number of water connections n\u0026rsquo; is less than m, then only n\u0026rsquo; taps are supplied and the other m-n\u0026rsquo; taps are closed.\nNow, given the amount of water received by n students, ask how many seconds it takes for all students to finish receiving water according to the above rules.\nInput Row 1 has two integers n and m, separated by a space, indicating the number of persons receiving water and the number of faucets, respectively. Row 2 has n integers w1, w2, \u0026hellip;\u0026hellip;, wn, separated by a space between each integer, and wi represents the amount of water received by student i. 1 ≤ n ≤ 10000，1 ≤ m ≤ 100 且 m ≤ n； 1 ≤ wi ≤ 100。\nOutput The output is a single line, 1 integer, indicating the total time required to pick up the water.\nSample Input 1 2 5 3 4 4 1 2 1 Sample Output 1 4 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include \u0026lt;stdio.h\u0026gt; int dm[101]={0}; int w[10001]; int t=1; int bj=0; int main() { int n,m,i,j,d=1; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;n,\u0026amp;m); for(i=1;i\u0026lt;=n;i++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;w[i]); while(1) { for(i=1;i\u0026lt;=m;i++) { if(dm[i]==0)//若有水龙头 这一单位时间 没使用 则替换 接水者 { if(d\u0026lt;=n)dm[i]=d++;//dm[i] i 代表 水龙头 编号 dm[i]存储 这一单位时间 接水人编号 } if(dm[i]!=0)//水龙头有人接水 本水龙头接水人节水量-1 { w[dm[i]]-=1; if(w[dm[i]]==0)dm[i]=0;bj=1;}//这一单位本水龙头接水人接水量为0则空出水龙头 } if(bj!=1) break; //bj==1则表示 本次单位时间 有水龙头使用 bj==0则标记本单位时间没水龙头使用则所有过程上一秒已完成 bj=0; t++; } printf(\u0026#34;%d\\n\u0026#34;,t-1); return 0; } All through C语言网 compile and run. ","date":"2020-03-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1629-algorithm-training-vipwater-connection-problems-c-language/","title":"Q 1629 [Algorithm Training VIP]Water connection problems (C Language)"},{"content":"Q 1632: [Algorithm Improvement VIP]Number of pairs Time limit: 1Sec Memory Limit: 128MB\nTitle Description Write a program that reads in an integer from the user and then lists all pairs of numbers, the product of each pair being the number.\nInput The input has only one line, i.e. an integer.\nOutput The output has several lines, each line is a multiplication equation. (Note: there is a space between the operator symbol and the number)\nSample Input 1 32 Sample Output 1 2 3 4 5 6 1 * 32 = 32 2 * 16 = 32 4 * 8 = 32 8 * 4 = 32 16 * 2 = 32 32 * 1 = 32 C Code 1 2 3 4 5 6 7 8 #include\u0026lt;stdio.h\u0026gt; int main(){ int i,n; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=1;i\u0026lt;=n;i++){ if(n%i==0)printf(\u0026#34;%d * %d = %d\\n\u0026#34;,i,n/i,n); } } All through C语言网 compile and run. ","date":"2020-03-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1632-algorithm-improvement-vipnumber-of-pairs-c-language/","title":"Q 1632 [Algorithm Improvement VIP]Number of pairs (C Language)"},{"content":"Q 1648: [Algorithm Training VIP]Order of precedence Time limit: 1Sec Memory Limit: 128MB\nTitle Description Give the middle-order and post-order arrangement of a binary tree. Find its prior-order arrangement. (Agreed tree nodes are denoted by different capital letters, length \u0026lt; = 8).\nInput Two lines, one string per line, representing the middle-order and back-order arrangement respectively\nOutput A string indicating the desired order of precedence\nSample Input 1 2 BADC BDCA Sample Output 1 ABCD C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #define Max(x,y) x\u0026gt;y?x:y char s[100],s1[100]; void Pd(char *x,char *x1) { int i,j,k,l,p; char c; char x3[100],x4[100];//X3:left of x X4:right of x char x6[100],x7[100];//X6:x1\u0026#39;s left X7:x1\u0026#39;s right int t=strlen(x1)-1; c=x1[t];//Output the last bit of the subsequence (root node) printf(\u0026#34;%c\u0026#34;,c); p=strlen(x); for(i=0;x[i];i++) { if(c==x[i]) { break; } x3[i]=x[i];//Put the first i of X into the middle order of the left node The first i of X1 into the middle order of the right node x6[i]=x1[i]; } x3[i]=\u0026#39;\\0\u0026#39;;//Don\u0026#39;t forget x6[i]=\u0026#39;\\0\u0026#39;; k=0; for(l=i+1;l\u0026lt;p;l++)//Put the number after X i (i is the root node) into x4 { x4[k++]=x[l]; } x4[k]=\u0026#39;\\0\u0026#39;; k=0; for(l=i;l\u0026lt;p-1;l++)//Put i --- (last-1) of X1 into x7 (because last is the root node) { x7[k++]=x1[l]; } x7[k]=\u0026#39;\\0\u0026#39;; if(x3[0]) Pd(x3,x6); if(x4[0]) Pd(x4,x7); } int main() { int i,j; scanf(\u0026#34;%s\u0026#34;,s); scanf(\u0026#34;%s\u0026#34;,s1); Pd(s,s1); return 0; } All through C语言网 compile and run. ","date":"2020-03-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1648-algorithm-training-viporder-of-precedence-c-language/","title":"Q 1648 [Algorithm Training VIP]Order of precedence (C Language)"},{"content":"Computer Vision - Experiment 4 - Image nonlinear filtering experiment Experimental objectives and requirements (i) To master the principle of median filtering of images and the programming implementation method through experiments;\n(ii) To master the principle of bilateral filtering of images and the programmed implementation method through experiments.\nExperiment content (i) Implement median filtering using the medianBlur function in OpenCV.\n(ii) Implement bilateral filtering using the bilateralFilter function in OpenCV.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) image filtering, which refers to the suppression of noise in the target image under the condition of preserving as much as possible the detailed features of the image, is an indispensable operation in image pre-processing, and the effectiveness of its processing will directly affect the effectiveness and reliability of subsequent image processing and analysis.\n(ii) In many cases, it is necessary to use the nonlinear filtering of neighboring pixels to get better results. For example, if the noise is scattered noise instead of Gaussian noise, i.e., when the image occasionally has very large values, the noise pixels are not removed if the image is blurred with a Gaussian filter; they are simply converted to softer but still visible scattered particles. A better result can be achieved at this point by using median filtering.\n(iii) Bilateral filtering is a nonlinear filtering method that is an eclectic process that combines the spatial proximity of the image and the similarity of pixel values, taking into account both space domain information and grayscale similarity, to achieve edge-preserving denoising with simple, local characteristics.\n(iv) In OpenCV, median filtering is implemented using the medianBlur function and bilateral filtering is implemented using the bilateralFilter function.\nExperimental steps (i) Create a Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to implement median filtering using the medianBlur function;\n(iv) Use the bilateralFilter function to implement bilateral filtering.\nExperimental Notes (i) The method of configuring OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of medianBlur function and bilateralFilter function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 //---------------------------------【头文件包含部分】------------------------------------ //\t描述：包含程序所依赖的头文件 //------------------------------------------------------------------------------------- #include \u0026lt;opencv2/core/core.hpp\u0026gt; #include \u0026lt;opencv2/highgui/highgui.hpp\u0026gt; #include \u0026lt;opencv2/imgproc/imgproc.hpp\u0026gt; #include \u0026lt;iostream\u0026gt; //--------------------------------【命名空间声明部分】----------------------------------- //\t描述：包含程序所使用的命名空间 //------------------------------------------------------------------------------------- using namespace std; using namespace cv; //---------------------------------【全局变量声明部分】---------------------------------- //\t描述：全局变量声明 //------------------------------------------------------------------------------------- Mat g_srcImage,g_dstImage1,g_dstImage2,g_dstImage3,g_dstImage4,g_dstImage5; int g_nBoxFilterValue=6; //方框滤波内核值 int g_nMeanBlurValue=10; //均值滤波内核值 int g_nGaussianBlurValue=6; //高斯滤波内核值 int g_nMedianBlurValue=10; //中值滤波参数值 int g_nBilateralFilterValue=10; //双边滤波参数值 //--------------------------------【全局函数声明部分】----------------------------------- //\t描述：全局函数声明 //------------------------------------------------------------------------------------- //轨迹条回调函数 static void on_BoxFilter(int, void *);\t//方框滤波 static void on_MeanBlur(int, void *);\t//均值块滤波器 static void on_GaussianBlur(int, void *);\t//高斯滤波器 static void on_MedianBlur(int, void *);\t//中值滤波器 static void on_BilateralFilter(int, void *);\t//双边滤波器 void ShowHelpText(); //--------------------------------【main( )函数】---------------------------------------- //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------- int main( ) { system(\u0026#34;color 4F\u0026#34;); ShowHelpText();\t// 载入原图 g_srcImage = imread( \u0026#34;20170829110313260.png\u0026#34;, 1 ); if( !g_srcImage.data ) { printf(\u0026#34;读取srcImage错误~！ \\n\u0026#34;); return false; } //克隆原图到5个Mat类型中 g_dstImage1 = g_srcImage.clone( ); g_dstImage2 = g_srcImage.clone( ); g_dstImage3 = g_srcImage.clone( ); g_dstImage4 = g_srcImage.clone( ); g_dstImage5 = g_srcImage.clone( ); //显示原图 namedWindow(\u0026#34;【\u0026lt;0\u0026gt;原图窗口】\u0026#34;, 1); imshow(\u0026#34;【\u0026lt;0\u0026gt;原图窗口】\u0026#34;,g_srcImage); //=================【\u0026lt;1\u0026gt;方框滤波】========================= //创建窗口 namedWindow(\u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;内核值：\u0026#34;, \u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;,\u0026amp;g_nBoxFilterValue, 50,on_BoxFilter ); on_MeanBlur(g_nBoxFilterValue,0); imshow(\u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;, g_dstImage1); //===================================================== //=================【\u0026lt;2\u0026gt;均值滤波】========================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;2\u0026gt;均值滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;内核值：\u0026#34;, \u0026#34;【\u0026lt;2\u0026gt;均值滤波】\u0026#34;,\u0026amp;g_nMeanBlurValue, 50,on_MeanBlur ); on_MeanBlur(g_nMeanBlurValue,0); //====================================================== //=================【\u0026lt;3\u0026gt;高斯滤波】=========================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;3\u0026gt;高斯滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;内核值：\u0026#34;, \u0026#34;【\u0026lt;3\u0026gt;高斯滤波】\u0026#34;,\u0026amp;g_nGaussianBlurValue, 50,on_GaussianBlur ); on_GaussianBlur(g_nGaussianBlurValue,0); //======================================================= //=================【\u0026lt;4\u0026gt;中值滤波】=========================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;4\u0026gt;中值滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;参数值：\u0026#34;, \u0026#34;【\u0026lt;4\u0026gt;中值滤波】\u0026#34;,\u0026amp;g_nMedianBlurValue, 50,on_MedianBlur ); on_MedianBlur(g_nMedianBlurValue,0); //======================================================= //=================【\u0026lt;5\u0026gt;双边滤波】=========================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;5\u0026gt;双边滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;参数值：\u0026#34;, \u0026#34;【\u0026lt;5\u0026gt;双边滤波】\u0026#34;,\u0026amp;g_nBilateralFilterValue, 50,on_BilateralFilter); on_BilateralFilter(g_nBilateralFilterValue,0); //======================================================= //输出一些帮助信息 cout\u0026lt;\u0026lt;endl\u0026lt;\u0026lt;\u0026#34;\\t运行成功，请调整滚动条观察图像效果~\\n\\n\u0026#34; \u0026lt;\u0026lt;\u0026#34;\\t按下“q”键时，程序退出。\\n\u0026#34;; while(char(waitKey(1)) != \u0026#39;q\u0026#39;) {} return 0; } //-----------------------------【on_BoxFilter( )函数】---------------------------------- //\t描述：方框滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_BoxFilter(int, void *) { //方框滤波操作 boxFilter( g_srcImage, g_dstImage1, -1,Size( g_nBoxFilterValue+1, g_nBoxFilterValue+1)); //显示窗口 imshow(\u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;, g_dstImage1); } //-----------------------------【on_MeanBlur( )函数】------------------------------------ //\t描述：均值滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_MeanBlur(int, void *) { blur( g_srcImage, g_dstImage2, Size( g_nMeanBlurValue+1, g_nMeanBlurValue+1), Point(-1,-1)); imshow(\u0026#34;【\u0026lt;2\u0026gt;均值滤波】\u0026#34;, g_dstImage2); } //----------------------------【on_GaussianBlur( )函数】--------------------------------- //\t描述：高斯滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_GaussianBlur(int, void *) { GaussianBlur( g_srcImage, g_dstImage3, Size( g_nGaussianBlurValue*2+1, g_nGaussianBlurValue*2+1 ), 0, 0); imshow(\u0026#34;【\u0026lt;3\u0026gt;高斯滤波】\u0026#34;, g_dstImage3); } //-----------------------------【on_MedianBlur( )函数】--------------------------------- //\t描述：中值滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_MedianBlur(int, void *) { medianBlur ( g_srcImage, g_dstImage4, g_nMedianBlurValue*2+1 ); imshow(\u0026#34;【\u0026lt;4\u0026gt;中值滤波】\u0026#34;, g_dstImage4); } //-------------------------【on_BilateralFilter( )函数】--------------------------------- //\t描述：双边滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_BilateralFilter(int, void *) { bilateralFilter ( g_srcImage, g_dstImage5, g_nBilateralFilterValue, g_nBilateralFilterValue*2, g_nBilateralFilterValue/2 ); imshow(\u0026#34;【\u0026lt;5\u0026gt;双边滤波】\u0026#34;, g_dstImage5); } //-----------------------------------【ShowHelpText( )函数】----------------------------- //\t描述：输出一些帮助信息 //------------------------------------------------------------------------------------- void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第37个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); } (ii) Show results\nExperiment summary The main content of this experiment is to master the principle of median filtering and programming implementation method of image, and master the principle of bilateral filtering and programming implementation method of image. I used the medianBlur function in OpenCV to implement median filtering, and the bilateralFilter function in OpenCV to implement bilateral filtering. By writing code, I learned to implement median filtering and bilateral filtering using medianBlur and bilateralFilter functions.\n","date":"2020-03-18T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-4-image-nonlinear-filtering-experiment/","title":"Computer Vision - Experiment 4 - Image nonlinear filtering experiment"},{"content":"Computer Vision - Experiment 3 - Image linear filtering experiment Experimental objectives and requirements (i) To master the principle of box filtering of images and the programming implementation method through experiments;\n(ii) To master the principle of mean filtering of images and the programmed implementation method through experiments;\n(ii) To master the principle of Gaussian filtering of images and the programmed implementation method through experiments.\nExperiment content (i) Use the boxFilter function in OpenCV to implement box filtering.\n(ii) Implementing mean filtering using the blur function in OpenCV;\n(iii) Gaussian filtering using GaussianBlur function in OpenCV.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) Image filtering, which refers to the suppression of noise in the target image under the condition of preserving as much as possible the detailed features of the image, is an indispensable operation in image pre-processing, and the effectiveness of its processing will directly affect the validity and reliability of subsequent image processing and analysis. The output value of each pixel of the linear filter is the weighted sum of some input pixels. Linear filters are easy to construct, well and easy to analyze from a frequency response perspective.\n(ii) In OpenCV, the following three commonly used linear filter operations are provided, which are encapsulated in separate functions and are very easy to use: boxFilter function, mean filter blur function; Gaussian filter GaussianBlur function.\nExperimental steps (i) Create the Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to implement box filtering using the boxFilter function;\n(iv) Write code to implement mean filtering using the blur function;\n(v) Write code to implement Gaussian filtering using the gaussianBlur function.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of boxFilter function, blur function and gaussianBlur function.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 //------------------------------【头文件、命名空间包含部分】------------------------------ //\t描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026lt;opencv2/core/core.hpp\u0026gt; #include \u0026lt;opencv2/highgui/highgui.hpp\u0026gt; #include \u0026lt;opencv2/imgproc/imgproc.hpp\u0026gt; #include \u0026lt;iostream\u0026gt; using namespace std; using namespace cv; //----------------------------------【全局变量声明部分】--------------------------------- //\t描述：全局变量声明 //------------------------------------------------------------------------------------- Mat g_srcImage,g_dstImage1,g_dstImage2,g_dstImage3;//存储图片的Mat类型 int g_nBoxFilterValue=3; //方框滤波参数值 int g_nMeanBlurValue=3; //均值滤波参数值 int g_nGaussianBlurValue=3; //高斯滤波参数值 //---------------------------------【全局函数声明部分】---------------------------------- //\t描述：全局函数声明 //------------------------------------------------------------------------------------- //四个轨迹条的回调函数 static void on_BoxFilter(int, void *);\t//方框滤波 static void on_MeanBlur(int, void *);\t//均值滤波 static void on_GaussianBlur(int, void *);\t//高斯滤波 void ShowHelpText(); //----------------------------------【main( )函数】------------------------------------ //\t描述：控制台应用程序的入口函数，我们的程序从这里开始 //------------------------------------------------------------------------------------- int main( ) { //改变console字体颜色 system(\u0026#34;color 5F\u0026#34;); //输出帮助文字 ShowHelpText(); // 载入原图 g_srcImage = imread( \u0026#34;20170829110313260.png\u0026#34;, 1 ); if( !g_srcImage.data ) { printf(\u0026#34;Oh，no，读取srcImage错误~！ \\n\u0026#34;); return false; } //克隆原图到三个Mat类型中 g_dstImage1 = g_srcImage.clone( ); g_dstImage2 = g_srcImage.clone( ); g_dstImage3 = g_srcImage.clone( ); //显示原图 namedWindow(\u0026#34;【\u0026lt;0\u0026gt;原图窗口】\u0026#34;, 1); imshow(\u0026#34;【\u0026lt;0\u0026gt;原图窗口】\u0026#34;,g_srcImage); //=================【\u0026lt;1\u0026gt;方框滤波】================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;内核值：\u0026#34;, \u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;, \u0026amp;g_nBoxFilterValue, 40, on_BoxFilter); on_BoxFilter(g_nBoxFilterValue, 0); //================================================ //=================【\u0026lt;2\u0026gt;均值滤波】================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;2\u0026gt;均值滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;内核值：\u0026#34;, \u0026#34;【\u0026lt;2\u0026gt;均值滤波】\u0026#34;,\u0026amp;g_nMeanBlurValue, 40,on_MeanBlur ); on_MeanBlur(g_nMeanBlurValue,0); //================================================ //=================【\u0026lt;3\u0026gt;高斯滤波】===================== //创建窗口 namedWindow(\u0026#34;【\u0026lt;3\u0026gt;高斯滤波】\u0026#34;, 1); //创建轨迹条 createTrackbar(\u0026#34;内核值：\u0026#34;, \u0026#34;【\u0026lt;3\u0026gt;高斯滤波】\u0026#34;,\u0026amp;g_nGaussianBlurValue, 40,on_GaussianBlur ); on_GaussianBlur(g_nGaussianBlurValue,0); //================================================ //输出一些帮助信息 cout\u0026lt;\u0026lt;endl\u0026lt;\u0026lt;\u0026#34;\\t运行成功，请调整滚动条观察图像效果~\\n\\n\u0026#34; \u0026lt;\u0026lt;\u0026#34;\\t按下“q”键时，程序退出。\\n\u0026#34;; //按下“q”键时，程序退出 while(char(waitKey(1)) != \u0026#39;q\u0026#39;) {} return 0; } //----------------------------【on_BoxFilter( )函数】------------------------------------ //\t描述：方框滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_BoxFilter(int, void *) { //方框滤波操作，其主要功能是：在给定的滑动窗口大小下，对每个窗口内的像素值进行快速相加求和 boxFilter( g_srcImage, g_dstImage1, -1,Size( g_nBoxFilterValue+1, g_nBoxFilterValue+1)); //显示窗口 imshow(\u0026#34;【\u0026lt;1\u0026gt;方框滤波】\u0026#34;, g_dstImage1); } //-----------------------------【on_MeanBlur( )函数】------------------------------------ //\t描述：均值滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_MeanBlur(int, void *) { //均值滤波操作，均值滤波是一种典型的线性滤波算法，主要是利用像素点邻域的像素值来计算像素点的值。 //其具体方法是首先给出一个滤波模板kernel，该模板将覆盖像素点周围的其他邻域像素点， //去掉像素本身，将其邻域像素点相加然后取平均值即为该像素点的新的像素值，这就是均值滤波的本质。 //. Size ksize : 滤波模板kernel的尺寸，一般使用Size(w, h)来指定，如Size(3, 3) //.Point anchor = Point(-1, -1) : 字面意思是锚点，也就是处理的像素位于kernel的什么位置， //默认值为(-1, -1)即位于kernel中心点，如果没有特殊需要则不需要更改 blur( g_srcImage, g_dstImage2, Size( g_nMeanBlurValue+1, g_nMeanBlurValue+1), Point(-1,-1)); //显示窗口 imshow(\u0026#34;【\u0026lt;2\u0026gt;均值滤波】\u0026#34;, g_dstImage2); } //-----------------------------【ContrastAndBright( )函数】------------------------------ //\t描述：高斯滤波操作的回调函数 //------------------------------------------------------------------------------------- static void on_GaussianBlur(int, void *) { //高斯滤波操作 //void GaussianBlur(InputArray src, OutputArray dst, Size ksize, //\tdouble sigmaX, double sigmaY = 0, //\tint borderType = BORDER_DEFAULT); //. double sigmaX : 高斯核函数在X方向上的标准偏差 //. double sigmaY : 高斯核函数在Y方向上的标准偏差 //如果sigmaX和sigmaY都是0，这两个值将由ksize.width和ksize.height计算而来。 //具体可以参考getGaussianKernel()函数查看具体细节。 GaussianBlur( g_srcImage, g_dstImage3, Size( g_nGaussianBlurValue*2+1, g_nGaussianBlurValue*2+1 ), 0, 0); //显示窗口 imshow(\u0026#34;【\u0026lt;3\u0026gt;高斯滤波】\u0026#34;, g_dstImage3); } //--------------------------------【ShowHelpText( )函数】-------------------------------- //\t描述：输出一些帮助信息 //------------------------------------------------------------------------------------- void ShowHelpText() { //输出欢迎信息和OpenCV版本 printf(\u0026#34;\\n\\n\\t\\t\\t非常感谢购买《OpenCV3编程入门》一书！\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t此为本书OpenCV3版的第34个配套示例程序\\n\u0026#34;); printf(\u0026#34;\\n\\n\\t\\t\\t 当前使用的OpenCV版本为：\u0026#34; CV_VERSION ); printf(\u0026#34;\\n\\n ----------------------------------------------------------------------------\\n\u0026#34;); } (ii) Show results\nExperiment summary The main content of this experiment is to master the principle of box filtering and programming implementation method of image, master the principle of mean filtering and programming implementation method of image, master the principle of Gaussian filtering and programming implementation method of image. I used the boxFilter function in OpenCV to implement box filtering, the blur function in OpenCV to implement mean filtering, and the GaussianBlur function in OpenCV to implement Gaussian filtering. By writing code, I learned to implement box filtering, mean filtering and Gaussian filtering using the boxFilter function, blur function and GaussianBlur function.\n","date":"2020-03-16T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-3-image-linear-filtering-experiment/","title":"Computer Vision - Experiment 3 - Image linear filtering experiment"},{"content":"Computer Vision - Experiment 2 - Histogram of images Experimental objectives and requirements (i) To master the method of drawing histogram of image through experiment;\n(ii) To master the method of image histogram equalization through the experiment.\nExperiment content (i) Use the calcHist function in OpenCV to calculate the histogram, and after the calculation, use the rectangle function in OpenCV to draw rectangles to complete the histogram drawing.\n(ii) the histogram equalization function in OpenCV is used to implement the histogram equalization function.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle (i) The calculation of the histogram can be done in OpenCV using the calcHist function, and after the calculation is done, it can be done using the drawing functions in OpenCV, such as the rectangle function for drawing rectangles.\n(ii) Many times, the results of photos taken with a camera are often unsatisfactory. This is when some processing can be done on these images to expand the dynamic range of the image. The most commonly used technique in this case is histogram equalization. The equalized image has a more expansive spectrum, effectively using the 0-255 space, and a more expressive image; in OpenCV, the functional implementation of histogram equalization is done by the equalizeHist function.\nExperimental steps (i) Create the Visual Studio 2015 console program;\n(ii) Configure OpenCV in Visual Studio 2015;\n(iii) Write code to plot the image histogram using the calcHist function and rectangle;\n(iv) Write code to complete histogram equalization using equalizeHist function.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of calcHist and equalizeHist functions.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 //------------------------------【头文件、命名空间包含部分】--------------------------- // 描述：包含程序所使用的头文件和命名空间 //------------------------------------------------------------------------------------- #include \u0026#34;opencv2/highgui/highgui.hpp\u0026#34; #include \u0026#34;opencv2/imgproc/imgproc.hpp\u0026#34; using namespace cv; //-----------------------------------【main( )函数】------------------------------------- // 描述：控制台应用程序的入口函数，我们的程序从这里开始执行 //------------------------------------------------------------------------------------- Mat drawHist(Mat srcImage) { //【2】定义变量 MatND dstHist; // 在cv中用CvHistogram *hist = cvCreateHist int dims = 1; float hranges[] = { 0, 255 }; const float *ranges[] = { hranges }; // 这里需要为const类型 int size = 256; //设定bin数目，必须和灰度级数目相等，这里是0到255，所以size为256 int channels = 0; //【3】计算图像的直方图 //void calcHist(const Mat* images, int nimages, //\tconst int* channels, InputArray mask, //\tOutputArray hist, int dims, const int* histSize, //\tconst float** ranges, bool uniform = true, bool accumulate = false) //参数1表示需要用来计算直方图的源图像序列，因此可以允许有多张大小一样，数据类型相同的图像被用来统计其直方图特征。 //参数2表示的就是使用多少张图像序列中的图像用于计算直方图。 //参数3的出现主要是考虑到输入的每一张图像有可能是多通道的，比如说RGB图就是3通道的，那么从统计意义上来讲，一张RGB图其实就是3张单通道的图像，而计算直方图时其本质也是针对单张图像进行的。这里虽然我们输入的图像序列images中有很多图片，但是并不是每一张图片的每一个通道都会被用来计算。所以参数3的功能是指定哪些通道的图像被用来计算（后面的解释都假设图像序列中图像是3通道的，那么有的图像可能有多个通道都被用来计算，有的图像可能连一个通道都没有被采用），这时参数3里面保存的是通道的序号，那么图像序列images中的第一张图片的通道序号（假设图像时3通道的）为0, 1, 2；images中第二张图片的图像序列接着上一次的，为3, 4, 5, ；依次类推即可。 //参数4是mask掩膜操作，即指定每张图片的哪些像素被用于计算直方图，这个掩膜矩阵不能够针对特定图像设定特定的掩膜，因此在这里是一视同仁对待的。 //参数5是保存计算的直方图结果的矩阵，有可能是多维矩阵。 //参数6是需要计算的直方图的维数。 //参数7是所需计算直方图的每一维的大小，即每一维bin的个数。 calcHist(\u0026amp;srcImage, 1, \u0026amp;channels, Mat(), dstHist, dims, \u0026amp;size, ranges); // cv 中是cvCalcHist int scale = 1; Mat dstImage(size * scale, size, CV_8U, Scalar(0)); //【4】获取最大值和最小值 double minValue = 0; double maxValue = 0; minMaxLoc(dstHist, \u0026amp;minValue, \u0026amp;maxValue, 0, 0); // 在cv中用的是cvGetMinMaxHistValue //【5】绘制出直方图 //saturate_cast\u0026lt;int\u0026gt;(double v) { return cvRound(v); } int hpt = saturate_cast\u0026lt;int\u0026gt;(0.9 * size);//防止溢出,hpt=230 for (int i = 0; i \u0026lt; 256; i++) { float binValue = dstHist.at\u0026lt;float\u0026gt;(i); // 注意hist中是float类型 而在OpenCV1.0版中用cvQueryHistValue_1D int realValue = saturate_cast\u0026lt;int\u0026gt;(binValue * hpt / maxValue); rectangle(dstImage, Point(i*scale, size - 1), Point((i + 1)*scale - 1, size - realValue), Scalar(255)); } return dstImage; } int main() { // 【1】加载源图像 Mat srcImage, dstImage; srcImage = imread(\u0026#34;1.jpg\u0026#34;, 1); if (!srcImage.data) { printf(\u0026#34;读取图片错误，请确定目录下是否有imread函数指定图片存在~！ \\n\u0026#34;); return false; } // 【2】转为灰度图并显示出来 cvtColor(srcImage, srcImage, COLOR_BGR2GRAY); imshow(\u0026#34;原始图\u0026#34;, srcImage); Mat histSrc = drawHist(srcImage); imshow(\u0026#34;histSrc\u0026#34;, histSrc); // 【3】进行直方图均衡化 equalizeHist(srcImage, dstImage); Mat histDst = drawHist(dstImage); imshow(\u0026#34;histDst\u0026#34;, histDst); // 【4】显示结果 imshow(\u0026#34;经过直方图均衡化后的图\u0026#34;, dstImage); // 等待用户按键退出程序 waitKey(0); return 0; } (ii) Show results\nExperiment summary The main content of this experiment is to master the histogram method of drawing images and the image histogram equalization method. I used the calcHist function in OpenCV to calculate the histogram, and then used the rectangle function in OpenCV to draw a rectangle to complete the histogram; in OpenCV, I used the equalizeHist function to achieve the histogram equalization function. By writing the code, I learned to use the calcHist function and rectangle to draw the image histogram; I learned to use the equalizeHist function to complete the histogram equalization.\n","date":"2020-03-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-2-histogram-of-images/","title":"Computer Vision - Experiment 2 - Histogram of images"},{"content":"Computer Vision - Experiment 1 - Image loading, display and output Experimental objectives and requirements (i) To master the installation of OpenCV in Windows through experiments;\n(ii) master the method of loading, displaying and outputting images through experiments\nExperiment content (i) Installing OpenCV in Windows.\n(ii) Write programs for loading, displaying and outputting images.\nExperimental instruments, equipment A computer with Windows 7 operating system and Visual Studio 2015 installed\nExperimental principle Opencv uses the Mat class to implement image storage. Images are stored in a matrix format where each pixel has a position and can be referenced by the number of columns and rows. the Mat class is not only used to store images, but also different types of matrices of arbitrary size. The Mat class can be used to perform operations such as matrix addition, matrix multiplication, matrix creation, etc. The imread function is used to read the image. imwrite function is used to write the image. imshow function is used to display the image.\nExperimental steps (i) Install OpenCV in Windows\nDownload opencv source code in the URL https://sourceforge.net/projects/opencvlibrary/ and install it in Windows to install OpenCV.\n(ii) Configuring OpenCV in Visual Studio 2015;\n(iii) Write code to read the image using the imread function;\n(iv) Write code to write images using the imwrite function;\n(v) Write code to display the image using the imshow function.\nExperimental notes (i) Configure OpenCV in VS after completing the installation of OpenCV;\n(ii) The functions and usage of imread, imwrite, and imshow functions.\nExperimental results (i) Experimental code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #include \u0026lt;opencv2/core/core.hpp\u0026gt; #include \u0026lt;opencv2/highgui/highgui.hpp\u0026gt; using namespace cv; int main( ) { //-------------------------------【一、图像的载入和显示】---------------------------- //\t描述：以下三行代码用于完成图像的载入和显示 //--------------------------------------------------------------------------------- cv::Mat girl = cv::imread(\u0026#34;girl.jpg\u0026#34;, 0); //载入图像到Mat namedWindow(\u0026#34;【1】动漫图\u0026#34;); //创建一个名为 \u0026#34;【1】e动漫图\u0026#34;的窗口 imshow(\u0026#34;【1】动漫图\u0026#34;,girl);//显示名为 \u0026#34;【1】动漫图\u0026#34;的窗口 //-------------------------------【二、初级图像混合】--------------------------------- //\t描述：二、初级图像混合 //--------------------------------------------------------------------------------- //载入图片 Mat image = imread(\u0026#34;dota.jpg\u0026#34;); Mat logo = imread(\u0026#34;dota_logo.jpg\u0026#34;); //载入后先显示 namedWindow(\u0026#34;【2】原画图\u0026#34;); imshow(\u0026#34;【2】原画图\u0026#34;,image); namedWindow(\u0026#34;【3】logo图\u0026#34;); imshow(\u0026#34;【3】logo图\u0026#34;,logo); // 定义一个Mat类型，用于存放，图像的ROI Mat imageROI; //方法一 imageROI= image(Rect(800,350,logo.cols,logo.rows)); //方法二 //imageROI= image(Range(350,350+logo.rows),Range(800,800+logo.cols)); // 将logo加到原图上 addWeighted(imageROI,0.5,logo,0.3,0.,imageROI); //显示结果 namedWindow(\u0026#34;【4】原画+logo图\u0026#34;); imshow(\u0026#34;【4】原画+logo图\u0026#34;,image); //--------------------------------【三、图像的输出】---------------------------------- //\t描述：将一个Mat图像输出到图像文件 //--------------------------------------------------------------------------------- //输出一张jpg图片到工程目录下 imwrite(\u0026#34;由imwrite生成的图片.jpg\u0026#34;, image); //imwrite(\u0026#34;由imwrite生成的图片.jpg\u0026#34;, image); waitKey(0); return 0; } (ii) Show results\nExperiment Summary The main content of this experiment is to write a program for loading, displaying and outputting images. The main functions used are cv::Mat girl=cv::imread(\u0026ldquo;xx.jpg\u0026rdquo;, 0); (load image to Mat, the first parameter xx.jpg is the name of the image, the second parameter 0 is the grayscale map); namedWindow(\u0026ldquo;window name\u0026rdquo;);; display function imshow(\u0026ldquo;window name\u0026rdquo;, xx);; load image function Mat image= imread(\u0026ldquo;xx.jpg\u0026rdquo;);; imageROI= image(Rect());; addWeighted();; imwrite(\u0026quot;.jpg\u0026quot;,image);;; etc. functions. This experiment allowed me to fully understand the above functions and the flow of the experiment. I learned how to use the above functions to load, display and input the most basic images by myself.\n","date":"2020-03-09T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/computer-vision-experiment-1-image-loading-display-and-output/","title":"Computer Vision - Experiment 1 - Image loading, display and output"},{"content":"Q 1084: Use the sieve method to find the prime numbers in N Time limit: 1Sec Memory Limit: 128MB\nTitle Description Use the sieve method to find the prime numbers in N.\ninput N\nOutput The prime numbers from 0 to N\nSample Input 1 100 Sample Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include\u0026lt;stdio.h\u0026gt; int main() { int n,i,j,k; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=2;i\u0026lt;=n;i++) { k=1; for(j=2;j\u0026lt;i;j++) { if(i%j == 0) k=0; } if(k==1) printf(\u0026#34;%d\\n\u0026#34;,i); } int vio; scanf(\u0026#34;%d\u0026#34;,\u0026amp;vio); return 0; } All through C语言网 compile and run. ","date":"2020-02-14T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1084-use-the-sieve-method-to-find-the-prime-numbers-in-n-c-language/","title":"Q 1084 Use the sieve method to find the prime numbers in N (C Language)"},{"content":"Q 1432: [2013 4th exam questions]Cut the grid Time limit: 1Sec Memory Limit: 128MB\nTitle Description 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Past exams Cut the grid Time limit: 1.0s Memory limit: 256.0MB Problem Description As shown in the figure below, the grid of 3 x 3 is filled with some integers. +--*--+--+ |10* 1|52| +--****--+ |20|30* 1| *******--+ | 1| 2| 3| +--+--+--+ We cut along the asterisk line in the figure to get two parts, each with a sum of numbers of 60. The question asks you to programmatically determine whether the integer in the given m x n lattice can be partitioned into two parts such that the sum of the numbers in these two regions is equal. If there are multiple solutions, output the minimum number of squares contained in the region containing the top left square. If it cannot be divided, output 0. Input The program first reads in two integers m n divided by spaces (m,n\u0026lt; 10). This represents the width and height of the table. Next are n rows of m positive integers each, separated by spaces. Each integer is not greater than 10000.\nOutput Output an integer indicating the smallest number of cells that the partition containing the upper-left corner may contain among all solutions.\nSample Input 1 2 3 4 3 3 10 1 52 20 30 1 1 2 3 Sample Output 1 3 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 #include \u0026lt;stdio.h\u0026gt; int a[10][10];//Save value int b[10][10];//Tagging arrays int count=100; int m,n,sum=0; int dx[4]={0,1,0,-1}; int dy[4]={1,0,-1,0}; void f(int s,int i,int j,int bs) { //s-\u0026gt; current and i,j coordinates of the current point , bs current number of steps (number of grids) if(s==sum/2\u0026amp;\u0026amp;count\u0026gt;bs)count=bs;//Determine if the answer is updated else{ for(int k=0;k\u0026lt;4;k++){ int x=dx[k]+i; int y=dy[k]+j;//Boundary judgment and pruning if(b[x][y]==1\u0026amp;\u0026amp;i\u0026gt;=0\u0026amp;\u0026amp;i\u0026lt;n\u0026amp;\u0026amp;j\u0026gt;=0\u0026amp;\u0026amp;j\u0026lt;m\u0026amp;\u0026amp;(s+a[x][y])\u0026lt;=sum/2){ b[x][y]=0; //At this point, a[0][0] is only used for concatenation, so neither the grid nor the value is increased. if(x==0\u0026amp;\u0026amp;y==0) f(s,x,y,bs); else f(s+a[x][y],x,y,bs+1); b[x][y]=1;//Elimination of markers }\t} } } int main() {int i,j,tem; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;m,\u0026amp;n);//Input width and height for(i=0;i\u0026lt;n;i++)//Note that the pit point is entered first in the vertical coordinate m and then in the horizontal coordinate for(j=0;j\u0026lt;m;j++) {scanf(\u0026#34;%d\u0026#34;,\u0026amp;a[i][j]);//Value sum+=a[i][j]; b[i][j]=1;//Initializing the tag array } if(sum%2==1)printf(\u0026#34;0\u0026#34;);//Can pre-judgment be divided into two parts else{ f(a[0][0],0,0,1); if(count!=100) printf(\u0026#34;%d\\n\u0026#34;,count); else printf(\u0026#34;0\\n\u0026#34;); } return 0; } All through C语言网 compile and run. ","date":"2020-02-11T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1432-2013-4th-exam-questionscut-the-grid-c-language/","title":"Q 1432 [2013 4th exam questions]Cut the grid (C Language)"},{"content":"Q 1429: [2014 5th exam questions] Landon Ants Time limit: 1Sec Memory Limit: 128MB\nTitle Description The Langdon ant, which was introduced in 1986 by Chris Langdon, is a type of cellular automaton.\nA square grid on a flat surface is filled with black or white. In one of the squares there is an \u0026ldquo;ant\u0026rdquo;. The ant\u0026rsquo;s head is oriented to one of the left and right sides.\nThe movement rule for ants is very simple: If the ant is in a black square, turn 90 degrees to the right, change the square to a white square, and move forward one square; If the ant is in the white frame, turn 90 degrees to the left, change the frame to black, and move one frame forward.\nAlthough the rule is simple, the ant\u0026rsquo;s behavior is very complicated. The routes left at the beginning will be close to symmetrical and seem to repeat, but regardless of the starting state, the ants will open up a regular \u0026ldquo;highway\u0026rdquo; after a long period of chaotic activity.\nThe route of ants is very difficult to predict in advance.\nYour task is to use a computer to simulate the position of the Langdon ants after the nth walk, based on the initial state.\nInput The first row of the input data is m n two integers (3 \u0026lt; m, n \u0026lt; 100), indicating the number of rows and columns of the square grid. This is followed by m rows of data. Each row of data is n numbers separated by spaces. 0 indicates a white cell and 1 indicates a black cell.\nNext is a row of data: x y s k, where x y is an integer that represents the row and column numbers of the ants (row numbers grow from top to bottom, column numbers grow from left to right, both starting from 0). s is a capital letter that represents the orientation of the ants\u0026rsquo; heads, and we agree to use: UDLR for top, bottom, left and right. k represents the number of steps taken by the ants.\nOutput The output data is a space-separated integer p q, which represents the row and column numbers of the grid in which the ant is located after k steps, respectively.\nSample Input 1 2 3 4 5 6 7 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 L 5 Sample Output 1 1 3 C Code Solution A 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 #include\u0026lt;stdio.h\u0026gt; int main() { int m,n,a[105][105],i,j,x,y,k; char s; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;m,\u0026amp;n); for(i=0;i\u0026lt;m;i++) for(j=0;j\u0026lt;n;j++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;a[i][j]); scanf(\u0026#34;%d%d %c%d\u0026#34;,\u0026amp;x,\u0026amp;y,\u0026amp;s,\u0026amp;k); for(;k\u0026gt;0;k--) { if(s == \u0026#39;U\u0026#39;) { if(a[x][y] == 1) { s = \u0026#39;R\u0026#39;; a[x][y] = 0; y++; } else { s = \u0026#39;L\u0026#39;; a[x][y] = 1; y--; } } else if(s == \u0026#39;D\u0026#39;) { if(a[x][y] == 1) { s = \u0026#39;L\u0026#39;; a[x][y] = 0; y--; } else { s = \u0026#39;R\u0026#39;; a[x][y] = 1; y++; } } else if(s == \u0026#39;L\u0026#39;) { if(a[x][y] == 1) { s = \u0026#39;U\u0026#39;; a[x][y] = 0; x--; } else { s = \u0026#39;D\u0026#39;; a[x][y] = 1; x++; } } else { if(a[x][y] == 1) { s = \u0026#39;D\u0026#39;; a[x][y] = 0; x++; } else { s = \u0026#39;U\u0026#39;; a[x][y] = 1; x--; } } } printf(\u0026#34;%d %d\u0026#34;,x,y); return 0; } Solution B 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 #include \u0026lt;stdio.h\u0026gt; char d0[4]= {\u0026#39;L\u0026#39;,\u0026#39;U\u0026#39;,\u0026#39;R\u0026#39;,\u0026#39;D\u0026#39;}; char d1[4]= {\u0026#39;L\u0026#39;,\u0026#39;D\u0026#39;,\u0026#39;R\u0026#39;,\u0026#39;U\u0026#39;}; int main() { int x,y,k,m,n; char s; int i,j,maze[100][100]; scanf(\u0026#34;%d %d\u0026#34;,\u0026amp;m,\u0026amp;n); for(i=0; i\u0026lt;m; i++) for(j=0; j\u0026lt;n; j++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;maze[i][j]); scanf(\u0026#34;%d %d %c %d\u0026#34;,\u0026amp;x,\u0026amp;y,\u0026amp;s,\u0026amp;k); while(k--) { if(maze[x][y]) { maze[x][y]=0; for(i=0; i\u0026lt;4; i++) if(s==d0[i]) break; s=d0[(i+1)%4]; switch(s) { case\u0026#39;L\u0026#39;: y--; break; case\u0026#39;R\u0026#39;: y++; break; case\u0026#39;U\u0026#39;: x--; break; case\u0026#39;D\u0026#39;: x++; break; } } else { maze[x][y]=1; for(i=0; i\u0026lt;4; i++) if(s==d1[i]) break; s=d1[(i+1)%4]; switch(s) { case\u0026#39;L\u0026#39;: y--; break; case\u0026#39;R\u0026#39;: y++; break; case\u0026#39;U\u0026#39;: x--; break; case\u0026#39;D\u0026#39;: x++; break; } } } printf(\u0026#34;%d %d\\n\u0026#34;,x,y); return 0; } All through C语言网 compile and run. ","date":"2020-02-10T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1429-2014-5th-exam-questions-landon-ants-c-language/","title":"Q 1429 [2014 5th exam questions] Landon Ants (C Language)"},{"content":"Q 1427: [2013 4th exam questions] The number that cannot be bought Time limit: 1Sec Memory Limit: 128MB\nTitle Description Xiao Ming opened a candy store. He has an original idea: he packs fruit candies into two kinds: 4 pieces in a packet and 7 pieces in a packet. The candy can\u0026rsquo;t be opened and sold in packages. When children come to buy candy, he uses these two kinds of packaging to combine. Of course there are some numbers of candies that cannot be combined, for example, to buy 10 candies. You can use a computer to test that the maximum number that cannot be bought in this packaging case is 17. Any number greater than 17 can be combined with 4 and 7. The requirement of this problem is to find the maximum number that cannot be combined out when the number of two packages is known.\nInput Two positive integers, indicating the number of sugars in each package (neither more than 1000)\nOutput A positive integer indicating the maximum number of sugars that cannot be bought\nSample Input 1 4 7 Sample Output 1 17 C Code 1 2 3 4 5 6 7 # include\u0026lt;stdio.h\u0026gt; int main(){ int a,b; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;a,\u0026amp;b); printf(\u0026#34;%d\\n\u0026#34;,a*b-a-b); return 0; } All through C语言网 compile and run. ","date":"2020-02-09T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1427-2013-4th-exam-questions-the-number-that-cannot-be-bought-c-language/","title":"Q 1427 [2013 4th exam questions] The number that cannot be bought (C Language)"},{"content":"Q 1255 [Algorithm Improvement]Energy Necklace Time limit: 1Sec Memory Limit: 128MB\nTitle Description On the planet Mars, each Mars person wears a string of energy necklace. On the necklace are N energy beads. An energy bead is a bead with a head marker and a tail marker, and these markers correspond to a positive integer. Also, for two adjacent beads, the tail mark of the first bead must be equal to the head mark of the second bead. This is because only then, through the action of the suction cups (suction cups are an organ of the Mars people that absorb energy), the two beads can coalesce into one bead and release energy that can be absorbed by the suction cups. If the first energy bead has a head mark of m and a tail mark of r, and the second energy bead has a head mark of r and a tail mark of n, the energy released after aggregation is mrn (Mars units), and the newly created bead has a head mark of m and a tail mark of n. When needed, the Mars person clips the two adjacent beads with a suction cup and gets energy by aggregation until only one bead is left on the necklace. Obviously, the total energy obtained by different aggregation sequences is different. Please design an aggregation sequence that maximizes the total energy released from a string of necklaces. For example, let N=4, the head mark and tail mark of 4 beads are (2, 3) (3, 5) (5, 10) (10, 2) in order. We use the notation ◎ to denote the aggregation operation of two beads, and (j ◎ k) to denote the energy released by the aggregation of the jth and kth beads. Then the energy released after the aggregation of the fourth and first two beads is (4◎1)=1023=60。 The total energy released by this string of necklaces to obtain the optimal value of one aggregation sequence is ((4◎1)◎2)◎3）=1023+1035+10510=710。\nInput The first row is a positive integer N (4 ≤ N ≤ 100), which indicates the number of beads on the necklace. The second row is a space-separated set of N positive integers, all of which should not exceed 1000. i is the head mark of the i-th bead (1 ≤ i ≤ N), and when i \u0026lt; N, the tail mark of the i-th bead should be equal to the head mark of the i+1-th bead. The tail mark of the Nth bead should be equal to the head mark of the 1st bead. As for the order of the beads, you can determine it like this: place the necklace on the table without crosses, designate the first bead at random, and then determine the order of the other beads in a clockwise direction.\nOutput There is only one row, a positive integer E (E ≤ 2.1*10^9), for the total energy released by an optimal aggregation sequence\nSample Input 1 2 4 2 3 5 10 Sample Output 1 710 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; #define Max(a,b) a\u0026gt;b?a:b int main() { long long int dp[202][202]; long long int s[202]; memset(dp,0,sizeof(dp)); long long int sum=0; int n,i,j,k,len; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=1;i\u0026lt;=n;i++) scanf(\u0026#34;%lld\u0026#34;,\u0026amp;s[i]),s[i+n]=s[i]; for(len=2;len\u0026lt;=n;len++) for(i=1;i+len-1\u0026lt;2*n;i++) { j=i+len-1; for(k=i;k\u0026lt;j;k++) dp[i][j]=Max(dp[i][j],dp[i][k]+dp[k+1][j]+s[i]*s[k+1]*s[j+1]); } for(i=1;i\u0026lt;=n;i++) if(sum\u0026lt;dp[i][i+n-1])sum=dp[i][i+n-1]; printf(\u0026#34;%lld\\n\u0026#34;,sum); return 0; } All through C语言网 compile and run. ","date":"2020-02-06T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1255-algorithm-improvementenergy-necklace-c-language/","title":"Q 1255 [Algorithm Improvement]Energy Necklace (C Language)"},{"content":"Q 1117: K-Decimal number Time limit: 1Sec Memory Limit: 128MB\nTitle Description Consider a K-decimal number containing N digits. Define a number to be valid if its K-decimal representation does not contain two consecutive zeros.\nExample. 1010230 is a valid 7-digit number 1000198 is invalid 0001235 is not a 7-digit number, but a 4-digit number.\nGiven two numbers N and K, calculate the total number of valid K-digit numbers that contain N digits.\nAssume that 2 \u0026lt;= K \u0026lt;= 10; 2 \u0026lt;= N; 4 \u0026lt;= N+K \u0026lt;= 18.\nInput Two decimal integers N and K\nOutput Decimal representation of the result\nSample Input 1 2 2 10 Sample Output 1 90 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #include\u0026lt;stdio.h\u0026gt; int a[20],n,k; int cnt; void dfs(int s) { if(s==n) { cnt++; return; } for(int i=0; i\u0026lt;k; i++) { if((s==0\u0026amp;\u0026amp;i==0)||(s\u0026gt;0\u0026amp;\u0026amp;i==0\u0026amp;\u0026amp;a[s-1]==0)) continue; a[s]=i; dfs(s+1); } } int main() { scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;n,\u0026amp;k); cnt=0; dfs(0); printf(\u0026#34;%d\\n\u0026#34;,cnt); return 0; } All through C语言网 compile and run. ","date":"2020-02-05T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1117-k-decimal-number-c-language/","title":"Q 1117 K-Decimal number (C Language)"},{"content":"Q 1110: 2^k decimal numbers (C Language) Time limit: 1Sec Memory Limit: 128MB\nTitle Description Let r be a 2^k progressive number and satisfy the following conditions: (1) r is a 2^k progressive number with at least 2 digits. (2) As a 2^k progressive number, each bit of r is strictly less than the adjacent bit to its right, except for the last bit. (3) After converting r to a binary number q, the total number of bits of q does not exceed w. Here, the positive integers k (1 ≤ k ≤ 9) and w (k \u0026lt; w ≤ 30,000) are given in advance.\nQ: How many different r\u0026rsquo;s are there to satisfy the above condition? Let S be a string of length w (i.e., the string S consists of w \u0026ldquo;0s\u0026rdquo; or \u0026ldquo;1s\u0026rdquo;), and S corresponds to q in condition (3) above. If S can be divided into at least 2 segments, the binary number corresponding to S can be converted into the above 2^k number r. Example: Let k=3 and w=7. Then r is an octal number (2^3=8). Since w=7, the 01 string of length 7 is divided into 3 segments (i.e. 1, 3, 3, the first segment on the left has only one binary bit), the octal numbers that satisfy the condition are 2 digits: the high bit is 1: 6 (i.e., 12, 13, 14, 15, 16, 17), the high bit is 2: 5, \u0026hellip;, the high bit is 6: 1 (i.e., 67). Total 6+5+\u0026hellip;+1=21. 3 digits: The high digit can only be 1, the 2nd digit is 2:5 (i.e. 123, 124, 125, 126, 127), the 2nd digit is 3:4, \u0026hellip;, and the 2nd digit is 6:1 (i.e. 167). In total, 5 + 4 + \u0026hellip; + 1 = 15. Therefore, there are 36 r\u0026rsquo;s that satisfy the requirement.\nInput Only 1 line for two positive integers, separated by a space: k w\nOutput 1 line, a positive integer, is the result of the requested calculation, i.e., the number of different r\u0026rsquo;s that satisfy the condition (expressed as a decimal number), requiring that the highest digit must not be 0, and that no character other than a number (e.g., space, newline, comma, etc.) be inserted between the digits. (Hint: the positive integer as a result may be large, but will not exceed 200 bits)\nSample Input 3 7\nSample Output 36\nC Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;math.h\u0026gt; long C(int n,int m) { long sum = 1; int i; for(i=1;i\u0026lt;=m;i++) { sum *= (n-i); sum /= i; } return sum; } int main() { long sum=0; int k,w,max,wei,high,i; scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;k,\u0026amp;w); max = pow(2,k); wei = w/k+1; high = pow(2,w%k)-1; if(max-wei \u0026lt; high) high = max-wei; for(i=2;i\u0026lt;wei;i++) sum += C(max,i); if(high != 0) sum += (C(max,wei)-C(max-high,wei)); printf(\u0026#34;%d\u0026#34;,sum); return 0; } All through C语言网 compile and run. ","date":"2020-02-04T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1110-2k-decimal-numbers-c-language/","title":"Q 1110 2^k decimal numbers (C Language)"},{"content":"Q 1115: DNA Time limit: 1Sec Memory Limit: 128MB\nTitle Description Since he was a child, Qiang has always loved life science and was always curious about where flowers, plants, birds and animals came from. Finally, when Qiang went to middle school, he was introduced to the sacred term, DNA. This made the one-track minded Qiang scratch his head, \u0026ldquo;If only I could draw it,\u0026rdquo; Qiang shouted. Help him now!\nInput The input contains multiple sets of test data. The first integer N (N\u0026lt;=15), N denotes the number of groups and each group contains two integers a,b. a denotes the number of rows of a unit DNA string, a is odd and 3\u0026lt;=a\u0026lt;=39. b denotes the degree of repetition (1\u0026lt;=b\u0026lt;=20).\nOutput The shape of the output DNA, with a blank line between each set of outputs.\nSample Input 1 2 3 2 3 1 5 4 Sample Output 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #include\u0026lt;stdio.h\u0026gt; int main() { int N,a[20],b[20],i,j,k,p; scanf(\u0026#34;%d\u0026#34;,\u0026amp;N); i = 1; while(i\u0026lt;=N) { scanf(\u0026#34;%d%d\u0026#34;,\u0026amp;a[i],\u0026amp;b[i]); i++; } for(i=1;i\u0026lt;=N;i++) { for(j=1;j\u0026lt;=b[i];j++) { for(k=1;k\u0026lt;a[i];k++) { for(p=1;p\u0026lt;=a[i];p++) { if(p == k || p+k == a[i]+1) printf(\u0026#34;X\u0026#34;); else printf(\u0026#34; \u0026#34;); } printf(\u0026#34;\\n\u0026#34;); } } for(j=1;j\u0026lt;=a[i];j++) { if(j == k || j+k == a[i]+1) printf(\u0026#34;X\u0026#34;); else printf(\u0026#34; \u0026#34;); } printf(\u0026#34;\\n\u0026#34;); if(i != N) printf(\u0026#34;\\n\u0026#34;); } return 0; } All through C语言网 compile and run. ","date":"2020-02-04T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1115-dna-c-language/","title":"Q 1115 DNA (C Language)"},{"content":"Xijing University Tour Guide System Learn data structures + C implementation\ninclude \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;conio.h\u0026gt; #include \u0026lt;string.h\u0026gt; #include \u0026lt;graphics.h\u0026gt; #define MaxViewNum 50 /*Maximum number of attractions 50*/ #define MaxRoad 10000 /*Define the path to infinity*/ typedef int dist[MaxViewNum]; typedef int path[MaxViewNum]; //Define three structures to represent the contents of the diagram typedef struct { char name[30]; /*Name of the attractions*/ char introduce[200]; /*Attractions info*/\tint x,y; /*Coordinates of attractions*/ }JDXX; /*Attractions Information*/ typedef struct { JDXX jd[MaxViewNum]; /*A one-dimensional array of vertices, the zero cell of the array is not used*/ int length[MaxViewNum][MaxViewNum]; /*Storage path length*/ }MGraph; MGraph M; /*Global variable, define M as MGraph type*/ int N=0; /*Global variable, number of current attractions*/ path p; dist d; void init() { int i,j; strcpy(M.jd[1].name,\u0026#34;North Gate\u0026#34;); strcpy(M.jd[1].introduce,\u0026#34;Located on Xijing Road, adjacent to the living area, convenient for shopping and transportation\u0026#34;); strcpy(M.jd[2].name,\u0026#34;Art Boat\u0026#34;); strcpy(M.jd[2].introduce,\u0026#34;Situated on Guihu Lake, leading to the paradise of art\u0026#34;); strcpy(M.jd[3].name,\u0026#34;Flower Street\u0026#34;); strcpy(M.jd[3].introduce,\u0026#34;With the s-shaped flower bed as the background, flowers bloom all year round\u0026#34;); strcpy(M.jd[4].name,\u0026#34;Science Court\u0026#34;); strcpy(M.jd[4].introduce,\u0026#34;Provide space for students to take English listening, computer classes, etc.\u0026#34;); strcpy(M.jd[5].name,\u0026#34;Piazza\u0026#34;); strcpy(M.jd[5].introduce,\u0026#34;Including Bonang National Flag Times Square, which provides recreational activities for students\u0026#34;); strcpy(M.jd[6].name,\u0026#34;Academic Building\u0026#34;); strcpy(M.jd[6].introduce,\u0026#34;The place where students have their daily classes, the hall of knowledge\u0026#34;); strcpy(M.jd[7].name,\u0026#34;Engineering Boat\u0026#34;); strcpy(M.jd[7].introduce,\u0026#34;Provide students with space for experiments, practical training and study\u0026#34;); strcpy(M.jd[8].name,\u0026#34;Library\u0026#34;); strcpy(M.jd[8].introduce,\u0026#34;An environment with a strong cultural heritage for students to read and study quietly\u0026#34;); strcpy(M.jd[9].name,\u0026#34;Apartment Building\u0026#34;); strcpy(M.jd[9].introduce,\u0026#34;11--18 apartment buildings\u0026#34;); strcpy(M.jd[10].name,\u0026#34;Center for College Student Development and Services\u0026#34;); strcpy(M.jd[10].introduce,\u0026#34;Office locations of each school, providing one-stop services for students\u0026#34;); strcpy(M.jd[11].name,\u0026#34;Puratos Restaurant\u0026#34;); strcpy(M.jd[11].introduce,\u0026#34;Four floors of dining hall, providing three meals a day for students\u0026#34;); strcpy(M.jd[12].name,\u0026#34;Jing Hua Grand Hall\u0026#34;); strcpy(M.jd[12].introduce,\u0026#34;The largest auditorium in the school\u0026#34;); strcpy(M.jd[13].name,\u0026#34;Gymnasium\u0026#34;); strcpy(M.jd[13].introduce,\u0026#34;Provide a place for students to play indoor sports\u0026#34;); strcpy(M.jd[14].name,\u0026#34;Scientific Research Building\u0026#34;); strcpy(M.jd[14].introduce,\u0026#34;A place to conduct scientific research\u0026#34;); strcpy(M.jd[15].name,\u0026#34;South playground\u0026#34;); strcpy(M.jd[15].introduce,\u0026#34;Students brush sports software in the evening\u0026#34;); strcpy(M.jd[16].name,\u0026#34;South Lake\u0026#34;); strcpy(M.jd[16].introduce,\u0026#34;Also known as the Lake of Smiles, the lights are very beautiful at night\u0026#34;); strcpy(M.jd[17].name,\u0026#34;South Gate\u0026#34;); strcpy(M.jd[17].introduce,\u0026#34;Conveniently located on Shenhe 2nd Road\u0026#34;); for(i=1;i\u0026lt;=MaxViewNum;i++) { for(j=1;j\u0026lt;=MaxViewNum;j++) { M.length[i][j]=MaxRoad; } } for(i=1;i\u0026lt;=MaxViewNum;i++) M.length[i][i]=0; M.length[1][2]=M.length[2][1]=30; M.length[1][3]=M.length[3][1]=30; M.length[2][3]=M.length[3][2]=30; M.length[2][4]=M.length[4][2]=70; M.length[3][5]=M.length[5][3]=30; M.length[3][6]=M.length[6][3]=50; M.length[4][5]=M.length[5][4]=50; M.length[4][7]=M.length[7][4]=100; M.length[5][6]=M.length[6][5]=30; M.length[6][7]=M.length[7][6]=100; M.length[6][10]=M.length[10][6]=20; M.length[7][8]=M.length[8][7]=30; M.length[7][9]=M.length[9][7]=30; M.length[7][10]=M.length[10][7]=30; M.length[8][9]=M.length[9][8]=30; M.length[9][10]=M.length[10][9]=50; M.length[9][11]=M.length[11][9]=30; M.length[10][11]=M.length[11][10]=30; M.length[11][12]=M.length[12][11]=100; M.length[11][13]=M.length[13][11]=50; M.length[12][13]=M.length[13][12]=50; M.length[12][15]=M.length[15][12]=30; M.length[12][17]=M.length[17][12]=150; M.length[13][14]=M.length[14][13]=70; M.length[13][15]=M.length[15][13]=30; M.length[13][16]=M.length[16][13]=50; M.length[14][16]=M.length[16][14]=50; M.length[15][16]=M.length[16][15]=20; M.length[16][17]=M.length[17][16]=30; N=17; M.jd[1].x=50; M.jd[1].y=25; M.jd[2].x=150; M.jd[2].y=125; M.jd[3].x=250; M.jd[3].y=25; M.jd[4].x=150; M.jd[4].y=475; M.jd[5].x=350; M.jd[5].y=175; M.jd[6].x=475; M.jd[6].y=50; M.jd[7].x=475; M.jd[7].y=475; M.jd[8].x=575; M.jd[8].y=650; M.jd[9].x=675; M.jd[9].y=525; M.jd[10].x=575; M.jd[10].y=150; M.jd[11].x=750; M.jd[11].y=225; M.jd[12].x=575; M.jd[12].y=525; M.jd[13].x=575; M.jd[13].y=225; M.jd[14].x=1075; M.jd[14].y=25; M.jd[15].x=1000; M.jd[15].y=375; M.jd[16].x=1100; M.jd[16].y=225; M.jd[17].x=1175;Attraction M.jd[17].y=325; } void scsyjd() { int t; printf(\u0026#34;All sites are as follows:\\n\u0026#34;); for(t=1;t\u0026lt;=N;t++) { printf(\u0026#34;Number:%d\\n Attraction:%s\\n Introduction:%s\\n\u0026#34;,t,M.jd[t].name,M.jd[t].introduce); } printf(\u0026#34;\\nPress any key to return!\u0026#34;); getch(); } void zengj() { char s1[30],s2[200]; //Attraction Name; Attraction Introduction int t,i,q,p,x,y; //t is the number of Attraction connected to the Attraction; i is the number of Attraction that should be connected to it; //q is the Attraction connected to it; p is the distance between this Attraction and the new Attraction //x is the x value at the Attraction position; y is the y value at the Attraction position N++; printf(\u0026#34;Please enter the Name of this Attraction:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;s1); printf(\u0026#34;Please enter the Introduction of this Attraction:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;s2); printf(\u0026#34;Please enter the x value of the location of this Attraction:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;x); printf(\u0026#34;Please enter the y value for the location of this Attraction:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;y); strcpy(M.jd[N].name,s1); strcpy(M.jd[N].introduce,s2); M.jd[N].x=x; M.jd[N].y=y; printf(\u0026#34;Please enter how many Attraction are connected to this Attraction:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;t); for(i=1;i\u0026lt;=t;i++) { printf(\u0026#34;The %d Attraction is connected to it;\u0026#34;,i); scanf(\u0026#34;%d\u0026#34;,\u0026amp;q); printf(\u0026#34;The distance between them is:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;p); M.length[N][q]=M.length[q][N]=p; } printf(\u0026#34;\\nPress any key to return!\u0026#34;); getch(); } void scjd() { printf(\u0026#34;Please enter the number of Attraction serial numbers to be deleted\u0026#34;); int t,p,Q; scanf(\u0026#34;%d\u0026#34;,\u0026amp;p); Q=p; if(p\u0026lt;=N) { for(t=1;t\u0026lt;=N;t++) for(p=p;p\u0026lt;=N;p++) { M.length[t][p]=M.length[t][p+1]; M.length[p][t]=M.length[p+1][t];\t} for(Q;Q\u0026lt;N;Q++) M.jd[Q]=M.jd[Q+1]; printf(\u0026#34;Deleted successfullyO(∩_∩)O\u0026#34;); } else printf(\u0026#34;Failed to delete←_←\u0026#34;); N--; printf(\u0026#34;\\nPress any key to return!\u0026#34;);\tgetch(); } void gxjd() { int t; char s1[30],s2[200]; printf(\u0026#34;Please enter the Attraction Number to be updated:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;t); if(t\u0026gt;N) printf(\u0026#34;This Attraction does not exist, update failed\u0026#34;); else { printf(\u0026#34;Please enter Attraction Name:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;s1); printf(\u0026#34;Please enter Attraction Introduction:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;s2); strcpy(M.jd[t].name,s1); strcpy(M.jd[t].introduce,s2); printf(\u0026#34;Update complete!\u0026#34;); } printf(\u0026#34;\\nPress any key to return!\u0026#34;); getch(); } void zengjl() { int a,b,c; printf(\u0026#34;Please add a path between those two Attraction\\n\u0026#34;); printf(\u0026#34;Please enter the first Attraction Number:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;a); printf(\u0026#34;Please enter the second Attraction Number:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;b); printf(\u0026#34;Please enter the length of this road:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;c); if(a\u0026gt;N||b\u0026gt;N) printf(\u0026#34;Attraction is out of range of existing Attraction, path addition failed!\u0026#34;); else { M.length[a][b]=M.length[b][a]=c; printf(\u0026#34;Path increase success!\u0026#34;); } printf(\u0026#34;\\nPress any key to return！\u0026#34;); getch(); } void scl() { int a,b; printf(\u0026#34;Please remove the path between the two Attraction\\n\u0026#34;); printf(\u0026#34;Please enter the first Attraction Number:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;a); printf(\u0026#34;Please enter the second Attraction Number:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;b); if(a\u0026gt;N||b\u0026gt;N) printf(\u0026#34;Attraction is out of range of existing Attraction, path deletion failed!\u0026#34;); else { M.length[a][b]=M.length[b][a]=MaxRoad; printf(\u0026#34;Path deleted successfully!\u0026#34;); } printf(\u0026#34;\\nPress any key to return!\u0026#34;); getch(); } void gxl() { int a,b,c; printf(\u0026#34;Please update the road between the two Attraction\\n\u0026#34;); printf(\u0026#34;Please enter the first Attraction Number:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;a); printf(\u0026#34;Please enter the second Attraction Number:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;b); printf(\u0026#34;Please enter the updated length:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;c); if(a\u0026gt;N||b\u0026gt;N) printf(\u0026#34;This path does not exist, path update failed!\u0026#34;); else { M.length[a][b]=M.length[b][a]=c; printf(\u0026#34;Path updated successfully!\u0026#34;); } printf(\u0026#34;\\nPress any key to return!\u0026#34;); getch(); } void cxjd() { int a; printf(\u0026#34;The Attraction Number you are looking for is:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;a); if(a\u0026gt;N) printf(\u0026#34;The Attraction of the query does not exist, the query failed!\u0026#34;); else printf(\u0026#34;Number:%d\\n Attraction:%s\\n Introduction:%s\\n\u0026#34;,a,M.jd[a].name,M.jd[a].introduce); printf(\u0026#34;\\nPress any key to return!\u0026#34;); getch(); } void dijkstra_syjd() { int v0; printf(\u0026#34;Please enter the Attraction of your query:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;v0); boolean final[MaxViewNum]; int i,k,j,v,min,x; for(v=1;v\u0026lt;=N;v++) { final[v]=FALSE; d[v]=M.length[v0][v]; if(d[v]\u0026lt;MaxRoad\u0026amp;\u0026amp;d[v]!=0) p[v]=v0; else p[v]=-1; } final[v0]=TRUE; d[v0]=0; for(i=2;i\u0026lt;=N;i++) { min=MaxRoad; for(k=1;k\u0026lt;=N;++k) if(!final[k]\u0026amp;\u0026amp;d[k]\u0026lt;min) { v=k; min=d[k]; } if(min==MaxRoad) return; final[v]=TRUE; for(k=1;k\u0026lt;=N;++k) if(!final[k]\u0026amp;\u0026amp;(min+M.length[v][k]\u0026lt;d[k])) { d[k]=min+M.length[v][k]; p[k]=v; } } } void printsyjd() { int st[MaxViewNum],i,pre,top=-1; for(i=1;i\u0026lt;=N;i++) { printf(\u0026#34;\\nArrival Attraction %2d The total distance is %5d , The path passed through:\u0026#34;,i,d[i]); st[++top]=i; pre=p[i]; while(pre!=-1) { st[++top]=pre; pre=p[pre]; } while(top\u0026gt;0) { printf(\u0026#34;%d\u0026#34;,st[top--]); if(top\u0026gt;0) printf(\u0026#34;---\u0026#34;); } } getch(); } void dijkstra_ygjd() { int v0; printf(\u0026#34;Please enter the departure Attraction:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;v0); boolean final[MaxViewNum]; int i,k,j,v,min,x; for(v=1;v\u0026lt;=N;v++) { final[v]=FALSE; d[v]=M.length[v0][v]; if(d[v]\u0026lt;MaxRoad\u0026amp;\u0026amp;d[v]!=0) p[v]=v0; else p[v]=-1; } final[v0]=TRUE; d[v0]=0; for(i=2;i\u0026lt;=N;i++) { min=MaxRoad; for(k=1;k\u0026lt;=N;++k) if(!final[k]\u0026amp;\u0026amp;d[k]\u0026lt;min) { v=k; min=d[k]; } if(min==MaxRoad) return; final[v]=TRUE; for(k=1;k\u0026lt;=N;++k) if(!final[k]\u0026amp;\u0026amp;(min+M.length[v][k]\u0026lt;d[k])) { d[k]=min+M.length[v][k]; p[k]=v; } } } void printygjd() { int y; printf(\u0026#34;\\nPlease enter the arrival Attraction:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;y); int st[MaxViewNum],i,pre,top=-1; for(i=1;i\u0026lt;=N;i++) { if(i==y) printf(\u0026#34;\\nThe total distance is %5d , The path passed through:\u0026#34;,d[i]); st[++top]=i; pre=p[i]; while(pre!=-1) { st[++top]=pre; pre=p[pre]; } while(top\u0026gt;0) { if(i==y) { printf(\u0026#34;%d\u0026#34;,st[top--]); if(top\u0026gt;0) printf(\u0026#34;---\u0026#34;); } else top--; } } getch(); } void scdt() { int i,j; char s[100]; strcpy(s,\u0026#34;Map of Xijing University\u0026#34;); initgraph(1200,800); for(i=1;i\u0026lt;=N;i++) { setfillcolor(RGB(225,236,0)); fillcircle(M.jd[i].x,M.jd[i].y,20); outtextxy(M.jd[i].x,M.jd[i].y,M.jd[i].name); } for(i=1;i\u0026lt;=N;i++) for(j=1;j\u0026lt;=N;j++) { if(M.length[i][j]\u0026gt;0\u0026amp;\u0026amp;M.length[i][j]\u0026lt;1000) line(M.jd[i].x,M.jd[i].y,M.jd[j].x,M.jd[j].y); } outtextxy(900,650,s); getch(); closegraph(); } main() { init(); int x; while(1) { printf(\u0026#34;**********************************************************************\\n\u0026#34;); printf(\u0026#34;* =.= =.= *\\n\u0026#34;); printf(\u0026#34;* ` ` *\\n\u0026#34;); printf(\u0026#34;* ` Master, welcome to Xijing~ Meow~ ` *\\n\u0026#34;); printf(\u0026#34;* ` ^-^ ^-^ ` *\\n\u0026#34;); printf(\u0026#34;* ` ^-^ ` *\\n\u0026#34;); printf(\u0026#34;**********************************************************************\\n\u0026#34;); printf(\u0026#34;\\n Xijing Guide System(Enter 0 to exit the program):\u0026#34;); printf(\u0026#34;\\n 1. Output all Attraction and its Introduction\u0026#34;); printf(\u0026#34;\\n 2. Query a certain Attraction and its Introduction\u0026#34;); printf(\u0026#34;\\n 3. Add an Attraction\u0026#34;); printf(\u0026#34;\\n 4. Delete an Attraction\u0026#34;); printf(\u0026#34;\\n 5. Update an Attraction\u0026#34;); printf(\u0026#34;\\n 6. Add a road\u0026#34;); printf(\u0026#34;\\n 7. Remove a road\u0026#34;); printf(\u0026#34;\\n 8. Update a road\u0026#34;); printf(\u0026#34;\\n 9. Query the shortest path from an Attraction to all other Attraction\u0026#34;); printf(\u0026#34;\\n 10. Query the shortest path between two Attraction \u0026#34;); printf(\u0026#34;\\n 11. Output map Already Attraction:%d\\n\u0026#34;,N); printf(\u0026#34;Please enter options:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;x); if(x==0) break; else switch(x) { case 1:scsyjd();break; case 2:cxjd();break; case 3:zengj();break; case 4:scjd();break; case 5:gxjd();break; case 6:zengjl();break; case 7:scl();break; case 8:gxl();break; case 9:dijkstra_syjd();printsyjd();break; case 10:dijkstra_ygjd();printygjd();break; case 11:scdt();break; } system(\u0026#34;cls\u0026#34;); } } ","date":"2019-11-27T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/campus-tour-guide-system-pure-c-implementation-shortest-path-dijkstra-algorithm/","title":"Campus tour guide system (pure C implementation) Shortest path - Dijkstra algorithm"},{"content":"Machine Learning - Bayesian classification experiments 1. 中文文本分类介绍 文本挖掘是指从大量的文本数据中抽取事先未知的、可理解的、最终可用的知识的过程，同时运用这些知识更好的组织信息以便将来参考。\n主要有以下几个方面的应用：\n搜索和信息检索（IR）：存储和文本文档的检索，包括搜索引擎个关键字搜索。\n文本聚类：使用聚类方法，对词汇、片段、段落或文件进行分组和归类。\n文本分类：对片段、段落或文件进行分组和归类，在使用数据挖掘分类方法的基础上，经过训练的标记示例模型。\nWeb挖掘：在互联网上进行数据和文本的挖掘，并特别关注网络的规模和相互的联系。\n信息抽取（IE）：从非结构化文本中识别与提取有关的事实和关系：从非结构化或半结构化文本中抽取结构化数据的过程。\n自然语言处理（NLP）：将语言作为一种有意义、有规则的符号系统，从底层解析和理解语言的任务（例如词性的标注）；目前的技术方法主要从语法、语义的角度发现语言最本质的结构和所表达的意义。\n概念的提取：把单词和短语按语义分成意义相似的组。\n2. 文本分类的一般步骤： （1）预处理：去除文本的噪声信息，例如HTML标签、文本的格式转换、检测句子边界等。\n（2）中文分词：什么是分词？分词有什么用？怎样分词？\n例如一句话：“2019年底部队友谊篮球赛结束”，分词结果为2019/年底/部队/友谊/篮球赛/结束。如果分出的词是底部、队友呢？\n使用中文分词器为文本分词，并去除停用词。\n中文分词和英文分词对比，中文分词难点：没有形式上的分界符。（英文用空格区分单词）\n（3）构建词向量空间：统计文本词频，生成文本的词向量空间。\n词映射到向量空间。余弦相似度。“快乐”、“高兴”、“悲伤”三个向量的余弦？\n余弦相似度用向量空间中两个向量夹角的余弦值作为衡量两个个体间差异的大小。余弦值越接近1，就表明夹角越接近0度，也就是两个向量越相似，这就叫\u0026quot;余弦相似性\u0026quot;。\n（4）权重策略—TF-IDF方法：使用TF-IDF发现特征词，并抽取为反映文档主题的特征。\nTF：词频。\nIDF：逆向文档频率。\n衡量词语重要性的程度。\n（5）分类器：使用朴素贝叶斯算法训练分类器。scikit-learn网站介绍。Naive Bayes\n（6）评价分类结果：分类器的测试结果分析。\n3. 具体操作 （1）下载并安装“结巴”jieba类库。https://pypi.org/project/jieba/\n学习在python中安装外部类库的方法。\n（2）文本语料库的获取和预处理。\n常用的语料库：复旦大学谭松波中文文本分类语料库，搜狐新闻文本分类语料库。\n停用词的清理。什么是停用词？停用词库的获取。hlt_stop_words.txt\njieba中文分词。安装、使用，自行把一段话用三种模式进行分词。\n（3）将分词向量化，TF_IDF方法。\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n（4）使用朴素贝叶斯分类模块。scikit-learn网站查看、学习Naive Bayes分类算法。\n（5）分类结果评估。\nfrom sklearn.metrics import classification_report\nfrom sklearn.metrics import classification accuracy_score\n4. 实验步骤 5. 实验完整代码pythonimport jieba #需要先安装结巴类库，再引入，否则报错 seg_list=jieba.cut(\u0026#34;西京网讯：10月31日晚，“庆祝中华人民共和国成立70周年暨西京学院建校25周年教职工竹竿舞比赛”举行。\u0026#34;,cut_all=True) print(\u0026#34;Full Mode全切分模式:\u0026#34;,\u0026#34;/\u0026#34;.join(seg_list)) seg_list=jieba.cut(\u0026#34;教师五分会的《欢乐西京团》与教师二分会的《跳起来》伴随着活泼的音乐和轻盈的舞蹈，把“欢乐”表现的淋淋尽致。\u0026#34;) print(\u0026#34;搜索引擎分词模式:\u0026#34;,\u0026#34;/\u0026#34;.join(seg_list)) seg_list=jieba.cut(\u0026#34;2019年底部队友谊篮球赛结束\u0026#34;,cut_all=False) print(\u0026#34;默认切分模式:\u0026#34;,\u0026#34;/\u0026#34;.join(seg_list)) seg_list=jieba.cut(\u0026#34;西京网讯：10月31日晚，“庆祝中华人民共和国成立70周年暨西京学院建校25周年教职工竹竿舞比赛”举行。\u0026#34;,cut_all=False) print(\u0026#34;Full Mode全切分模式:\u0026#34;,\u0026#34;/\u0026#34;.join(seg_list)) import os #定义读取文件内容的函数 def readfile(path): #注意文本文件的编码格式，使用自己语料库和测试集txt文件的编码格式。 fp=open(path,\u0026#39;r\u0026#39;,encoding=\u0026#39;ANSI\u0026#39;,errors=\u0026#39;ignore\u0026#39;) content=fp.read() fp.close() return content #定义保存到文件的函数 def savefile(savepath,content): fp=open(savepath,\u0026#39;w\u0026#39;,encoding=\u0026#39;ANSI\u0026#39;,errors=\u0026#39;ignore\u0026#39;) fp.write(content) fp.close() #定义一个存放训练集分词后各文档内容的列表 train_corpus=[] #定义一个存放训练集各文档类别标签的列表 train_label=[] #未分词的训练集语料库路径，替换为自己电脑保存的路径。train_corpus文件夹。 corpus_path=\u0026#34;E:/program/train_corpus/\u0026#34; #训练集分词以后存放路径，自己提前建立好名字为seg_train_corpus的空文件夹 save_path=\u0026#34;E:/program/seg_train_corpus/\u0026#34; #获取未分词的语料库下所有子目录列表 cate_list=os.listdir(corpus_path) print(\u0026#34;努力分词中，请稍等.........\u0026#34;) #获取每个子目录下的所有文件 for mydir in cate_list: class_path=corpus_path+mydir+\u0026#39;/\u0026#39; #语料集中的某个子目录路径 seg_dir=save_path+mydir+\u0026#39;/\u0026#39; #分类后的子目录路径 file_list=os.listdir(class_path) #获取具体的文件名称列表 for file_path in file_list: fullname=class_path + file_path content=readfile(fullname).strip() #str.strip()就是把字符串(str)的头和尾的空格，以及位于头尾的\\n \\t之类给删掉 content=content.replace(\u0026#34;\\r\\n\u0026#34;,\u0026#34;\u0026#34;).strip() #删除换行和多余的空格 content_seg=jieba.cut(content) savefile(seg_dir+file_path,\u0026#34; \u0026#34;.join(content_seg)) train_label.append(mydir) print(\u0026#34;训练集语料库文本分词结束！\u0026#34;) oldpath=r\u0026#34;e:/program/seg_train_corpus/\u0026#34; newpath=r\u0026#34;e:/program/seg_val_corpus/\u0026#34; import random #随机排序文件 import shutil #从训练集中随机取出20%的文件，保存为验证集。 catelist=os.listdir(oldpath) for eachlist in catelist: fullpath=oldpath+eachlist newvalpath=newpath+eachlist+\u0026#34;/\u0026#34; isExists=os.path.exists(newvalpath) #判断路径是否存在，若存在，报错。不存在，创建。 if isExists==True: print(newvalpath+\u0026#34;目录已存在，将不再保存新的文件！请确认是否已划分好。\u0026#34;) else: os.makedirs(newvalpath,exist_ok=True) filename=os.listdir(fullpath) filenumber=len(filename) random.shuffle(filename) #将文件随机排序 splitfile=int(filenumber*0.2) for i in range(splitfile): #将随机抽取出的20%文件保存到验证集目录下。 src=fullpath+\u0026#34;/\u0026#34;+filename[i] shutil.move(src,newvalpath) print(\u0026#34;目录\u0026#34;+newvalpath+\u0026#34;创建成功！\u0026#34;) print(\u0026#34;训练集和验证集划分完毕\u0026#34;) newvalpath #对测试集文档进行分词。注意，测试集中直接保存的文档，没有子目录。 test_corpus_path=\u0026#34;E:/program/test_corpus/\u0026#34; save_test_path=\u0026#34;E:/program/seg_test_corpus/\u0026#34; #自行建立该文件夹 test_file_list=os.listdir(test_corpus_path) #获取具体的文件名称列表 print(\u0026#34;努力分词中，请稍等.........\u0026#34;) for file_path in test_file_list: fullname=test_corpus_path + file_path content=readfile(fullname).strip() #str.strip()就是把字符串(str)的头和尾的空格，以及位于头尾的\\n \\t之类给删掉 content=content.replace(\u0026#34;\\r\\n\u0026#34;,\u0026#34;\u0026#34;).strip() #删除换行和多余的空格 content_seg=jieba.cut(content) savefile(save_test_path+file_path,\u0026#34; \u0026#34;.join(content_seg)) print(\u0026#34;测试集语料库文本分词结束！\u0026#34;) from sklearn.datasets.base import Bunch bunch = Bunch(target_name=[],label=[],filenames=[],contents=[]) #先对训练集进行操作 wordbag_path=\u0026#34;E:/program/train_word_bag/train_set.dat\u0026#34;#train_word_bag文件夹已经自己创建 seg_path=\u0026#34;E:/program/seg_train_corpus/\u0026#34; cate_list=os.listdir(seg_path) bunch.target_name.extend(cate_list)#将类别信息保存到Bunch对象 for mydir in cate_list: class_path=seg_path+mydir+\u0026#34;/\u0026#34; file_list=os.listdir(class_path) for file_path in file_list: fullname=class_path+file_path bunch.label.append(mydir)#保存当前文件的分类标签 bunch.filenames.append(fullname)#保存当前文件的文件路径 bunch.contents.append(readfile(fullname).strip())#保存文件词向量 #Bunch对象持久化 import pickle file_obj=open(wordbag_path,\u0026#34;wb\u0026#34;) pickle.dump(bunch,file_obj) file_obj.close() print(\u0026#34;训练集构建文本对象结束\u0026#34;) from sklearn import feature_extraction from sklearn.feature_extraction.text import TfidfTransformer#TF-IDF向量转换类 from sklearn.feature_extraction.text import TfidfVectorizer#TF-IDF向量生成类 def readbunchobj(path): file_obj=open(path,\u0026#34;rb\u0026#34;) bunch=pickle.load(file_obj) file_obj.close() return bunch def writebunchobj(path,bunchobj): file_obj=open(path,\u0026#34;wb\u0026#34;) pickle.dump(bunchobj,file_obj) file_obj.close() def readfile(path): fp = open(path,\u0026#34;r\u0026#34;,encoding=\u0026#39;ANSI\u0026#39;,errors=\u0026#39;ignore\u0026#39;) content = fp.read() fp.close() return content path=\u0026#34;E:/program/train_word_bag/train_set.dat\u0026#34; bunch=readbunchobj(path) #停用词 stopword_path=\u0026#34;E:/program/hlt_stop_words.txt\u0026#34; stpwrdlst=readfile(stopword_path).splitlines() #构建TF-IDF词向量空间对象 tfidfspace=Bunch(target_name=bunch.target_name,label=bunch.label,filenames=bunch.filenames,tdm=[],vocabulary={}) #使用TfidVectorizer初始化向量空间模型 vectorizer=TfidfVectorizer(stop_words=stpwrdlst,sublinear_tf=True,max_df=0.5) #transformer=TfidfTransformer()#该类会统计每个词语的TF-IDF权值 #文本转为词频矩阵，单独保存字典文件 tfidfspace.tdm=vectorizer.fit_transform(bunch.contents) tfidfspace.vocabulary=vectorizer.vocabulary_ #创建词袋的持久化 space_path=\u0026#34;E:/program/train_word_bag/tfidfspace.dat\u0026#34; writebunchobj(space_path,tfidfspace) tfidfspace.tdm.shape bunch = Bunch(target_name=[],label=[],filenames=[],contents=[]) wordbag_path=\u0026#34;E:/program/val_word_bag/val_set.dat\u0026#34;#train_word_bag文件夹已经自己创建 seg_path=\u0026#34;E:/program/seg_val_corpus/\u0026#34; cate_list=os.listdir(seg_path) bunch.target_name.extend(cate_list)#将类别信息保存到Bunch对象 for mydir in cate_list: class_path=seg_path+mydir+\u0026#34;/\u0026#34; file_list=os.listdir(class_path) for file_path in file_list: fullname=class_path+file_path bunch.label.append(mydir)#保存当前文件的分类标签 bunch.filenames.append(fullname)#保存当前文件的文件路径 bunch.contents.append(readfile(fullname).strip())#保存文件词向量 #Bunch对象持久化 import pickle file_obj=open(wordbag_path,\u0026#34;wb\u0026#34;) pickle.dump(bunch,file_obj) file_obj.close() print(\u0026#34;验证集构建文本对象结束\u0026#34;) #对于验证集生成向量空间，在训练词向量模型时需要加载训练集词袋，将验证集产生的词向量映射到训练集词袋的词典中，生成向量空间模型 path=\u0026#34;E:/program/val_word_bag/val_set.dat\u0026#34; bunch=readbunchobj(path) #停用词 stopword_path=\u0026#34;E:/program/hlt_stop_words.txt\u0026#34; stpwrdlst=readfile(stopword_path).splitlines() #构建TF-IDF词向量空间对象 tfidfspace=Bunch(target_name=bunch.target_name,label=bunch.label,filenames=bunch.filenames,tdm=[],vocabulary={}) #导入训练集词袋 train_path=\u0026#34;E:/program/train_word_bag/tfidfspace.dat\u0026#34; trainbunch=readbunchobj(train_path) #使用TfidVectorizer初始化向量空间模型 vectorizer=TfidfVectorizer(stop_words=stpwrdlst,sublinear_tf=True,max_df=0.5,vocabulary=trainbunch.vocabulary) #transformer=TfidfTransformer()#该类会统计每个词语的TF-IDF权值 #文本转为词频矩阵，单独保存字典文件 tfidfspace.tdm=vectorizer.fit_transform(bunch.contents) tfidfspace.vocabulary=trainbunch.vocabulary #创建词袋的持久化 space_path=\u0026#34;E:/program/val_word_bag/tfidfspace.dat\u0026#34; writebunchobj(space_path,tfidfspace) type(tfidfspace.tdm) tfidfspace.tdm.shape bunch = Bunch(target_name=[],label=[],filenames=[],contents=[]) wordbag_path=\u0026#34;E:/program/test_word_bag/test_set.dat\u0026#34;#test_word_bag文件夹已经自己创建 seg_path=\u0026#34;E:/program/seg_test_corpus/\u0026#34; file_list=os.listdir(seg_path) for file_path in file_list: fullname=seg_path+file_path bunch.filenames.append(fullname)#保存当前文件的文件路径 bunch.contents.append(readfile(fullname).strip())#保存文件词向量 #Bunch对象持久化 file_obj=open(wordbag_path,\u0026#34;wb\u0026#34;) pickle.dump(bunch,file_obj) file_obj.close() print(\u0026#34;测试集构建文本对象结束\u0026#34;) path=\u0026#34;E:/program/test_word_bag/test_set.dat\u0026#34; bunch=readbunchobj(path) #停用词 stopword_path=\u0026#34;E:/program/hlt_stop_words.txt\u0026#34; stpwrdlst=readfile(stopword_path).splitlines() #构建TF-IDF词向量空间对象 tfidfspace=Bunch(target_name=bunch.target_name,label=bunch.label,filenames=bunch.filenames,tdm=[],vocabulary={}) #使用TfidVectorizer初始化向量空间模型 vectorizer=TfidfVectorizer(stop_words=stpwrdlst,sublinear_tf=True,max_df=0.5) transfoemer=TfidfTransformer()#该类会统计每个词语的TF-IDF权值 #文本转为词频矩阵，单独保存字典文件 tfidfspace.tdm=vectorizer.fit_transform(bunch.contents) #tfidfspace.vocabulary=vectorizer.vocabulary #创建词袋的持久化 space_path=\u0026#34;E:/program/test_word_bag/tfidfspace.dat\u0026#34; writebunchobj(space_path,tfidfspace) from sklearn.naive_bayes import MultinomialNB# 导入多项式贝叶斯算法包 # 导入训练集向量空间 trainpath = \u0026#34;E:/program/train_word_bag/tfidfspace.dat\u0026#34; train_set = readbunchobj(trainpath) # 导入验证集向量空间 valpath = \u0026#34;E:/program/val_word_bag/tfidfspace.dat\u0026#34; val_set = readbunchobj(valpath) # 应用贝叶斯算法 # alpha:0.001 alpha 越小，迭代次数越多，精度越高 clf = MultinomialNB(alpha=0.001).fit(train_set.tdm, train_set.label) # 预测分类结果 predicted = clf.predict(val_set.tdm) total = len(predicted) rate = 0 for flabel, file_name, expct_cate in zip(val_set.label, val_set.filenames, predicted): if flabel != expct_cate: rate += 1 print(file_name,\u0026#34;: 实际类别：\u0026#34;, flabel,\u0026#34;--\u0026gt;预测分类：\u0026#34;, expct_cate) # 精度 print(\u0026#34;error_rate:\u0026#34;,float(rate) *100 /float(total),\u0026#34;%\u0026#34;) from sklearn import metrics def metrics_result(actual,predict): print(\u0026#34;精度：{0:.3f}\u0026#34;.format(metrics.precision_score(actual,predict,average=\u0026#39;weighted\u0026#39;))) print(\u0026#34;召回：{0:0.3f}\u0026#34;.format(metrics.recall_score(actual,predict,average=\u0026#39;weighted\u0026#39;))) print(\u0026#34;f1-score:{0:.3f}\u0026#34;.format(metrics.f1_score(actual,predict,average=\u0026#39;weighted\u0026#39;))) metrics_result(test_set.label, predicted) ","date":"2019-11-04T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/machine-learning-bayesian-classification-experiments/","title":"Machine Learning - Bayesian classification experiments"},{"content":"Machine Learning - Linear regression experiments Learning linear regression with scikit-learn and pandas 1. Get the data, define the problem We ran linear regression with publicly available machine learning data from UCI University.\nThe data can be downloaded here:https://archive.ics.uci.edu/ml/datasets/combined+cycle+power+plant The downloaded data can be found as a compressed file, after decompression there is an xlsx file, open it with excel, save it as a csv format, and later use this csv format file to run linear regression.\nThis is a cyclic generation field data with 9568 sample data, each with 5 columns: $AT$ (Temperature), $V$ (Pressure), $AP$ (Humidity), $RH$ (Pressure), $PE$ (Output power). We don\u0026rsquo;t need to get hung up on the exact meaning of each item.\nOur problem is to obtain a linear relationship corresponding to PE as the sample output and $AT, V, AP, RH$ which are the four sample features, and machine learning aims to obtain a linear regression model, i.e:\n$$ PE= \\theta_0+ \\theta_1 \\times AT+ \\theta_2 \\times V + \\theta_3 \\times AP + \\theta_4 \\times RH $$\nAnd all that needs to be learned are the five parameters $\\theta_0, \\theta_1, \\theta_2, \\theta_3, \\theta_4$.\n2. Organizing data Opening this csv reveals that the data are already organized and there are no illegal data, so no preprocessing is needed. However, the data are not normalized, i.e., they are converted to a mean 0, variance 1 format. (scikit-learn will automatically normalize the data for us in linear regression).\nOpen JupyterNotebook, import the dataset in the Home page, and don\u0026rsquo;t forget to upload it. Then create a new Python3 note.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #Importing related class libraries import matplotlib.pyplot as plt #Drawing Gallery #Set up illustrations so that they are visible in Notepad %matplotlib inline import numpy as np import pandas as pd from sklearn import datasets, linear_model #Read data with pandas data = pd.read_csv(\u0026#39;ccpp.csv\u0026#39;) data.describe() #View the first 5 rows of data data.head() #View the last 5 rows of the data data.tail() #View the dimensions of the data data.shape #Data visualization, histogram display data.hist() #Scatter matrix from pandas.plotting import scatter_matrix scatter_matrix(data) 3. Prepare data The dataset has 9568 samples with 5 cases each.\nIn the following, we start preparing the sample features $X$, and we use the four columns $AT, V, AP$ and $RH$ as sample features.\n1 2 X = data[[\u0026#39;AT\u0026#39;,\u0026#39;V\u0026#39;,\u0026#39;AP\u0026#39;,\u0026#39;RH\u0026#39;]] X.head() Prepare the sample output $y$, and we use $PE$ as the sample output.\n1 2 y = data[[\u0026#39;PE\u0026#39;]] y.head() Divide the training and test sets to divide the combination of $X$ and $y$ samples into two parts, one for the training set and one for the test set. Use the train_test_split function, official documentation at\nhttps://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html#sklearn.model_selection.train_test_split\n1 2 from sklearn.model_selection import train_test_split X_train,X_test,y_train,y_test = train_test_split(X, y, random_state=1) Parameters:\ntest_size: the size of the test set. If floating-point, it is between 0.0 and 1.0 and represents the proportion of the test set; if integer, it is the absolute number of test set samples; if not, it is the complement of the training set. By default, the value is 0.25. In addition, it is version dependent.\ntrain_size: the size of the training set. If floating-point, it is between 0.0 and 1.0 and represents the proportion of the training set; if integer, it is the absolute number of training set samples; if not, it is the complement of the test set.\nrandom_state: specifies the random method. An integer or randomState instance, or None. if integer, it specifies the seed of the random number generator; if RandomState instance, it specifies the random number generator; if None, it uses the default random number generator and chooses a random seed.\nshuffle: Boolean value. Whether to reorganize the data before splitting. If shuffle=False, then stratify must be None.\nstratify: array-likeorNone. if not None, then the dataset is split in a hierarchical way and this is used as the class label.\nReturn value: the splitting of the resulting train and test datasets.\n1 2 3 4 5 #Looking at the dimensions of the training and test sets, we can see that 75% of the sample data is used as the training set and 25% of the samples are used as the test set. print(X_train.shape) print(y_train.shape) print(X_test.shape) print(y_test.shape) 4. Training data A linear model with scikit-learn is used to fit our problem.\n1 2 3 fromsklearn.linear_modelimportLinearRegression#Ordinary linear regression model, using least squares to fit the data linreg = LinearRegression() linreg.fit(X_train,y_train) The linear regression fit function is used to fit the input and output data and is called in the form of $model.fit(X,y,sample_weight=None):\n•X:X is the training vector;\n•y:y is the target vector relative to X;\n•sample_weight:Array of weights assigned to each sample, generally not needed and can be omitted. Note: $X$, $y$ and the values returned by model.fit() are 2-D arrays, e.g., $a=[[0]]$\n1 2 3 #After the fit is completed, the resulting model parameters are viewed: print(linreg.intercept_) print(linreg.coef_) This gives us the values of the five parameters that need to be found inside the linear regression model.\n5. Model Evaluation After the model is trained, we need to evaluate how good or bad the model is. For linear regression, we generally use Mean Squared Error (MSE) or Root Mean Squared Error (RMSE) on the test set to evaluate how good or bad the model is. If we get different parameters by other methods and need to choose a model, we use the model parameters with small MSE.\n1 2 3 4 5 6 7 #Model Fitting Test Set y_pred = linreg.predict(X_test) from sklearn import metrics #Calculating MSE with scikit-learn print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y_test,y_pred)) #Calculating RMSE with scikit-learn print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y_test,y_pred))) Experiment with different linear models for training Add the regularization term, Ridge regression model,L2 parametric call Ridge function Students manually adjust the value of alpha and observe the change in results. Think: How does the alpha value relate to over-fitting and under-fitting?\n1 2 3 4 5 from sklearn.linear_model import Ridge rdg = Ridge(alpha=10000,fit_intercept=True) rdg.fit(X_train,y_train) print(rdg.intercept_) print(rdg.coef_) #Model Fitting Test Set\n1 2 3 4 5 6 y_pred = rdg.predict(X_test) from sklearn import metrics #Calculating MSE with scikit-learn print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y_test,y_pred)) #Calculating RMSE with scikit-learn print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y_test,y_pred))) Lasso regression model with L1 paradigm\nCalling the LASSO function\n1 2 3 4 5 from sklearn.linear_model import Lasso las = Lasso(alpha=0.1) las.fit(X_train,y_train) print(las.intercept_) print(las.coef_) #Model Fitting Test Set\n1 2 3 4 5 6 7 y_pred = las.predict(X_test) from sklearn import metrics #Calculating MSE with scikit-learn print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y_test,y_pred)) #Calculating RMSE with scikit-learn print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y_test,y_pred))) print(\u0026#34;Number of iterations:\u0026#34;,las.n_iter_) Cross-validation We can continuously optimize the model by cross-validation using 10-fold cross-validation, i.e., the cv parameter in cross_val_predict is 10:\n1 2 3 4 5 6 7 8 X = data[[\u0026#39;AT\u0026#39;,\u0026#39;V\u0026#39;,\u0026#39;AP\u0026#39;,\u0026#39;RH\u0026#39;]] y = data[[\u0026#39;PE\u0026#39;]] from sklearn.model_selection import cross_val_predict predicted=cross_val_predict(linreg,X,y,cv=10) #Calculating MSE with scikit-learn print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y,predicted)) #Calculating RMSE with scikit-learn print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y,predicted))) 6. Graphical observation of the results Draw a graph to observe the relationship between the true and predicted values. The closer the point is to the middle line y=x, the lower the predicted loss is represented.\n1 2 3 4 5 6 7 fig,ax = plt.subplots() ax.scatter(y,predicted) ax.plot([y.min(),y.max()],[y.min(),y.max()],\u0026#39;k--\u0026#39;,lw=4) #Try to change k-- to r--, r- and observe the line pattern. To see the details of a function, use the help() function. ax.set_xlabel(\u0026#39;Measured\u0026#39;) ax.set_ylabel(\u0026#39;Predicted\u0026#39;) plt.show() 7. python program full source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 import matplotlib.pyplot as plt %matplotlib inline import numpy as np import pandas as pd from sklearn import datasets , linear_model data = pd.read_csv(\u0026#39;ccpp.csv\u0026#39;) data.describe() data.head() data.tail() data.shape data.hist() from pandas.plotting import scatter_matrix scatter_matrix(data) X = data[[\u0026#39;AT\u0026#39;,\u0026#39;V\u0026#39;,\u0026#39;AP\u0026#39;,\u0026#39;RH\u0026#39;]] X.head() y = data[[\u0026#39;PE\u0026#39;]] y.head() from sklearn.model_selection import train_test_split X_train , X_test , y_train , y_test = train_test_split(X , y , random_state=1) print (X_train.shape) print (y_train.shape) print (X_test.shape) print (y_test.shape) from sklearn.linear_model import LinearRegression linreg = LinearRegression() linreg.fit(X_train,y_train) print(linreg.intercept_) print(linreg.coef_) y_pred = linreg.predict(X_test) from sklearn import metrics print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y_test,y_pred)) print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y_test,y_pred))) from sklearn.linear_model import Ridge rdg = Ridge(alpha=8000,fit_intercept=True) rdg.fit(X_train,y_train) print(rdg.intercept_) print(rdg.coef_) y_pred = rdg.predict(X_test) from sklearn import metrics print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y_test,y_pred)) print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y_test,y_pred))) from sklearn.linear_model import Lasso las = Lasso(alpha = 0.1) las.fit(X_train,y_train) print (las.intercept_) print (las.coef_) y_pred = las.predict(X_test) from sklearn import metrics print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y_test,y_pred)) print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y_test,y_pred))) print(\u0026#34;迭代次数：\u0026#34;,las.n_iter_) X = data[[\u0026#39;AT\u0026#39;,\u0026#39;V\u0026#39;,\u0026#39;AP\u0026#39;,\u0026#39;RH\u0026#39;]] y = data[[\u0026#39;PE\u0026#39;]] from sklearn.model_selection import cross_val_predict predicted = cross_val_predict(linreg , X , y , cv=10) print(\u0026#34;MSE:\u0026#34;,metrics.mean_squared_error(y,predicted)) print(\u0026#34;RMSE:\u0026#34;,np.sqrt(metrics.mean_squared_error(y,predicted))) fig , ax = plt.subplots() ax.scatter(y,predicted) ax.plot([y.min(),y.max()],[y.min(),y.max()],\u0026#39;k--\u0026#39;,lw=4) ax.set_xlabel(\u0026#39;Measured\u0026#39;) ax.set_ylabel(\u0026#39;Predictted\u0026#39;) plt.show() ","date":"2019-10-21T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/machine-learning-linear-regression-experiments/","title":"Machine Learning - Linear regression experiments"},{"content":"题目 1456: [历届试题]连号区间数 Time limit: 1Sec Memory Limit: 128MB\nTitle Description Xiao Ming has been thinking about this strange and interesting question these days: How many consecutive number intervals are there in a certain full permutation of 1 to N? The definition of a contiguous interval here is: If all the elements in the interval [L, R] (i.e., the Lth to the Rth elements of the arrangement) are sorted incrementally to obtain a \u0026ldquo;consecutive\u0026rdquo; series of length R-L+1, then the interval is called a consecutive interval. When N is small, Xiao Ming can quickly figure out the answer, but when N becomes large, the problem is not so simple, and now Xiao Ming needs your help.\ninput The first row is a positive integer N (1 \u0026lt; = N \u0026lt; = 50000), representing the size of the full permutation. The second line is N different numbers Pi (1 \u0026lt; = Pi \u0026lt; = N), representing some full permutation of these N numbers.\nOutput Output an integer indicating the number of different concatenated intervals.\nSample Input 1 2 5 3 4 2 5 1 Sample Output 1 9 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #include\u0026lt;stdio.h\u0026gt; int main() { long int n,i,j,max,min,sum=0; scanf(\u0026#34;%ld\u0026#34;,\u0026amp;n); long int a[n+1]; for(i=1;i\u0026lt;=n;i++) scanf(\u0026#34;%ld\u0026#34;,\u0026amp;a[i]); for(i=1;i\u0026lt;n;i++)//denotes the interval starting from the ith position { min=max=a[i]; for(j=i+1;j\u0026lt;=n;j++)//Indicates to end at j bit { if(a[j]\u0026lt;min){min=a[j];} if(a[j]\u0026gt;max){max=a[j];} if(max-min==j-i) sum++; //If the difference between the maximum and minimum values of an interval is equal to the current number of intervals j-i, then the interval must be continuous after necessarily rearranging } } printf(\u0026#34;%ld\\n\u0026#34;,sum+n); return 0; } All through C语言网 compile and run. ","date":"2019-04-01T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1456-past-test-questionsnumber-of-consecutive-number-intervals-c-language/","title":"Q 1456 [Past Test Questions]Number of consecutive number intervals (C Language)"},{"content":"Q 1462: [Basic Exercise VIP]Huffuman Tree Time limit: 1Sec Memory Limit: 128MB\nTitle Description 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 Huffman trees have a wide range of applications in coding. Here, we are only concerned with the process of constructing Huffman trees. Given a column of numbers {pi} = {p0, p1, ..., pn-1}, the process of constructing a Huffman tree from this column is as follows: 1. find the two smallest numbers in {pi}, set to pa and pb, remove pa and pb from {pi}, and add their sum to {pi}. The cost of this process is noted as pa + pb. 2. Repeat step 1 until there is only one number left in {pi}. The total cost of constructing the Huffman tree is obtained by adding up all the costs during the above operation. The task: For a given series, you are now asked to find the total cost of constructing a Huffman tree using that series. For example, for the series {pi} = {5, 3, 8, 2, 9}, the Huffman tree is constructed as follows: 1. Find the two smallest numbers in {5, 3, 8, 2, 9}, which are 2 and 3 respectively, remove them from {pi} and add the sum 5 to get {5, 8, 9, 5} with cost 5. 2. Find the two smallest numbers in {5, 8, 9, 5}, which are 5 and 5, remove them from {pi} and add the sum 10 to get {8, 9, 10} at a cost of 10. 3. Find the two smallest numbers in {8, 9, 10}, which are 8 and 9, remove them from {pi} and add the sum 17 to get {10, 17} at a cost of 17. 4. Find the two smallest numbers in {10, 17}, which are 10 and 17 respectively, remove them from {pi} and add the sum 27 to get {27} at a cost of 27. 5. Now, there is only one number left in the series, 27, and the construction process is finished, and the total cost is 5+10+17+27=59. Input The first line of the input contains a positive integer n (n\u0026lt; =100).\nNext are n positive integers, denoted p0, p1, \u0026hellip;, pn-1, each number not exceeding 1000.\nOutput Output the total cost of constructing a Huffman tree with these numbers.\nSample Input 1 2 5 5 3 8 2 9 Sample Output 1 59 C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #include\u0026lt;stdio.h\u0026gt; #define AUM(x,y) {int t;t=x;x=y;y=t;} //Macro definition, exchange of values. int main() { int n,i,sz[100],j,sum=0,t; scanf(\u0026#34;%d\u0026#34;,\u0026amp;n); for(i=0;i\u0026lt;n;i++) scanf(\u0026#34;%d\u0026#34;,\u0026amp;sz[i]); for(t=n-1;t\u0026gt;=1;t--) { for(i=0;i\u0026lt;n;i++) //Each calculation is preceded by a sort and then the two numbers in the corresponding positions are added together. for(j=0;j\u0026lt;n-1;j++) if(sz[j+1]\u0026gt;sz[j]) AUM(sz[j+1],sz[j]); sz[t-1] = sz[t-1]+sz[t]; sum+=sz[t-1]; } printf(\u0026#34;%d\u0026#34;,sum); return 0; } All through C语言网 compile and run. ","date":"2019-03-01T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1462-basic-exercise-viphuffuman-tree-c-language/","title":"Q 1462 [Basic Exercise VIP]Huffuman Tree (C Language)"},{"content":"Student management system (pure C implementation) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 #include \u0026#34;stdio.h\u0026#34; #include\u0026#34;string.h\u0026#34; #include\u0026#34;stdlib.h\u0026#34; struct Student { char ID[20]; char Name[20]; float Mark1; float Mark2; float Mark3; float Average; }; struct Student students[1000]; int num=0; float Avg(struct Student stu) { return (stu.Mark1+stu.Mark2+stu.Mark3)/3; } int Student_SearchByIndex(char id[]) { int i; for (i=0;i\u0026lt;num;i++) { if (strcmp(students[i].ID,id)==0) { return i; } } return -1; } /*Returns the array subscript by Name*/ int Student_SearchByName(char Name[]) { int i; for (i=0;i\u0026lt;num;i++) { if (strcmp(students[i].Name,Name)==0) { return i; } } return -1; } /*Display a single student record*/ Student number void Student_DisplaySingle(int index) { printf(\u0026#34;%10s%10s%8s%8s%8s%10s\\n\u0026#34;,\u0026#34;Student number\u0026#34;,\u0026#34;Name\u0026#34;,\u0026#34;Higher Mathematics score\u0026#34;,\u0026#34;C Language score\u0026#34;,\u0026#34;Computers score\u0026#34;,\u0026#34;Average score\u0026#34;); printf(\u0026#34;-------------------------------------------------------------\\n\u0026#34;); printf(\u0026#34;%10s%10s%8.2f%8.2f%8.2f%10.2f\\n\u0026#34;,students[index].ID,students[index].Name,students[index].Mark1,students[index].Mark2,students[index].Mark3,students[index].Average); } /*Insert student information*/ void Student_Insert() { while(1) { printf(\u0026#34;Please enter Student number:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;students[num].ID); getchar(); printf(\u0026#34;Please enter Name:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;students[num].Name); getchar(); printf(\u0026#34;Please enter Higher Mathematics score:\u0026#34;); scanf(\u0026#34;%f\u0026#34;,\u0026amp;students[num].Mark1); getchar(); printf(\u0026#34;Please enter C Language score:\u0026#34;); scanf(\u0026#34;%f\u0026#34;,\u0026amp;students[num].Mark2); getchar(); printf(\u0026#34;Please enter Computers score:\u0026#34;); scanf(\u0026#34;%f\u0026#34;,\u0026amp;students[num].Mark3); getchar(); students[num].Average=Avg(students[num]); num++; printf(\u0026#34;Whether to continue?(y/n)\u0026#34;); if (getchar()==\u0026#39;n\u0026#39;) { break; } } } /*Modify student information*/ void Student_Modify() { //float mark1,mark2,mark3; while(1) { char id[20]; int index; printf(\u0026#34;Please enter the student to be modified\u0026#39;s Student number:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;id); getchar(); index=Student_SearchByIndex(id); if (index==-1) { printf(\u0026#34;Students do not exist!\\n\u0026#34;); } else { printf(\u0026#34;The student information you want to modify is:\\n\u0026#34;); Student_DisplaySingle(index); printf(\u0026#34;-- Please enter a new value--\\n\u0026#34;); printf(\u0026#34;Please enter Student number:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;students[index].ID); getchar(); printf(\u0026#34;Please enter Name:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;students[index].Name); getchar(); printf(\u0026#34;Please enter Higher Mathematics score:\u0026#34;); scanf(\u0026#34;%f\u0026#34;,\u0026amp;students[index].Mark1); getchar(); printf(\u0026#34;Please enter C Language score:\u0026#34;); scanf(\u0026#34;%f\u0026#34;,\u0026amp;students[index].Mark2); getchar(); printf(\u0026#34;Please enter Computers score:\u0026#34;); scanf(\u0026#34;%f\u0026#34;,\u0026amp;students[index].Mark3); getchar(); students[index].Average=Avg(students[index]); } printf(\u0026#34;Whether to continue?(y/n)\u0026#34;); if (getchar()==\u0026#39;n\u0026#39;) { break; } } } /*Delete Student Information*/ void Student_Delete() { int i; while(1) { char id[20]; int index; printf(\u0026#34;Please enter the student to be deleted\u0026#39;s Student number:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;id); getchar(); index=Student_SearchByIndex(id); if (index==-1) { printf(\u0026#34;Students do not exist!\\n\u0026#34;); } else { printf(\u0026#34;The student information you want to delete is:\\n\u0026#34;); Student_DisplaySingle(index); printf(\u0026#34;Is it really necessary to delete?(y/n)\u0026#34;); if (getchar()==\u0026#39;y\u0026#39;) { for (i=index;i\u0026lt;num-1;i++) { students[i]=students[i+1];//Move all the objects behind you forward } num--; } getchar(); } printf(\u0026#34;Whether to continue?(y/n)\u0026#34;); if (getchar()==\u0026#39;n\u0026#39;) { break; } } } /*Search by Name*/ void Student_Select() { while(1) { char Name[20]; int index; printf(\u0026#34;Please enter the student\u0026#39;s Name:\u0026#34;); scanf(\u0026#34;%s\u0026#34;,\u0026amp;Name); getchar(); index=Student_SearchByName(Name); if (index==-1) { printf(\u0026#34;Students do not exist!\\n\u0026#34;); } else { printf(\u0026#34;The student information you are looking for is:\\n\u0026#34;); Student_DisplaySingle(index); } printf(\u0026#34;Whether to continue?(y/n)\u0026#34;); if (getchar()==\u0026#39;n\u0026#39;) { break; } } } /*Sort by average*/ void Student_SortByAverage() { int i,j; struct Student tmp; for (i=0;i\u0026lt;num;i++) { for (j=1;j\u0026lt;num-i;j++) { if (students[j-1].Average\u0026lt;students[j].Average) { tmp=students[j-1]; students[j-1]=students[j]; students[j]=tmp; } } } } /*Show student information*/ void Student_Display() { int i; printf(\u0026#34;%10s%10s%8s%8s%8s%10s\\n\u0026#34;,\u0026#34;Student number\u0026#34;,\u0026#34;Name\u0026#34;,\u0026#34;Higher Mathematics score\u0026#34;,\u0026#34;C Language score\u0026#34;,\u0026#34;Computers score\u0026#34;,\u0026#34;Average score\u0026#34;); printf(\u0026#34;-------------------------------------------------------------\\n\u0026#34;); for (i=0;i\u0026lt;num;i++) { printf(\u0026#34;%10s%10s%8.2f%8.2f%8.2f%10.2f\\n\u0026#34;,students[i].ID,students[i].Name,students[i].Mark1,students[i].Mark2,students[i].Mark3,students[i].Average); } } /*Read student information out of the file*/ void IO_ReadInfo() { FILE *fp; int i; if ((fp=fopen(\u0026#34;Database.txt\u0026#34;,\u0026#34;rb\u0026#34;))==NULL) { printf(\u0026#34;Cannot open file!\\n\u0026#34;); return; } if (fread(\u0026amp;num,sizeof(int),1,fp)!=1) { num=-1; } else { for(i=0;i\u0026lt;num;i++) { fread(\u0026amp;students[i],sizeof(struct Student),1,fp); } } fclose(fp); } /*Writing student information to a file*/ void IO_WriteInfo() { FILE *fp; int i; if ((fp=fopen(\u0026#34;Database.txt\u0026#34;,\u0026#34;wb\u0026#34;))==NULL) { printf(\u0026#34;Cannot open file!\\n\u0026#34;); return; } if (fwrite(\u0026amp;num,sizeof(int),1,fp)!=1) { printf(\u0026#34;Write to file error!\\n\u0026#34;); } for (i=0;i\u0026lt;num;i++) { if (fwrite(\u0026amp;students[i],sizeof(struct Student),1,fp)!=1) { printf(\u0026#34;Write to file error!\\n\u0026#34;); } } fclose(fp); } /*Main Program*/ void main() { int choice; IO_ReadInfo(); while(1) { /*Main Menu*/ printf(\u0026#34;\\n------ Student Management System------\\n\u0026#34;); printf(\u0026#34;1. Adding student records\\n\u0026#34;); printf(\u0026#34;2. Modify student records\\n\u0026#34;); printf(\u0026#34;3. Delete student records\\n\u0026#34;); printf(\u0026#34;4. Search Student Records by Name\\n\u0026#34;); printf(\u0026#34;5. Sorted by average score\\n\u0026#34;); printf(\u0026#34;6. Exit\\n\u0026#34;); printf(\u0026#34;Please select(1-6):\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;choice); getchar(); switch(choice) { case 1: Student_Insert(); break; case 2: Student_Modify(); break; case 3: Student_Delete(); break; case 4: Student_Select(); break; case 5: Student_SortByAverage(); Student_Display(); break; case 6: exit(0); break; } IO_WriteInfo(); } } ","date":"2018-12-20T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/student-management-system-pure-c-implementation/","title":"Student management system (pure C implementation)"},{"content":"Q 1116: IP Judgment Time limit: 1Sec Memory Limit: 128MB\nTitle Description In Internet-based programs, we often need to determine the legitimacy of an IP string. A legitimate IP is of the form: A.B.C.D where A, B, C, and D are all integers located in [0, 255]. For simplicity, we specify that no leading zeros are allowed to exist in these four integers, as in the case of 001. Now, please complete this judgment procedure ^_^\nInput The input consists of multiple lines, each line is a string and the input is terminated by \u0026ldquo;End of file\u0026rdquo;. The maximum string length is 30, without spaces and invisible characters.\nOutput For each input, output a separate line If the string is a legitimate IP, output Y, otherwise, output N\nSample Input 1 2 3 4 5 6 1.2.3.4 a.b.c.d 267.43.64.12 12.34.56.bb 210.43.64.129 -123.4.5.6 Sample Output 1 2 3 4 5 6 Y N N N Y N C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #include\u0026lt;stdio.h\u0026gt; #include\u0026lt;string.h\u0026gt; int main() { int a,b,c,d; int k; char s[100]; char end[100]={\u0026#34;End of file\u0026#34;};//Used to determine if the end while(~(k=scanf(\u0026#34;%d.%d.%d.%d\u0026#34;,\u0026amp;a,\u0026amp;b,\u0026amp;c,\u0026amp;d))) { gets(s); if(strcmp(s,end)==0) return 0;//Determine if the end else if(s[0]!=\u0026#39;\\0\u0026#39;) {printf(\u0026#34;N\\n\u0026#34;);continue;} //Print N directly when there are extra strings, and proceed to the next if(k==4 \u0026amp;\u0026amp; a\u0026gt;=0 \u0026amp;\u0026amp; a\u0026lt;=255 \u0026amp;\u0026amp; b\u0026gt;=0 \u0026amp;\u0026amp; b\u0026lt;=255 \u0026amp;\u0026amp; c\u0026gt;=0 \u0026amp;\u0026amp; c\u0026lt;=255 \u0026amp;\u0026amp; d\u0026gt;=0 \u0026amp;\u0026amp; d\u0026lt;=255)//Determine if it fits the question printf(\u0026#34;Y\\n\u0026#34;); else printf(\u0026#34;N\\n\u0026#34;); fflush(stdin);//Clear buffer } return 0; } All through C语言网 compile and run. ","date":"2018-12-01T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1116-ip-judgment-c-language/","title":"Q 1116 IP Judgment (C Language)"},{"content":"Q 1004: [Recursive] The story of the cow Time limit: 1Sec Memory Limit: 128MB\nTitle Description There is a cow that gives birth to a heifer at the beginning of each year. Each heifer also gives birth to one heifer at the beginning of each year, starting from the fourth year. Program how many heifers are there in year n?\nInput The input data consists of multiple test instances, each of which occupies one line and includes an integer n (0\u0026lt;n\u0026lt;55), with n meaning as described in the title. n=0 indicates the end of the input data and is not processed.\nOutput For each test instance, the number of cows at year n is output. Each output occupies one line.\nSample Input 2 4 5 0\nSample Output 2 4 6\nC Code Solution A 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include\u0026lt;stdio.h\u0026gt; int main() { int sum[60],n[60],i,j; sum[1]=1; sum[2]=2; sum[3]=3; for(i=4;i\u0026lt;=55;i++) { sum[i]=sum[i-1]+sum[i-3]; } i=0; do { scanf(\u0026#34;%d\u0026#34;,\u0026amp;n[i]); i++; }while(n[i-1]); for(j=i;j\u0026gt;1;j--) { printf(\u0026#34;%d\u0026#34;,sum[n[i-j]]); printf(\u0026#34;\\n\u0026#34;); } return 0; } Solution B 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; int main() { int i, t; while(scanf(\u0026#34;%d\u0026#34;, \u0026amp;t) != EOF) { if(t == 0) return 0; else { int s[60]; s[0] = 1; s[1] = 2; s[2] = 3; for(i = 3; i \u0026lt; t; i++) { s[i] = s[i - 1] + s[i - 3]; } printf(\u0026#34;%d\\n\u0026#34;, s[t - 1]); } } return 0; } All through C语言网 compile and run. ","date":"2018-11-02T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1004-recursive-the-story-of-the-cow-c-language/","title":"Q 1004 [Recursive] The story of the cow (C Language)"},{"content":"Q 1094: Input and output processing of strings Time limit: 1Sec Memory Limit: 128MB\nTitle Description Input and output processing of strings.\nInput The first line is a positive integer N, up to 100, followed by multiple lines (lines larger than N), each of which may contain spaces and no more than 1000 characters.\nOutput The first N lines of the input string (which may contain spaces) are output as is, and then the remaining strings (which do not contain spaces) are output sequentially by line with a space or carriage return division. A blank line is output between each line of output.\nSample Input 1 2 3 4 2 www.dotcpp.com DOTCPP A C M D O T CPP Sample Output 1 2 3 4 5 6 7 8 9 10 11 www.dotcpp.com DOTCPP A C M D O T CPP C Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include\u0026lt;stdio.h\u0026gt; int main(){ int N, i; scanf(\u0026#34;%d\u0026#34;, \u0026amp;N); getchar(); //Capture carriage return char str[N][1000]; //Used to save the first N lines of the string char extra[1000]; //Used to save additional strings for(i=0; i\u0026lt;N; i++){ //Loop through each string in a specified number of lines gets(str[i]); } for(i=0; scanf(\u0026#34;%c\u0026#34;, \u0026amp;extra[i]) != EOF; i++){ //Enter additional strings, one character at a time, when the end of the input (ctrl+Z) input stops, the benefit in the line feed will not terminate the input } for(i=0; i\u0026lt;N; i++){ printf(\u0026#34;%s\\n\\n\u0026#34;, str[i]); } for(i=0; extra[i] != NULL; i++){ if(extra[i] == \u0026#39; \u0026#39;||extra[i] == \u0026#39;\\n\u0026#39;){ //Line break when there are spaces or line breaks in the extra array printf(\u0026#34;\\n\\n\u0026#34;); continue; } printf(\u0026#34;%c\u0026#34;, extra[i]); } return 0; } All through C语言网 compile and run. ","date":"2018-11-02T00:00:00Z","permalink":"https://javenjin.github.io/blog/p/q-1094-input-and-output-processing-of-strings-c-language/","title":"Q 1094 Input and output processing of strings (C Language)"}]